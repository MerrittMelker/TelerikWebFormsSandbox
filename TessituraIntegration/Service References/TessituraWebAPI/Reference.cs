//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TessituraIntegration.TessituraWebAPI {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tessiturasoftware.com/", ConfigurationName="TessituraWebAPI.TessituraSoap")]
    public interface TessituraSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeats(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeats", ReplyAction="*")]
        System.IAsyncResult BeginGetSeats(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeats(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsBrief", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsBrief(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsBrief", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsBrief(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsBrief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsBriefEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsBriefEx(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsBriefEx", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsBriefEx(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsBriefEx(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message ReserveTicketsExResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ReserveTicketsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsExResponse ReserveTicketsEx(TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ReserveTicketsEx", ReplyAction="*")]
        System.IAsyncResult BeginReserveTicketsEx(TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.ReserveTicketsExResponse EndReserveTicketsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/SMTPListening", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMTPListening(string sOrganizationName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/SMTPListening", ReplyAction="*")]
        System.IAsyncResult BeginSMTPListening(string sOrganizationName, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSMTPListening(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/CalculateFees", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CalculateFees(string sSessionKey, int iOrderNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/CalculateFees", ReplyAction="*")]
        System.IAsyncResult BeginCalculateFees(string sSessionKey, int iOrderNo, System.AsyncCallback callback, object asyncState);
        
        void EndCalculateFees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOSDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformanceDetailWithDiscountingSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOSDataSet", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailWithDiscountingSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformanceDetailWithDiscountingSYOSDataSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetGiftAidInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetGiftAidInfo(string SessionKey, int iGiftaid_type, char cActive_only);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetGiftAidInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetGiftAidInfo(string SessionKey, int iGiftaid_type, char cActive_only, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetGiftAidInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ValidateLimits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ValidateLimits(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ValidateLimits", ReplyAction="*")]
        System.IAsyncResult BeginValidateLimits(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req, System.AsyncCallback callback, object asyncState);
        
        void EndValidateLimits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOSEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.PerformanceEx2 GetPerformanceDetailWithDiscountingSYOSEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOSEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailWithDiscountingSYOSEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.PerformanceEx2 EndGetPerformanceDetailWithDiscountingSYOSEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformancesEx4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformancesEx4(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformancesEx4", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformancesEx4(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndGetPerformancesEx4(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionDetailEx3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionDetailEx3(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionDetailEx3", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionDetailEx3(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductionDetailEx3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetConstituentsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetConstituentsEx(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetConstituentsEx", ReplyAction="*")]
        System.IAsyncResult BeginGetConstituentsEx(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetConstituentsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/PrintTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PrintTickets(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/PrintTickets", ReplyAction="*")]
        System.IAsyncResult BeginPrintTickets(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndPrintTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/DestroyCache", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DestroyCache();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/DestroyCache", ReplyAction="*")]
        System.IAsyncResult BeginDestroyCache(System.AsyncCallback callback, object asyncState);
        
        void EndDestroyCache(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/SendTicketEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendTicketEmail(string sSessionKey, int iTemplateNo, string sRecipientEmail, string sOrderId, string sLineItems, string sSubLineItems, bool bNewTicketNumberForReprints, string sAdditionalValues);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/SendTicketEmail", ReplyAction="*")]
        System.IAsyncResult BeginSendTicketEmail(string sSessionKey, int iTemplateNo, string sRecipientEmail, string sOrderId, string sLineItems, string sSubLineItems, bool bNewTicketNumberForReprints, string sAdditionalValues, System.AsyncCallback callback, object asyncState);
        
        bool EndSendTicketEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ShiftContext", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShiftContext(string sSessionKey, int contextCustomerNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ShiftContext", ReplyAction="*")]
        System.IAsyncResult BeginShiftContext(string sSessionKey, int contextCustomerNo, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndShiftContext(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/CreateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateLogin(string sSessionKey, int iCustomerNumber, string sUID, int iLoginType, string sEmail, string sPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/CreateLogin", ReplyAction="*")]
        System.IAsyncResult BeginCreateLogin(string sSessionKey, int iCustomerNumber, string sUID, int iLoginType, string sEmail, string sPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CheckoutEx4Response has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/CheckoutEx4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx4Response CheckoutEx4(TessituraIntegration.TessituraWebAPI.CheckoutEx4Request request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/CheckoutEx4", ReplyAction="*")]
        System.IAsyncResult BeginCheckoutEx4(TessituraIntegration.TessituraWebAPI.CheckoutEx4Request request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.CheckoutEx4Response EndCheckoutEx4(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message LoginEx3Response has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoginEx3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.LoginEx3Response LoginEx3(TessituraIntegration.TessituraWebAPI.LoginEx3Request request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoginEx3", ReplyAction="*")]
        System.IAsyncResult BeginLoginEx3(TessituraIntegration.TessituraWebAPI.LoginEx3Request request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.LoginEx3Response EndLoginEx3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/MaintainOrderInitiatorRecipient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool MaintainOrderInitiatorRecipient(string sSessionKey, int iInitiatorNumber, int iRecipientNumber, int iLineItemID, string sSubLineItemIDs);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/MaintainOrderInitiatorRecipient", ReplyAction="*")]
        System.IAsyncResult BeginMaintainOrderInitiatorRecipient(string sSessionKey, int iInitiatorNumber, int iRecipientNumber, int iLineItemID, string sSubLineItemIDs, System.AsyncCallback callback, object asyncState);
        
        bool EndMaintainOrderInitiatorRecipient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerSeatFees", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerSeatFees(int iPerfNo, int iPackageNo, int iMOS, int iPriceType, char cDetailLevel, string sPriceDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerSeatFees", ReplyAction="*")]
        System.IAsyncResult BeginGetPerSeatFees(int iPerfNo, int iPackageNo, int iMOS, int iPriceType, char cDetailLevel, string sPriceDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerSeatFees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/Batch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.BatchResponse[] Batch(TessituraIntegration.TessituraWebAPI.BatchRequest[] requests);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/Batch", ReplyAction="*")]
        System.IAsyncResult BeginBatch(TessituraIntegration.TessituraWebAPI.BatchRequest[] requests, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.BatchResponse[] EndBatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateGiftAidInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateGiftAidInfo(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateGiftAidInfo", ReplyAction="*")]
        System.IAsyncResult BeginUpdateGiftAidInfo(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateGiftAidInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/TransferCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void TransferCart(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/TransferCart", ReplyAction="*")]
        System.IAsyncResult BeginTransferCart(string SessionKey, System.AsyncCallback callback, object asyncState);
        
        void EndTransferCart(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddSubPackageItemResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddSubPackageItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemResponse AddSubPackageItem(TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddSubPackageItem", ReplyAction="*")]
        System.IAsyncResult BeginAddSubPackageItem(TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemResponse EndAddSubPackageItem(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddSubPackageItemSeatedResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddSubPackageItemSeated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedResponse AddSubPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddSubPackageItemSeated", ReplyAction="*")]
        System.IAsyncResult BeginAddSubPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedResponse EndAddSubPackageItemSeated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateCustomOrderData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateCustomOrderData(string SessionKey, int RefNo, int FieldIndex, string FieldValue);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateCustomOrderData", ReplyAction="*")]
        System.IAsyncResult BeginUpdateCustomOrderData(string SessionKey, int RefNo, int FieldIndex, string FieldValue, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateCustomOrderData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddOrderCommentsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddOrderCommentsEx(string SessionKey, string Comment, int LineItemID, char LineItemType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddOrderCommentsEx", ReplyAction="*")]
        System.IAsyncResult BeginAddOrderCommentsEx(string SessionKey, string Comment, int LineItemID, char LineItemType, System.AsyncCallback callback, object asyncState);
        
        void EndAddOrderCommentsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveOrderCommentsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveOrderCommentsEx(string SessionKey, int LineItemID, char LineItemType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveOrderCommentsEx", ReplyAction="*")]
        System.IAsyncResult BeginRemoveOrderCommentsEx(string SessionKey, int LineItemID, char LineItemType, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveOrderCommentsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionDetailEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionDetailEx(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionDetailEx", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionDetailEx(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductionDetailEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetLocalData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLocalData(string SessionKey, int LocalDataTableIndex, int RetrievalKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetLocalData", ReplyAction="*")]
        System.IAsyncResult BeginGetLocalData(string SessionKey, int LocalDataTableIndex, int RetrievalKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetLocalData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateLocalData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateLocalData(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateLocalData", ReplyAction="*")]
        System.IAsyncResult BeginUpdateLocalData(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateLocalData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPromoCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetPromoCode(string SessionKey, string PromotionCodeString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPromoCode", ReplyAction="*")]
        System.IAsyncResult BeginGetPromoCode(string SessionKey, string PromotionCodeString, System.AsyncCallback callback, object asyncState);
        
        int EndGetPromoCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetStateProvinceEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStateProvinceEx(string CountryIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetStateProvinceEx", ReplyAction="*")]
        System.IAsyncResult BeginGetStateProvinceEx(string CountryIds, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetStateProvinceEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ValidateSuperPackages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateSuperPackages(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ValidateSuperPackages", ReplyAction="*")]
        System.IAsyncResult BeginValidateSuperPackages(string SessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndValidateSuperPackages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/TessituraSeatServerListeningViaWebSeatServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool TessituraSeatServerListeningViaWebSeatServer();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/TessituraSeatServerListeningViaWebSeatServer", ReplyAction="*")]
        System.IAsyncResult BeginTessituraSeatServerListeningViaWebSeatServer(System.AsyncCallback callback, object asyncState);
        
        bool EndTessituraSeatServerListeningViaWebSeatServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/TessituraCreditCardServerListening", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool TessituraCreditCardServerListening();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/TessituraCreditCardServerListening", ReplyAction="*")]
        System.IAsyncResult BeginTessituraCreditCardServerListening(System.AsyncCallback callback, object asyncState);
        
        bool EndTessituraCreditCardServerListening(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetOrderDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOrderDetails(string SessionKey, int OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetOrderDetails", ReplyAction="*")]
        System.IAsyncResult BeginGetOrderDetails(string SessionKey, int OrderNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetOrderDetails(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message LoginConstituentResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoginConstituent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.LoginConstituentResponse LoginConstituent(TessituraIntegration.TessituraWebAPI.LoginConstituentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoginConstituent", ReplyAction="*")]
        System.IAsyncResult BeginLoginConstituent(TessituraIntegration.TessituraWebAPI.LoginConstituentRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.LoginConstituentResponse EndLoginConstituent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveSuperPackageItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveSuperPackageItem(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveSuperPackageItem", ReplyAction="*")]
        System.IAsyncResult BeginRemoveSuperPackageItem(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveSuperPackageItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsByZone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsByZone(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsByZone", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsByZone(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsByZone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsByZoneBrief", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsByZoneBrief(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsByZoneBrief", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsByZoneBrief(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsByZoneBrief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailSYOS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.Performance GetPerformanceDetailSYOS(string SessionKey, int iPerf_no, short iModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailSYOS", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailSYOS(string SessionKey, int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.Performance EndGetPerformanceDetailSYOS(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddNFSPackagePerformanceItemResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddNFSPackagePerformanceItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemResponse AddNFSPackagePerformanceItem(TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddNFSPackagePerformanceItem", ReplyAction="*")]
        System.IAsyncResult BeginAddNFSPackagePerformanceItem(TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemResponse EndAddNFSPackagePerformanceItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetNFSPackageDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNFSPackageDetail(string SessionKey, int PackageID, int ModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetNFSPackageDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetNFSPackageDetail(string SessionKey, int PackageID, int ModeOfSale, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetNFSPackageDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ValidateNFSPackages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateNFSPackages(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ValidateNFSPackages", ReplyAction="*")]
        System.IAsyncResult BeginValidateNFSPackages(string SessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndValidateNFSPackages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveNFSPackage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveNFSPackage(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveNFSPackage", ReplyAction="*")]
        System.IAsyncResult BeginRemoveNFSPackage(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveNFSPackage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsBySection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsBySection(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsBySection", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsBySection(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsBySection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsBySectionBrief", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsBySectionBrief(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsBySectionBrief", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsBySectionBrief(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsBySectionBrief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetGiftCertificateInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetGiftCertificateInfo(string SessionKey, string RedemptionCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetGiftCertificateInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetGiftCertificateInfo(string SessionKey, string RedemptionCode, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetGiftCertificateInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetCityStateProvinceByPostalCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCityStateProvinceByPostalCode(string sSessionKey, string sPostalCode, int iCountry);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetCityStateProvinceByPostalCode", ReplyAction="*")]
        System.IAsyncResult BeginGetCityStateProvinceByPostalCode(string sSessionKey, string sPostalCode, int iCountry, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCityStateProvinceByPostalCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateAddress(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateAddress", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAddress(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndUpdateAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateAccountInfoEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateAccountInfoEx2(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateAccountInfoEx2", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAccountInfoEx2(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndUpdateAccountInfoEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateOrderDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateOrderDetails(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateOrderDetails", ReplyAction="*")]
        System.IAsyncResult BeginUpdateOrderDetails(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateOrderDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetWebContent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWebContent(string sSessionKey, int iInventoryNumber, int iPackageNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetWebContent", ReplyAction="*")]
        System.IAsyncResult BeginGetWebContent(string sSessionKey, int iInventoryNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetWebContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetFees", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetFees(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetFees", ReplyAction="*")]
        System.IAsyncResult BeginGetFees(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetFees(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message UpdateFeeResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateFee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.UpdateFeeResponse UpdateFee(TessituraIntegration.TessituraWebAPI.UpdateFeeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateFee", ReplyAction="*")]
        System.IAsyncResult BeginUpdateFee(TessituraIntegration.TessituraWebAPI.UpdateFeeRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.UpdateFeeResponse EndUpdateFee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveFee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveFee(string sSessionKey, int iFeeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveFee", ReplyAction="*")]
        System.IAsyncResult BeginRemoveFee(string sSessionKey, int iFeeID, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveFee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetReturnTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReturnTickets(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetReturnTickets", ReplyAction="*")]
        System.IAsyncResult BeginGetReturnTickets(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetReturnTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ReturnTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ReturnTicket(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ReturnTicket", ReplyAction="*")]
        System.IAsyncResult BeginReturnTicket(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate, System.AsyncCallback callback, object asyncState);
        
        void EndReturnTicket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetAttributes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAttributes(string sSessionKey, int iAttributeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetAttributes", ReplyAction="*")]
        System.IAsyncResult BeginGetAttributes(string sSessionKey, int iAttributeID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetAttributes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateAssociation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateAssociation(string sSessionKey, int iConstN1N2, int iAssociationID, int iCustomerNo, string sName, int iAssocN1N2, int iTypeID, string sStartDate, string sEndDate, string sNotes, string sTitle, decimal dSalary, string sGender, string sBirthDate, string sInactive);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateAssociation", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAssociation(
                    string sSessionKey, 
                    int iConstN1N2, 
                    int iAssociationID, 
                    int iCustomerNo, 
                    string sName, 
                    int iAssocN1N2, 
                    int iTypeID, 
                    string sStartDate, 
                    string sEndDate, 
                    string sNotes, 
                    string sTitle, 
                    decimal dSalary, 
                    string sGender, 
                    string sBirthDate, 
                    string sInactive, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndUpdateAssociation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveAssociation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveAssociation(string sSessionKey, int iAssociationID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveAssociation", ReplyAction="*")]
        System.IAsyncResult BeginRemoveAssociation(string sSessionKey, int iAssociationID, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveAssociation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddConstituent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddConstituent(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddConstituent", ReplyAction="*")]
        System.IAsyncResult BeginAddConstituent(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        int EndAddConstituent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateRanking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateRanking(string sSessionKey, int iRankingTypeID, int iRank);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateRanking", ReplyAction="*")]
        System.IAsyncResult BeginUpdateRanking(string sSessionKey, int iRankingTypeID, int iRank, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdateRanking(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateConstituentInterestsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateConstituentInterestsEx(string sSessionKey, string sPreferences, int iN1N2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateConstituentInterestsEx", ReplyAction="*")]
        System.IAsyncResult BeginUpdateConstituentInterestsEx(string sSessionKey, string sPreferences, int iN1N2, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdateConstituentInterestsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateEAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateEAddress(string sSessionKey, int iAddressNumber, string sEmail, string sPurposes, int iAddressType, bool bInActive, string sStartDate, string sEndDate, string sMonths, string sPrimaryInd, string sMarketInd, int iDefaultSal, string sHtmlInd, int iN1N2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateEAddress", ReplyAction="*")]
        System.IAsyncResult BeginUpdateEAddress(
                    string sSessionKey, 
                    int iAddressNumber, 
                    string sEmail, 
                    string sPurposes, 
                    int iAddressType, 
                    bool bInActive, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sPrimaryInd, 
                    string sMarketInd, 
                    int iDefaultSal, 
                    string sHtmlInd, 
                    int iN1N2, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndUpdateEAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsByZones", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsByZones(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsByZones", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsByZones(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsByZones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsByZonesBrief", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsByZonesBrief(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsByZonesBrief", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsByZonesBrief(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsByZonesBrief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsBySections", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsBySections(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsBySections", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsBySections(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsBySections(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsBySectionsBrief", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsBySectionsBrief(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsBySectionsBrief", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsBySectionsBrief(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsBySectionsBrief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetZonesPerSection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetZonesPerSection(string sSessionKey, int iPerformanceNumber, string sSections);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetZonesPerSection", ReplyAction="*")]
        System.IAsyncResult BeginGetZonesPerSection(string sSessionKey, int iPerformanceNumber, string sSections, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetZonesPerSection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetScreens", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetScreens(string sSessionKey, int iPerformanceNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetScreens", ReplyAction="*")]
        System.IAsyncResult BeginGetScreens(string sSessionKey, int iPerformanceNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetScreens(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/DisconnectSessionSeatServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DisconnectSessionSeatServer(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/DisconnectSessionSeatServer", ReplyAction="*")]
        System.IAsyncResult BeginDisconnectSessionSeatServer(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        void EndDisconnectSessionSeatServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/WebSeatServerConnectionCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int WebSeatServerConnectionCount();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/WebSeatServerConnectionCount", ReplyAction="*")]
        System.IAsyncResult BeginWebSeatServerConnectionCount(System.AsyncCallback callback, object asyncState);
        
        int EndWebSeatServerConnectionCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductions(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductions", ReplyAction="*")]
        System.IAsyncResult BeginGetProductions(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionCredits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionCredits(string sSessionKey, int iProdSeasonNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionCredits", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionCredits(string sSessionKey, int iProdSeasonNo, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductionCredits(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message LoginExResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoginEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.LoginExResponse LoginEx(TessituraIntegration.TessituraWebAPI.LoginExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoginEx", ReplyAction="*")]
        System.IAsyncResult BeginLoginEx(TessituraIntegration.TessituraWebAPI.LoginExRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.LoginExResponse EndLoginEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetTicketHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTicketHistory(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetTicketHistory", ReplyAction="*")]
        System.IAsyncResult BeginGetTicketHistory(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetTicketHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSubscriptionHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscriptionHistory(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSubscriptionHistory", ReplyAction="*")]
        System.IAsyncResult BeginGetSubscriptionHistory(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSubscriptionHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddOrderCommentsEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddOrderCommentsEx2(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddOrderCommentsEx2", ReplyAction="*")]
        System.IAsyncResult BeginAddOrderCommentsEx2(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo, System.AsyncCallback callback, object asyncState);
        
        void EndAddOrderCommentsEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPromoCodeEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPromoCodeEx(string SessionKey, string PromotionCodeString, int PromotionCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPromoCodeEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPromoCodeEx(string SessionKey, string PromotionCodeString, int PromotionCode, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPromoCodeEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionsEx(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionsEx", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionsEx(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductionsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetAPIDiagnostics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAPIDiagnostics();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetAPIDiagnostics", ReplyAction="*")]
        System.IAsyncResult BeginGetAPIDiagnostics(System.AsyncCallback callback, object asyncState);
        
        string EndGetAPIDiagnostics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ValidateTessituraUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidateTessituraUser(string sSessionKey, string sTessituraUsername, string sTessituraPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ValidateTessituraUser", ReplyAction="*")]
        System.IAsyncResult BeginValidateTessituraUser(string sSessionKey, string sTessituraUsername, string sTessituraPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateTessituraUser(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CheckoutEx2Response has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/CheckoutEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx2Response CheckoutEx2(TessituraIntegration.TessituraWebAPI.CheckoutEx2Request request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/CheckoutEx2", ReplyAction="*")]
        System.IAsyncResult BeginCheckoutEx2(TessituraIntegration.TessituraWebAPI.CheckoutEx2Request request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.CheckoutEx2Response EndCheckoutEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailSYOSDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformanceDetailSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailSYOSDataSet", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformanceDetailSYOSDataSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdatePhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdatePhone(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdatePhone", ReplyAction="*")]
        System.IAsyncResult BeginUpdatePhone(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdatePhone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemovePhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemovePhone(string sSessionKey, int iPhoneNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemovePhone", ReplyAction="*")]
        System.IAsyncResult BeginRemovePhone(string sSessionKey, int iPhoneNo, System.AsyncCallback callback, object asyncState);
        
        void EndRemovePhone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateSpecialActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateSpecialActivity(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateSpecialActivity", ReplyAction="*")]
        System.IAsyncResult BeginUpdateSpecialActivity(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdateSpecialActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSpecialActivities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSpecialActivities(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSpecialActivities", ReplyAction="*")]
        System.IAsyncResult BeginGetSpecialActivities(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSpecialActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateConstituency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateConstituency(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateConstituency", ReplyAction="*")]
        System.IAsyncResult BeginUpdateConstituency(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdateConstituency(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveConstituency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveConstituency(string sSessionKey, int iConstituencyNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveConstituency", ReplyAction="*")]
        System.IAsyncResult BeginRemoveConstituency(string sSessionKey, int iConstituencyNo, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveConstituency(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetHoldCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHoldCodes(string sSessionKey, string sTessUID, string sTessPWD);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetHoldCodes", ReplyAction="*")]
        System.IAsyncResult BeginGetHoldCodes(string sSessionKey, string sTessUID, string sTessPWD, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetHoldCodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateHoldCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateHoldCode", ReplyAction="*")]
        System.IAsyncResult BeginUpdateHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateHoldCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveHoldCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveHoldCode", ReplyAction="*")]
        System.IAsyncResult BeginRemoveHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveHoldCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetOrderConfirmationEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.Email GetOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetOrderConfirmationEmail", ReplyAction="*")]
        System.IAsyncResult BeginGetOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.Email EndGetOrderConfirmationEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/SendOrderConfirmationEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/SendOrderConfirmationEmail", ReplyAction="*")]
        System.IAsyncResult BeginSendOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject, System.AsyncCallback callback, object asyncState);
        
        bool EndSendOrderConfirmationEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/TestOrderConfirmationEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool TestOrderConfirmationEmail(string sEmailAddress, int iTemplateNo, int iOrganizationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/TestOrderConfirmationEmail", ReplyAction="*")]
        System.IAsyncResult BeginTestOrderConfirmationEmail(string sEmailAddress, int iTemplateNo, int iOrganizationId, System.AsyncCallback callback, object asyncState);
        
        bool EndTestOrderConfirmationEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AlterTicketExpiration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime AlterTicketExpiration(string sSessionKey, string sExpirationTime, int iOffsetSeconds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AlterTicketExpiration", ReplyAction="*")]
        System.IAsyncResult BeginAlterTicketExpiration(string sSessionKey, string sExpirationTime, int iOffsetSeconds, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndAlterTicketExpiration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetTicketExpiration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetTicketExpiration(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetTicketExpiration", ReplyAction="*")]
        System.IAsyncResult BeginGetTicketExpiration(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetTicketExpiration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetMaxTicketAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetMaxTicketAmount();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetMaxTicketAmount", ReplyAction="*")]
        System.IAsyncResult BeginGetMaxTicketAmount(System.AsyncCallback callback, object asyncState);
        
        int EndGetMaxTicketAmount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetLocalDataEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLocalDataEx(string SessionKey, int LocalDataTableIndex, string RetrievalKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetLocalDataEx", ReplyAction="*")]
        System.IAsyncResult BeginGetLocalDataEx(string SessionKey, int LocalDataTableIndex, string RetrievalKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetLocalDataEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformancesEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformancesEx2(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformancesEx2", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformancesEx2(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformancesEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionsEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionsEx2(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionsEx2", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionsEx2(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductionsEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackagesEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackagesEx2(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackagesEx2", ReplyAction="*")]
        System.IAsyncResult BeginGetPackagesEx2(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndGetPackagesEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ExecuteLocalProcedure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ExecuteLocalProcedure(string SessionKey, int LocalProcedureId, string LocalProcedureValues);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ExecuteLocalProcedure", ReplyAction="*")]
        System.IAsyncResult BeginExecuteLocalProcedure(string SessionKey, int LocalProcedureId, string LocalProcedureValues, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndExecuteLocalProcedure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/SendCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendCredentials(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/SendCredentials", ReplyAction="*")]
        System.IAsyncResult BeginSendCredentials(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID, System.AsyncCallback callback, object asyncState);
        
        bool EndSendCredentials(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message LoginEx2Response has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoginEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.LoginEx2Response LoginEx2(TessituraIntegration.TessituraWebAPI.LoginEx2Request request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoginEx2", ReplyAction="*")]
        System.IAsyncResult BeginLoginEx2(TessituraIntegration.TessituraWebAPI.LoginEx2Request request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.LoginEx2Response EndLoginEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ChangeModeOfSaleEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ChangeModeOfSaleEx(string SessionKey, int NewModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ChangeModeOfSaleEx", ReplyAction="*")]
        System.IAsyncResult BeginChangeModeOfSaleEx(string SessionKey, int NewModeOfSale, System.AsyncCallback callback, object asyncState);
        
        int EndChangeModeOfSaleEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateSourceCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateSourceCode(string SessionKey, int NewPromoCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateSourceCode", ReplyAction="*")]
        System.IAsyncResult BeginUpdateSourceCode(string SessionKey, int NewPromoCode, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSourceCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/CreatePaymentPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreatePaymentPlan(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/CreatePaymentPlan", ReplyAction="*")]
        System.IAsyncResult BeginCreatePaymentPlan(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndCreatePaymentPlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ValidateTessituraUserEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateTessituraUserEx(string sSessionKey, string sTessituraUsername, string sTessituraPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ValidateTessituraUserEx", ReplyAction="*")]
        System.IAsyncResult BeginValidateTessituraUserEx(string sSessionKey, string sTessituraUsername, string sTessituraPassword, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndValidateTessituraUserEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPermissions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPermissions(string sSessionKey, string sUserGroupId, int iSecurityObjectId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPermissions", ReplyAction="*")]
        System.IAsyncResult BeginGetPermissions(string sSessionKey, string sUserGroupId, int iSecurityObjectId, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPermissions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatSummary(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatSummary", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatSummary(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatSummary(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CheckoutEx3Response has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/CheckoutEx3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx3Response CheckoutEx3(TessituraIntegration.TessituraWebAPI.CheckoutEx3Request request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/CheckoutEx3", ReplyAction="*")]
        System.IAsyncResult BeginCheckoutEx3(TessituraIntegration.TessituraWebAPI.CheckoutEx3Request request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.CheckoutEx3Response EndCheckoutEx3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPrintAtHomeSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPrintAtHomeSettings();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPrintAtHomeSettings", ReplyAction="*")]
        System.IAsyncResult BeginGetPrintAtHomeSettings(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPrintAtHomeSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetConstituentInfoEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetConstituentInfoEx(string SessionKey, string TableListTokens);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetConstituentInfoEx", ReplyAction="*")]
        System.IAsyncResult BeginGetConstituentInfoEx(string SessionKey, string TableListTokens, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetConstituentInfoEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformancesEx3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformancesEx3(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, string sPerformanceIds, string sSeasonIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformancesEx3", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformancesEx3(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndGetPerformancesEx3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionsEx3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionsEx3(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionsEx3", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionsEx3(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndGetProductionsEx3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackagesEx3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackagesEx3(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackagesEx3", ReplyAction="*")]
        System.IAsyncResult BeginGetPackagesEx3(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndGetPackagesEx3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformanceDetailEx(int iPerf_no, short iModeOfSale, string sContentType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailEx(int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformanceDetailEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformanceDetailWithDiscountingEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailWithDiscountingEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformanceDetailWithDiscountingEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetContactOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetContactOptions(string sSessionKey, string sRestrictionType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetContactOptions", ReplyAction="*")]
        System.IAsyncResult BeginGetContactOptions(string sSessionKey, string sRestrictionType, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetContactOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetMailPurposes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMailPurposes(string sSessionKey, string sPurposeType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetMailPurposes", ReplyAction="*")]
        System.IAsyncResult BeginGetMailPurposes(string sSessionKey, string sPurposeType, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetMailPurposes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateGiftAidDeclaration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateGiftAidDeclaration(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateGiftAidDeclaration", ReplyAction="*")]
        System.IAsyncResult BeginUpdateGiftAidDeclaration(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateGiftAidDeclaration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetBillingSchedules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBillingSchedules(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetBillingSchedules", ReplyAction="*")]
        System.IAsyncResult BeginGetBillingSchedules(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetBillingSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackageDetailEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackageDetailEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPackageDetailEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackageDetailWithDiscountingEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackageDetailWithDiscountingEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackageDetailWithDiscountingEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPackageDetailWithDiscountingEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPackageDetailWithDiscountingEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetNFSPackageDetailEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNFSPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetNFSPackageDetailEx", ReplyAction="*")]
        System.IAsyncResult BeginGetNFSPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetNFSPackageDetailEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ClearCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ClearCart(string sSessionKey, int iOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ClearCart", ReplyAction="*")]
        System.IAsyncResult BeginClearCart(string sSessionKey, int iOrderNumber, System.AsyncCallback callback, object asyncState);
        
        void EndClearCart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSubLineItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubLineItems(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSubLineItems", ReplyAction="*")]
        System.IAsyncResult BeginGetSubLineItems(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSubLineItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ApplyOnAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApplyOnAccount(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ApplyOnAccount", ReplyAction="*")]
        System.IAsyncResult BeginApplyOnAccount(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndApplyOnAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetOnAccountInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOnAccountInfo(string sSessionKey, string sPaymentMethods);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetOnAccountInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetOnAccountInfo(string sSessionKey, string sPaymentMethods, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetOnAccountInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ApplyDiscount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApplyDiscount(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ApplyDiscount", ReplyAction="*")]
        System.IAsyncResult BeginApplyDiscount(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndApplyDiscount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateSubLineItemPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateSubLineItemPrice(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateSubLineItemPrice", ReplyAction="*")]
        System.IAsyncResult BeginUpdateSubLineItemPrice(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdateSubLineItemPrice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateAddressEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateAddressEx(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateAddressEx", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAddressEx(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Data.DataSet EndUpdateAddressEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionDetailEx2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionDetailEx2(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionDetailEx2", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionDetailEx2(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductionDetailEx2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetDefaults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDefaults(string sOrganizationName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetDefaults", ReplyAction="*")]
        System.IAsyncResult BeginGetDefaults(string sOrganizationName, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetDefaults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RequestReprint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet RequestReprint(string sSessionKey, int iOrderNumber, int iEAddressNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RequestReprint", ReplyAction="*")]
        System.IAsyncResult BeginRequestReprint(string sSessionKey, int iOrderNumber, int iEAddressNumber, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndRequestReprint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.PerformanceEx GetPerformanceDetailWithDiscountingSYOS(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOS", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailWithDiscountingSYOS(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.PerformanceEx EndGetPerformanceDetailWithDiscountingSYOS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetProductionDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductionDetail(int iPerf_no, short iModeOfSale, int iBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetProductionDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetProductionDetail(int iPerf_no, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetProductionDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformances", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformances(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformances", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformances(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformances(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformanceDetail(int iPerf_no, short iModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetail(int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformanceDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetKeywords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetKeywords(string sKeywordCategory);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetKeywords", ReplyAction="*")]
        System.IAsyncResult BeginGetKeywords(string sKeywordCategory, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetKeywords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetVenue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetVenue();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetVenue", ReplyAction="*")]
        System.IAsyncResult BeginGetVenue(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetVenue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceAvailability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformanceAvailability(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceAvailability", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceAvailability(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformanceAvailability(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message ReserveTicketsResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ReserveTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsResponse ReserveTickets(TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ReserveTickets", ReplyAction="*")]
        System.IAsyncResult BeginReserveTickets(TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.ReserveTicketsResponse EndReserveTickets(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (ReserveTicketsSpecialRequests) of message ReserveTicketsSpecialRequests does not match the default value (ReserveTickets1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ReserveTicketsSpecialRequests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests1 ReserveTickets1(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ReserveTicketsSpecialRequests", ReplyAction="*")]
        System.IAsyncResult BeginReserveTickets1(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests1 EndReserveTickets1(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message ReserveTicketsUnseatedResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ReserveTicketsUnseated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedResponse ReserveTicketsUnseated(TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ReserveTicketsUnseated", ReplyAction="*")]
        System.IAsyncResult BeginReserveTicketsUnseated(TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedResponse EndReserveTicketsUnseated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ReleaseTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ReleaseTickets(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ReleaseTickets", ReplyAction="*")]
        System.IAsyncResult BeginReleaseTickets(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber, System.AsyncCallback callback, object asyncState);
        
        void EndReleaseTickets(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddContributionResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddContribution", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddContributionResponse AddContribution(TessituraIntegration.TessituraWebAPI.AddContributionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddContribution", ReplyAction="*")]
        System.IAsyncResult BeginAddContribution(TessituraIntegration.TessituraWebAPI.AddContributionRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddContributionResponse EndAddContribution(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddContributionExResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddContributionEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddContributionExResponse AddContributionEx(TessituraIntegration.TessituraWebAPI.AddContributionExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddContributionEx", ReplyAction="*")]
        System.IAsyncResult BeginAddContributionEx(TessituraIntegration.TessituraWebAPI.AddContributionExRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddContributionExResponse EndAddContributionEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveContribuion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveContribuion(string sWebSessionID, int iLineItemNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveContribuion", ReplyAction="*")]
        System.IAsyncResult BeginRemoveContribuion(string sWebSessionID, int iLineItemNumber, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveContribuion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCart(string sWebSessionID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetCart", ReplyAction="*")]
        System.IAsyncResult BeginGetCart(string sWebSessionID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetAddressAndShippingMethod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAddressAndShippingMethod(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetAddressAndShippingMethod", ReplyAction="*")]
        System.IAsyncResult BeginGetAddressAndShippingMethod(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetAddressAndShippingMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetShippingMethods", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetShippingMethods(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetShippingMethods", ReplyAction="*")]
        System.IAsyncResult BeginGetShippingMethods(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetShippingMethods(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/SetShippingInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetShippingInformation(string sSessionKey, int iAddress_no, int iShippingMethod);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/SetShippingInformation", ReplyAction="*")]
        System.IAsyncResult BeginSetShippingInformation(string sSessionKey, int iAddress_no, int iShippingMethod, System.AsyncCallback callback, object asyncState);
        
        void EndSetShippingInformation(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CheckoutResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/Checkout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.CheckoutResponse Checkout(TessituraIntegration.TessituraWebAPI.CheckoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/Checkout", ReplyAction="*")]
        System.IAsyncResult BeginCheckout(TessituraIntegration.TessituraWebAPI.CheckoutRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.CheckoutResponse EndCheckout(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPaymentMethod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPaymentMethod(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPaymentMethod", ReplyAction="*")]
        System.IAsyncResult BeginGetPaymentMethod(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPaymentMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOrder(string sSessionKey, bool bCheckoutCompleted);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetOrder", ReplyAction="*")]
        System.IAsyncResult BeginGetOrder(string sSessionKey, bool bCheckoutCompleted, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/OrderExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool OrderExists(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/OrderExists", ReplyAction="*")]
        System.IAsyncResult BeginOrderExists(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        bool EndOrderExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/Register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Register(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/Register", ReplyAction="*")]
        System.IAsyncResult BeginRegister(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, System.AsyncCallback callback, object asyncState);
        
        bool EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RegisterWithPromoCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RegisterWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RegisterWithPromoCode", ReplyAction="*")]
        System.IAsyncResult BeginRegisterWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterWithPromoCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RegisterWithPromoCodeEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RegisterWithPromoCodeEx(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, bool bAlreadyAuthenticated);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RegisterWithPromoCodeEx", ReplyAction="*")]
        System.IAsyncResult BeginRegisterWithPromoCodeEx(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, bool bAlreadyAuthenticated, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterWithPromoCodeEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/Logout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Logout(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/Logout", ReplyAction="*")]
        System.IAsyncResult BeginLogout(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        void EndLogout(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message LoginResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.LoginResponse Login(TessituraIntegration.TessituraWebAPI.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/Login", ReplyAction="*")]
        System.IAsyncResult BeginLogin(TessituraIntegration.TessituraWebAPI.LoginRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.LoginResponse EndLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message LoginWithPromoCodeResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoginWithPromoCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeResponse LoginWithPromoCode(TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoginWithPromoCode", ReplyAction="*")]
        System.IAsyncResult BeginLoginWithPromoCode(TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeResponse EndLoginWithPromoCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateLogin(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateLogin", ReplyAction="*")]
        System.IAsyncResult BeginUpdateLogin(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateLoginWithPromoCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateLoginWithPromoCode(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateLoginWithPromoCode", ReplyAction="*")]
        System.IAsyncResult BeginUpdateLoginWithPromoCode(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateLoginWithPromoCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoginInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LoginInfo(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoginInfo", ReplyAction="*")]
        System.IAsyncResult BeginLoginInfo(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndLoginInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetAccountInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountInfo(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetAccountInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetAccountInfo(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetAccountInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateAccountInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateAccountInfo(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateAccountInfo", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAccountInfo(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAccountInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/InsertNewShippingAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void InsertNewShippingAddress(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/InsertNewShippingAddress", ReplyAction="*")]
        System.IAsyncResult BeginInsertNewShippingAddress(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod, System.AsyncCallback callback, object asyncState);
        
        void EndInsertNewShippingAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoggedIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LoggedIn(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoggedIn", ReplyAction="*")]
        System.IAsyncResult BeginLoggedIn(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        bool EndLoggedIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetNewSessionKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNewSessionKey(string sIP);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetNewSessionKey", ReplyAction="*")]
        System.IAsyncResult BeginGetNewSessionKey(string sIP, System.AsyncCallback callback, object asyncState);
        
        string EndGetNewSessionKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateLastAccessTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateLastAccessTime(string sSessionKey, string sNow);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateLastAccessTime", ReplyAction="*")]
        System.IAsyncResult BeginUpdateLastAccessTime(string sSessionKey, string sNow, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateLastAccessTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetVariables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetVariables(string sSessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetVariables", ReplyAction="*")]
        System.IAsyncResult BeginGetVariables(string sSessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetVariables(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/SetVariable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetVariable(string sSessionKey, string sName, string sValue, string sMode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/SetVariable", ReplyAction="*")]
        System.IAsyncResult BeginSetVariable(string sSessionKey, string sName, string sValue, string sMode, System.AsyncCallback callback, object asyncState);
        
        void EndSetVariable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/DeleteVariable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteVariable(string sSessionKey, string sName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/DeleteVariable", ReplyAction="*")]
        System.IAsyncResult BeginDeleteVariable(string sSessionKey, string sName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteVariable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/TransferSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void TransferSession(string sSessionKey, string sNewKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/TransferSession", ReplyAction="*")]
        System.IAsyncResult BeginTransferSession(string sSessionKey, string sNewKey, System.AsyncCallback callback, object asyncState);
        
        void EndTransferSession(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddCustomerServiceIssueResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddCustomerServiceIssue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueResponse AddCustomerServiceIssue(TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddCustomerServiceIssue", ReplyAction="*")]
        System.IAsyncResult BeginAddCustomerServiceIssue(TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueResponse EndAddCustomerServiceIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/HelloWorld", ReplyAction="*")]
        System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState);
        
        string EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetCountries", ReplyAction="*")]
        System.IAsyncResult BeginGetCountries(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCountries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetStateProvince", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStateProvince();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetStateProvince", ReplyAction="*")]
        System.IAsyncResult BeginGetStateProvince(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetStateProvince(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ChangeModeOfSale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ChangeModeOfSale(string SessionKey, int NewModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ChangeModeOfSale", ReplyAction="*")]
        System.IAsyncResult BeginChangeModeOfSale(string SessionKey, int NewModeOfSale, System.AsyncCallback callback, object asyncState);
        
        int EndChangeModeOfSale(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackages(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackages", ReplyAction="*")]
        System.IAsyncResult BeginGetPackages(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPackages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackageDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackageDetail(int PackageID, int ModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackageDetail", ReplyAction="*")]
        System.IAsyncResult BeginGetPackageDetail(int PackageID, int ModeOfSale, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPackageDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetExistingOrdersInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetExistingOrdersInfo(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetExistingOrdersInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetExistingOrdersInfo(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetExistingOrdersInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/LoadExistingOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void LoadExistingOrder(string SessionKey, int OrderID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/LoadExistingOrder", ReplyAction="*")]
        System.IAsyncResult BeginLoadExistingOrder(string SessionKey, int OrderID, System.AsyncCallback callback, object asyncState);
        
        void EndLoadExistingOrder(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddPackageItemResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddPackageItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddPackageItemResponse AddPackageItem(TessituraIntegration.TessituraWebAPI.AddPackageItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddPackageItem", ReplyAction="*")]
        System.IAsyncResult BeginAddPackageItem(TessituraIntegration.TessituraWebAPI.AddPackageItemRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddPackageItemResponse EndAddPackageItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemovePackageItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemovePackageItem(string SessionKey, int PackageNumber, int PackageLineItemID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemovePackageItem", ReplyAction="*")]
        System.IAsyncResult BeginRemovePackageItem(string SessionKey, int PackageNumber, int PackageLineItemID, System.AsyncCallback callback, object asyncState);
        
        void EndRemovePackageItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackageItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackageItem(string SessionKey, int PackageLineItemID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackageItem", ReplyAction="*")]
        System.IAsyncResult BeginGetPackageItem(string SessionKey, int PackageLineItemID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPackageItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddOrderComments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddOrderComments(string SessionKey, string Comment, int LineItemID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddOrderComments", ReplyAction="*")]
        System.IAsyncResult BeginAddOrderComments(string SessionKey, string Comment, int LineItemID, System.AsyncCallback callback, object asyncState);
        
        void EndAddOrderComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveOrderComments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveOrderComments(string SessionKey, int LineItemID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveOrderComments", ReplyAction="*")]
        System.IAsyncResult BeginRemoveOrderComments(string SessionKey, int LineItemID, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveOrderComments(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message CheckoutExResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/CheckoutEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.CheckoutExResponse CheckoutEx(TessituraIntegration.TessituraWebAPI.CheckoutExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/CheckoutEx", ReplyAction="*")]
        System.IAsyncResult BeginCheckoutEx(TessituraIntegration.TessituraWebAPI.CheckoutExRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.CheckoutExResponse EndCheckoutEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetModeOfSaleRules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetModeOfSaleRules(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetModeOfSaleRules", ReplyAction="*")]
        System.IAsyncResult BeginGetModeOfSaleRules(string SessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetModeOfSaleRules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/PurchaseGiftCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PurchaseGiftCertificate(string SessionKey, decimal Amount, int PaymentMethod);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/PurchaseGiftCertificate", ReplyAction="*")]
        System.IAsyncResult BeginPurchaseGiftCertificate(string SessionKey, decimal Amount, int PaymentMethod, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndPurchaseGiftCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ApplyGiftCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ApplyGiftCertificate(string SessionKey, string RedemptionCode, decimal Amount);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ApplyGiftCertificate", ReplyAction="*")]
        System.IAsyncResult BeginApplyGiftCertificate(string SessionKey, string RedemptionCode, decimal Amount, System.AsyncCallback callback, object asyncState);
        
        void EndApplyGiftCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemoveGiftCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemoveGiftCertificate(string sWebSessionId, string sGiftCertificatId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemoveGiftCertificate", ReplyAction="*")]
        System.IAsyncResult BeginRemoveGiftCertificate(string sWebSessionId, string sGiftCertificatId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveGiftCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddPaymentPlanInstallment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AddPaymentPlanInstallment(string SessionKey, decimal Amount, System.DateTime DueDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddPaymentPlanInstallment", ReplyAction="*")]
        System.IAsyncResult BeginAddPaymentPlanInstallment(string SessionKey, decimal Amount, System.DateTime DueDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndAddPaymentPlanInstallment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/RemovePaymentPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemovePaymentPlan(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/RemovePaymentPlan", ReplyAction="*")]
        System.IAsyncResult BeginRemovePaymentPlan(string SessionKey, System.AsyncCallback callback, object asyncState);
        
        void EndRemovePaymentPlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/FinalizePaymentPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FinalizePaymentPlan(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/FinalizePaymentPlan", ReplyAction="*")]
        System.IAsyncResult BeginFinalizePaymentPlan(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndFinalizePaymentPlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ValidatePaymentPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidatePaymentPlan(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ValidatePaymentPlan", ReplyAction="*")]
        System.IAsyncResult BeginValidatePaymentPlan(string SessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndValidatePaymentPlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetConstituentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetConstituentInfo(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetConstituentInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetConstituentInfo(string SessionKey, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetConstituentInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscounting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformanceDetailWithDiscounting(string SessionKey, int iPerf_no, short iModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformanceDetailWithDiscounting", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformanceDetailWithDiscounting(string SessionKey, int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformanceDetailWithDiscounting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackageDetailWithDiscounting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackageDetailWithDiscounting(string SessionKey, int PackageID, int ModeOfSale);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackageDetailWithDiscounting", ReplyAction="*")]
        System.IAsyncResult BeginGetPackageDetailWithDiscounting(string SessionKey, int PackageID, int ModeOfSale, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPackageDetailWithDiscounting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateAccountInfoEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateAccountInfoEx(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateAccountInfoEx", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAccountInfoEx(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndUpdateAccountInfoEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/WebSeatServerListening", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool WebSeatServerListening();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/WebSeatServerListening", ReplyAction="*")]
        System.IAsyncResult BeginWebSeatServerListening(System.AsyncCallback callback, object asyncState);
        
        bool EndWebSeatServerListening(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message AddPackageItemSeatedResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/AddPackageItemSeated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedResponse AddPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/AddPackageItemSeated", ReplyAction="*")]
        System.IAsyncResult BeginAddPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedResponse EndAddPackageItemSeated(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message ReserveTicketsSpecifiedSeatsResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ReserveTicketsSpecifiedSeats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsResponse ReserveTicketsSpecifiedSeats(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ReserveTicketsSpecifiedSeats", ReplyAction="*")]
        System.IAsyncResult BeginReserveTicketsSpecifiedSeats(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest request, System.AsyncCallback callback, object asyncState);
        
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsResponse EndReserveTicketsSpecifiedSeats(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ForgotLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ForgotLogin(string sSessionKey, string sEmail, int iLoginType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ForgotLogin", ReplyAction="*")]
        System.IAsyncResult BeginForgotLogin(string sSessionKey, string sEmail, int iLoginType, System.AsyncCallback callback, object asyncState);
        
        void EndForgotLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdatePriceType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdatePriceType(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdatePriceType", ReplyAction="*")]
        System.IAsyncResult BeginUpdatePriceType(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePriceType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/ValidateCustomOffer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateCustomOffer(string sWebSessionId, int iPoint);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/ValidateCustomOffer", ReplyAction="*")]
        System.IAsyncResult BeginValidateCustomOffer(string sWebSessionId, int iPoint, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndValidateCustomOffer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetKeywordsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetKeywordsEx(string sWebSessionId, int iKeywordCategory, string sUsedIn);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetKeywordsEx", ReplyAction="*")]
        System.IAsyncResult BeginGetKeywordsEx(string sWebSessionId, int iKeywordCategory, string sUsedIn, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetKeywordsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsByScreen", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsByScreen(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsByScreen", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsByScreen(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsByScreen(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatsByScreenBrief", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatsByScreenBrief(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatsByScreenBrief", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatsByScreenBrief(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatsByScreenBrief(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetSeatStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeatStatus();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetSeatStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetSeatStatus(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeatStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPerformancesEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPerformancesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPerformancesEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPerformancesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPerformancesEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetPackagesEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPackagesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetPackagesEx", ReplyAction="*")]
        System.IAsyncResult BeginGetPackagesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetPackagesEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetConstituents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetConstituents(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetConstituents", ReplyAction="*")]
        System.IAsyncResult BeginGetConstituents(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetConstituents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetOrdersEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOrdersEx(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetOrdersEx", ReplyAction="*")]
        System.IAsyncResult BeginGetOrdersEx(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetOrdersEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetTicketPrintInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTicketPrintInformation(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetTicketPrintInformation", ReplyAction="*")]
        System.IAsyncResult BeginGetTicketPrintInformation(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetTicketPrintInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateConstituentAttributes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateConstituentAttributes(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateConstituentAttributes", ReplyAction="*")]
        System.IAsyncResult BeginUpdateConstituentAttributes(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdateConstituentAttributes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateConstituentInterests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateConstituentInterests(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateConstituentInterests", ReplyAction="*")]
        System.IAsyncResult BeginUpdateConstituentInterests(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndUpdateConstituentInterests(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetOrdersForDelivery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOrdersForDelivery(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetOrdersForDelivery", ReplyAction="*")]
        System.IAsyncResult BeginGetOrdersForDelivery(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetOrdersForDelivery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/UpdateEmailStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateEmailStatus(int iOrderNumber, int iEmailId, string dDateTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/UpdateEmailStatus", ReplyAction="*")]
        System.IAsyncResult BeginUpdateEmailStatus(int iOrderNumber, int iEmailId, string dDateTime, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateEmailStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetNewSessionKeyEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNewSessionKeyEx(string sIP, int iBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetNewSessionKeyEx", ReplyAction="*")]
        System.IAsyncResult BeginGetNewSessionKeyEx(string sIP, int iBusinessUnit, System.AsyncCallback callback, object asyncState);
        
        string EndGetNewSessionKeyEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tessiturasoftware.com/GetCartBrief", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCartBrief(string sWebSessionID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tessiturasoftware.com/GetCartBrief", ReplyAction="*")]
        System.IAsyncResult BeginGetCartBrief(string sWebSessionID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCartBrief(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class LineItemHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PriceTypeEx : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string descriptionField;
        
        private string shortDescriptionField;
        
        private bool promotionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShortDescription {
            get {
                return this.shortDescriptionField;
            }
            set {
                this.shortDescriptionField = value;
                this.RaisePropertyChanged("ShortDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Promotion {
            get {
                return this.promotionField;
            }
            set {
                this.promotionField = value;
                this.RaisePropertyChanged("Promotion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PerformanceEx : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string titleField;
        
        private System.DateTime performanceDateField;
        
        private string zoneMapField;
        
        private string venueField;
        
        private Section[] sectionsField;
        
        private PriceTypeEx[] priceTypesField;
        
        private bool promoIndField;
        
        private bool generalAvailabilityField;
        
        private string timeSlotDescriptionField;
        
        private PerformanceWebContent[] webContentCollectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime PerformanceDate {
            get {
                return this.performanceDateField;
            }
            set {
                this.performanceDateField = value;
                this.RaisePropertyChanged("PerformanceDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ZoneMap {
            get {
                return this.zoneMapField;
            }
            set {
                this.zoneMapField = value;
                this.RaisePropertyChanged("ZoneMap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Venue {
            get {
                return this.venueField;
            }
            set {
                this.venueField = value;
                this.RaisePropertyChanged("Venue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public Section[] Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
                this.RaisePropertyChanged("Sections");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public PriceTypeEx[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
                this.RaisePropertyChanged("PriceTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool PromoInd {
            get {
                return this.promoIndField;
            }
            set {
                this.promoIndField = value;
                this.RaisePropertyChanged("PromoInd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool GeneralAvailability {
            get {
                return this.generalAvailabilityField;
            }
            set {
                this.generalAvailabilityField = value;
                this.RaisePropertyChanged("GeneralAvailability");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string TimeSlotDescription {
            get {
                return this.timeSlotDescriptionField;
            }
            set {
                this.timeSlotDescriptionField = value;
                this.RaisePropertyChanged("TimeSlotDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebContent")]
        public PerformanceWebContent[] WebContentCollection {
            get {
                return this.webContentCollectionField;
            }
            set {
                this.webContentCollectionField = value;
                this.RaisePropertyChanged("WebContentCollection");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class Section : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SectionPriceType[] priceTypesField;
        
        private string descriptionField;
        
        private int zoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("PriceType")]
        public SectionPriceType[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
                this.RaisePropertyChanged("PriceTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
                this.RaisePropertyChanged("Zone");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class SectionPriceType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private decimal priceField;
        
        private decimal basePriceField;
        
        private int availCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
                this.RaisePropertyChanged("Price");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal BasePrice {
            get {
                return this.basePriceField;
            }
            set {
                this.basePriceField = value;
                this.RaisePropertyChanged("BasePrice");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int AvailCount {
            get {
                return this.availCountField;
            }
            set {
                this.availCountField = value;
                this.RaisePropertyChanged("AvailCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PerformanceWebContent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int origInvNoField;
        
        private int invNoField;
        
        private string invTypeField;
        
        private int contentTypeField;
        
        private string contentTypeDescField;
        
        private string contentValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int OrigInvNo {
            get {
                return this.origInvNoField;
            }
            set {
                this.origInvNoField = value;
                this.RaisePropertyChanged("OrigInvNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int InvNo {
            get {
                return this.invNoField;
            }
            set {
                this.invNoField = value;
                this.RaisePropertyChanged("InvNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InvType {
            get {
                return this.invTypeField;
            }
            set {
                this.invTypeField = value;
                this.RaisePropertyChanged("InvType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("ContentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ContentTypeDesc {
            get {
                return this.contentTypeDescField;
            }
            set {
                this.contentTypeDescField = value;
                this.RaisePropertyChanged("ContentTypeDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ContentValue {
            get {
                return this.contentValueField;
            }
            set {
                this.contentValueField = value;
                this.RaisePropertyChanged("ContentValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class EmailBodyPart : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string encodingField;
        
        private string bodyField;
        
        private string contentTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
                this.RaisePropertyChanged("Encoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("ContentType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class Email : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string toAddressesField;
        
        private string fromAddressField;
        
        private string cCAddressesField;
        
        private string bccAddressesField;
        
        private string subjectField;
        
        private EmailBodyPart[] bodyPartsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ToAddresses {
            get {
                return this.toAddressesField;
            }
            set {
                this.toAddressesField = value;
                this.RaisePropertyChanged("ToAddresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FromAddress {
            get {
                return this.fromAddressField;
            }
            set {
                this.fromAddressField = value;
                this.RaisePropertyChanged("FromAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CCAddresses {
            get {
                return this.cCAddressesField;
            }
            set {
                this.cCAddressesField = value;
                this.RaisePropertyChanged("CCAddresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BccAddresses {
            get {
                return this.bccAddressesField;
            }
            set {
                this.bccAddressesField = value;
                this.RaisePropertyChanged("BccAddresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("Subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public EmailBodyPart[] BodyParts {
            get {
                return this.bodyPartsField;
            }
            set {
                this.bodyPartsField = value;
                this.RaisePropertyChanged("BodyParts");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PriceType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class Performance : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string titleField;
        
        private System.DateTime performanceDateField;
        
        private string zoneMapField;
        
        private string venueField;
        
        private Section[] sectionsField;
        
        private PriceType[] priceTypesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime PerformanceDate {
            get {
                return this.performanceDateField;
            }
            set {
                this.performanceDateField = value;
                this.RaisePropertyChanged("PerformanceDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ZoneMap {
            get {
                return this.zoneMapField;
            }
            set {
                this.zoneMapField = value;
                this.RaisePropertyChanged("ZoneMap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Venue {
            get {
                return this.venueField;
            }
            set {
                this.venueField = value;
                this.RaisePropertyChanged("Venue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public Section[] Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
                this.RaisePropertyChanged("Sections");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public PriceType[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
                this.RaisePropertyChanged("PriceTypes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class NFSPackageLineItemHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int nFSPackageLineItemIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int NFSPackageLineItemId {
            get {
                return this.nFSPackageLineItemIdField;
            }
            set {
                this.nFSPackageLineItemIdField = value;
                this.RaisePropertyChanged("NFSPackageLineItemId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class SubPackageLineItemHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int superPackageLineItemIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int SuperPackageLineItemId {
            get {
                return this.superPackageLineItemIdField;
            }
            set {
                this.superPackageLineItemIdField = value;
                this.RaisePropertyChanged("SuperPackageLineItemId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class BatchResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int requestIdField;
        
        private string responseStrField;
        
        private System.Data.DataSet responseDataSetField;
        
        private System.Nullable<bool> responseBoolField;
        
        private LoginAttemptHeader loginAttemptHeaderField;
        
        private LineItemHeader lineItemHeaderField;
        
        private CheckoutStatusHeader checkoutStatusHeaderField;
        
        private SubPackageLineItemHeader subPackageLineItemHeaderField;
        
        private NFSPackageLineItemHeader nFSPackageLineItemHeaderField;
        
        private System.Nullable<int> responseIntField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int RequestId {
            get {
                return this.requestIdField;
            }
            set {
                this.requestIdField = value;
                this.RaisePropertyChanged("RequestId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseStr {
            get {
                return this.responseStrField;
            }
            set {
                this.responseStrField = value;
                this.RaisePropertyChanged("ResponseStr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet ResponseDataSet {
            get {
                return this.responseDataSetField;
            }
            set {
                this.responseDataSetField = value;
                this.RaisePropertyChanged("ResponseDataSet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<bool> ResponseBool {
            get {
                return this.responseBoolField;
            }
            set {
                this.responseBoolField = value;
                this.RaisePropertyChanged("ResponseBool");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public LoginAttemptHeader LoginAttemptHeader {
            get {
                return this.loginAttemptHeaderField;
            }
            set {
                this.loginAttemptHeaderField = value;
                this.RaisePropertyChanged("LoginAttemptHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public LineItemHeader LineItemHeader {
            get {
                return this.lineItemHeaderField;
            }
            set {
                this.lineItemHeaderField = value;
                this.RaisePropertyChanged("LineItemHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public CheckoutStatusHeader CheckoutStatusHeader {
            get {
                return this.checkoutStatusHeaderField;
            }
            set {
                this.checkoutStatusHeaderField = value;
                this.RaisePropertyChanged("CheckoutStatusHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public SubPackageLineItemHeader SubPackageLineItemHeader {
            get {
                return this.subPackageLineItemHeaderField;
            }
            set {
                this.subPackageLineItemHeaderField = value;
                this.RaisePropertyChanged("SubPackageLineItemHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public NFSPackageLineItemHeader NFSPackageLineItemHeader {
            get {
                return this.nFSPackageLineItemHeaderField;
            }
            set {
                this.nFSPackageLineItemHeaderField = value;
                this.RaisePropertyChanged("NFSPackageLineItemHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<int> ResponseInt {
            get {
                return this.responseIntField;
            }
            set {
                this.responseIntField = value;
                this.RaisePropertyChanged("ResponseInt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class LoginAttemptHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int failedAttemptsField;
        
        private System.DateTime lockedDateField;
        
        private string statusField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int FailedAttempts {
            get {
                return this.failedAttemptsField;
            }
            set {
                this.failedAttemptsField = value;
                this.RaisePropertyChanged("FailedAttempts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime LockedDate {
            get {
                return this.lockedDateField;
            }
            set {
                this.lockedDateField = value;
                this.RaisePropertyChanged("LockedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class CheckoutStatusHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string statusField;
        
        private string messageField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class BatchRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int requestIdField;
        
        private string operationField;
        
        private string argumentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int RequestId {
            get {
                return this.requestIdField;
            }
            set {
                this.requestIdField = value;
                this.RaisePropertyChanged("RequestId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
                this.RaisePropertyChanged("Operation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Arguments {
            get {
                return this.argumentsField;
            }
            set {
                this.argumentsField = value;
                this.RaisePropertyChanged("Arguments");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PriceTypeEx2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string descriptionField;
        
        private string shortDescriptionField;
        
        private bool promotionField;
        
        private int promoMaxQuantityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShortDescription {
            get {
                return this.shortDescriptionField;
            }
            set {
                this.shortDescriptionField = value;
                this.RaisePropertyChanged("ShortDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Promotion {
            get {
                return this.promotionField;
            }
            set {
                this.promotionField = value;
                this.RaisePropertyChanged("Promotion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PromoMaxQuantity {
            get {
                return this.promoMaxQuantityField;
            }
            set {
                this.promoMaxQuantityField = value;
                this.RaisePropertyChanged("PromoMaxQuantity");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PerformanceEx2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string titleField;
        
        private System.DateTime performanceDateField;
        
        private string zoneMapField;
        
        private string venueField;
        
        private Section[] sectionsField;
        
        private PriceTypeEx2[] priceTypesField;
        
        private bool promoIndField;
        
        private bool generalAvailabilityField;
        
        private string timeSlotDescriptionField;
        
        private PerformanceWebContent[] webContentCollectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime PerformanceDate {
            get {
                return this.performanceDateField;
            }
            set {
                this.performanceDateField = value;
                this.RaisePropertyChanged("PerformanceDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ZoneMap {
            get {
                return this.zoneMapField;
            }
            set {
                this.zoneMapField = value;
                this.RaisePropertyChanged("ZoneMap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Venue {
            get {
                return this.venueField;
            }
            set {
                this.venueField = value;
                this.RaisePropertyChanged("Venue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public Section[] Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
                this.RaisePropertyChanged("Sections");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public PriceTypeEx2[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
                this.RaisePropertyChanged("PriceTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool PromoInd {
            get {
                return this.promoIndField;
            }
            set {
                this.promoIndField = value;
                this.RaisePropertyChanged("PromoInd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool GeneralAvailability {
            get {
                return this.generalAvailabilityField;
            }
            set {
                this.generalAvailabilityField = value;
                this.RaisePropertyChanged("GeneralAvailability");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string TimeSlotDescription {
            get {
                return this.timeSlotDescriptionField;
            }
            set {
                this.timeSlotDescriptionField = value;
                this.RaisePropertyChanged("TimeSlotDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebContent")]
        public PerformanceWebContent[] WebContentCollection {
            get {
                return this.webContentCollectionField;
            }
            set {
                this.webContentCollectionField = value;
                this.RaisePropertyChanged("WebContentCollection");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsEx", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sWebSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sPriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int iPerformanceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iNumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string sSpecialRequests;
        
        public ReserveTicketsExRequest() {
        }
        
        public ReserveTicketsExRequest(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.sWebSessionID = sWebSessionID;
            this.sPriceType = sPriceType;
            this.iPerformanceNumber = iPerformanceNumber;
            this.iNumberOfSeats = iNumberOfSeats;
            this.iZone = iZone;
            this.sSpecialRequests = sSpecialRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsExResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsExResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int ReserveTicketsExResult;
        
        public ReserveTicketsExResponse() {
        }
        
        public ReserveTicketsExResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader, int ReserveTicketsExResult) {
            this.LineItemHeader = LineItemHeader;
            this.ReserveTicketsExResult = ReserveTicketsExResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutEx4", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutEx4Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sCCOwner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sCCNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iCCType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iCCMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int iCCYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public decimal dAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public bool bAllowUnderPayment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public string sCardAuthenticationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public int iCCIssueNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=10)]
        public int iCCStartMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=11)]
        public int iCCStartYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=12)]
        public bool bAuthorize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=13)]
        public string sAuthorizationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=14)]
        public string s3DSecureValues;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=15)]
        public int iAccountId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=16)]
        public string sZipCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=17)]
        public string sAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=18)]
        public string sPaymentReference;
        
        public CheckoutEx4Request() {
        }
        
        public CheckoutEx4Request(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    int iAccountId, 
                    string sZipCode, 
                    string sAddress, 
                    string sPaymentReference) {
            this.sSessionKey = sSessionKey;
            this.sCCOwner = sCCOwner;
            this.sCCNumber = sCCNumber;
            this.iCCType = iCCType;
            this.iCCMonth = iCCMonth;
            this.iCCYear = iCCYear;
            this.dAmount = dAmount;
            this.bAllowUnderPayment = bAllowUnderPayment;
            this.sCardAuthenticationCode = sCardAuthenticationCode;
            this.iCCIssueNumber = iCCIssueNumber;
            this.iCCStartMonth = iCCStartMonth;
            this.iCCStartYear = iCCStartYear;
            this.bAuthorize = bAuthorize;
            this.sAuthorizationCode = sAuthorizationCode;
            this.s3DSecureValues = s3DSecureValues;
            this.iAccountId = iAccountId;
            this.sZipCode = sZipCode;
            this.sAddress = sAddress;
            this.sPaymentReference = sPaymentReference;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutEx4Response", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutEx4Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader;
        
        public CheckoutEx4Response() {
        }
        
        public CheckoutEx4Response(TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader) {
            this.CheckoutStatusHeader = CheckoutStatusHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginEx3", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginEx3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iLoginType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iPromotionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string sEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public string sPhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public string sPostalCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public int iCustomerNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public int iN1N2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=10)]
        public string sForgotLoginToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=11)]
        public bool bAlreadyAuthenticated;
        
        public LoginEx3Request() {
        }
        
        public LoginEx3Request(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, bool bAlreadyAuthenticated) {
            this.sSessionKey = sSessionKey;
            this.sUID = sUID;
            this.sPwd = sPwd;
            this.iLoginType = iLoginType;
            this.iPromotionCode = iPromotionCode;
            this.sEmail = sEmail;
            this.sPhone = sPhone;
            this.sPostalCode = sPostalCode;
            this.iCustomerNo = iCustomerNo;
            this.iN1N2 = iN1N2;
            this.sForgotLoginToken = sForgotLoginToken;
            this.bAlreadyAuthenticated = bAlreadyAuthenticated;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginEx3Response", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginEx3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public bool LoginEx3Result;
        
        public LoginEx3Response() {
        }
        
        public LoginEx3Response(TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader, bool LoginEx3Result) {
            this.LoginAttemptHeader = LoginAttemptHeader;
            this.LoginEx3Result = LoginEx3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSubPackageItem", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddSubPackageItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string SessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public int SuperPackageLineItemId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int ParentSuperPackageLineItemId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public string PriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int SubPackageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int NumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public int Zone;
        
        public AddSubPackageItemRequest() {
        }
        
        public AddSubPackageItemRequest(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone) {
            this.SessionKey = SessionKey;
            this.SuperPackageLineItemId = SuperPackageLineItemId;
            this.ParentSuperPackageLineItemId = ParentSuperPackageLineItemId;
            this.PriceType = PriceType;
            this.SubPackageNumber = SubPackageNumber;
            this.NumberOfSeats = NumberOfSeats;
            this.Zone = Zone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSubPackageItemResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddSubPackageItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader SubPackageLineItemHeader;
        
        public AddSubPackageItemResponse() {
        }
        
        public AddSubPackageItemResponse(TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader SubPackageLineItemHeader) {
            this.SubPackageLineItemHeader = SubPackageLineItemHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSubPackageItemSeated", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddSubPackageItemSeatedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string SessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public int SuperPackageLineItemId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string PriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int SubPackageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int NumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int Zone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public string RequestedSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public bool LeaveSingleSeats;
        
        public AddSubPackageItemSeatedRequest() {
        }
        
        public AddSubPackageItemSeatedRequest(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            this.SessionKey = SessionKey;
            this.SuperPackageLineItemId = SuperPackageLineItemId;
            this.PriceType = PriceType;
            this.SubPackageNumber = SubPackageNumber;
            this.NumberOfSeats = NumberOfSeats;
            this.Zone = Zone;
            this.RequestedSeats = RequestedSeats;
            this.LeaveSingleSeats = LeaveSingleSeats;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSubPackageItemSeatedResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddSubPackageItemSeatedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader SubPackageLineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int AddSubPackageItemSeatedResult;
        
        public AddSubPackageItemSeatedResponse() {
        }
        
        public AddSubPackageItemSeatedResponse(TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader SubPackageLineItemHeader, int AddSubPackageItemSeatedResult) {
            this.SubPackageLineItemHeader = SubPackageLineItemHeader;
            this.AddSubPackageItemSeatedResult = AddSubPackageItemSeatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginConstituent", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginConstituentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string SessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string CCNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string PhoneNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int LoginType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int PromotionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string GenericCustomerNumbers;
        
        public LoginConstituentRequest() {
        }
        
        public LoginConstituentRequest(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers) {
            this.SessionKey = SessionKey;
            this.CCNumber = CCNumber;
            this.PhoneNumber = PhoneNumber;
            this.LoginType = LoginType;
            this.PromotionCode = PromotionCode;
            this.GenericCustomerNumbers = GenericCustomerNumbers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginConstituentResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginConstituentResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public bool LoginConstituentResult;
        
        public LoginConstituentResponse() {
        }
        
        public LoginConstituentResponse(TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader, bool LoginConstituentResult) {
            this.LoginAttemptHeader = LoginAttemptHeader;
            this.LoginConstituentResult = LoginConstituentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddNFSPackagePerformanceItem", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddNFSPackagePerformanceItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string SessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public int NFSPackageLineItemId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string PriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int PackageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int PerformanceGroupNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int PerformanceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public int NumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public int Zone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public string RequestedSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public bool LeaveSingleSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=10)]
        public string SpecialRequests;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=11)]
        public bool UnSeated;
        
        public AddNFSPackagePerformanceItemRequest() {
        }
        
        public AddNFSPackagePerformanceItemRequest(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated) {
            this.SessionKey = SessionKey;
            this.NFSPackageLineItemId = NFSPackageLineItemId;
            this.PriceType = PriceType;
            this.PackageNumber = PackageNumber;
            this.PerformanceGroupNumber = PerformanceGroupNumber;
            this.PerformanceNumber = PerformanceNumber;
            this.NumberOfSeats = NumberOfSeats;
            this.Zone = Zone;
            this.RequestedSeats = RequestedSeats;
            this.LeaveSingleSeats = LeaveSingleSeats;
            this.SpecialRequests = SpecialRequests;
            this.UnSeated = UnSeated;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddNFSPackagePerformanceItemResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddNFSPackagePerformanceItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.NFSPackageLineItemHeader NFSPackageLineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int AddNFSPackagePerformanceItemResult;
        
        public AddNFSPackagePerformanceItemResponse() {
        }
        
        public AddNFSPackagePerformanceItemResponse(TessituraIntegration.TessituraWebAPI.NFSPackageLineItemHeader NFSPackageLineItemHeader, int AddNFSPackagePerformanceItemResult) {
            this.NFSPackageLineItemHeader = NFSPackageLineItemHeader;
            this.AddNFSPackagePerformanceItemResult = AddNFSPackagePerformanceItemResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateFee", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class UpdateFeeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public char cAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int iFeeNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iFeeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public decimal dAmount;
        
        public UpdateFeeRequest() {
        }
        
        public UpdateFeeRequest(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount) {
            this.sSessionKey = sSessionKey;
            this.cAction = cAction;
            this.iFeeNo = iFeeNo;
            this.iFeeID = iFeeID;
            this.dAmount = dAmount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateFeeResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class UpdateFeeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        public UpdateFeeResponse() {
        }
        
        public UpdateFeeResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader) {
            this.LineItemHeader = LineItemHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginEx", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iLoginType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iPromotionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string sEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public string sPhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public string sPostalCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public int iCustomerNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public int iN1N2;
        
        public LoginExRequest() {
        }
        
        public LoginExRequest(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2) {
            this.sSessionKey = sSessionKey;
            this.sUID = sUID;
            this.sPwd = sPwd;
            this.iLoginType = iLoginType;
            this.iPromotionCode = iPromotionCode;
            this.sEmail = sEmail;
            this.sPhone = sPhone;
            this.sPostalCode = sPostalCode;
            this.iCustomerNo = iCustomerNo;
            this.iN1N2 = iN1N2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginExResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginExResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public bool LoginExResult;
        
        public LoginExResponse() {
        }
        
        public LoginExResponse(TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader, bool LoginExResult) {
            this.LoginAttemptHeader = LoginAttemptHeader;
            this.LoginExResult = LoginExResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutEx2", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutEx2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sCCOwner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sCCNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iCCType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iCCMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int iCCYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public decimal dAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public bool bAllowUnderPayment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public string sCardAuthenticationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public int iCCIssueNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=10)]
        public int iCCStartMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=11)]
        public int iCCStartYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=12)]
        public bool bAuthorize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=13)]
        public string sAuthorizationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=14)]
        public string sEciIndType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=15)]
        public string sSecureTransID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=16)]
        public string sSecureTransSecurity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=17)]
        public string sVerAuthValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=18)]
        public string sVerCertSerialCardholder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=19)]
        public string sVerCertSerialCardAcceptor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=20)]
        public string sVerHashResult;
        
        public CheckoutEx2Request() {
        }
        
        public CheckoutEx2Request(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult) {
            this.sSessionKey = sSessionKey;
            this.sCCOwner = sCCOwner;
            this.sCCNumber = sCCNumber;
            this.iCCType = iCCType;
            this.iCCMonth = iCCMonth;
            this.iCCYear = iCCYear;
            this.dAmount = dAmount;
            this.bAllowUnderPayment = bAllowUnderPayment;
            this.sCardAuthenticationCode = sCardAuthenticationCode;
            this.iCCIssueNumber = iCCIssueNumber;
            this.iCCStartMonth = iCCStartMonth;
            this.iCCStartYear = iCCStartYear;
            this.bAuthorize = bAuthorize;
            this.sAuthorizationCode = sAuthorizationCode;
            this.sEciIndType = sEciIndType;
            this.sSecureTransID = sSecureTransID;
            this.sSecureTransSecurity = sSecureTransSecurity;
            this.sVerAuthValue = sVerAuthValue;
            this.sVerCertSerialCardholder = sVerCertSerialCardholder;
            this.sVerCertSerialCardAcceptor = sVerCertSerialCardAcceptor;
            this.sVerHashResult = sVerHashResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutEx2Response", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutEx2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader;
        
        public CheckoutEx2Response() {
        }
        
        public CheckoutEx2Response(TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader) {
            this.CheckoutStatusHeader = CheckoutStatusHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginEx2", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginEx2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iLoginType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iPromotionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string sEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public string sPhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public string sPostalCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public int iCustomerNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public int iN1N2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=10)]
        public string sForgotLoginToken;
        
        public LoginEx2Request() {
        }
        
        public LoginEx2Request(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken) {
            this.sSessionKey = sSessionKey;
            this.sUID = sUID;
            this.sPwd = sPwd;
            this.iLoginType = iLoginType;
            this.iPromotionCode = iPromotionCode;
            this.sEmail = sEmail;
            this.sPhone = sPhone;
            this.sPostalCode = sPostalCode;
            this.iCustomerNo = iCustomerNo;
            this.iN1N2 = iN1N2;
            this.sForgotLoginToken = sForgotLoginToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginEx2Response", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginEx2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public bool LoginEx2Result;
        
        public LoginEx2Response() {
        }
        
        public LoginEx2Response(TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader, bool LoginEx2Result) {
            this.LoginAttemptHeader = LoginAttemptHeader;
            this.LoginEx2Result = LoginEx2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutEx3", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutEx3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sCCOwner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sCCNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iCCType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iCCMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int iCCYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public decimal dAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public bool bAllowUnderPayment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public string sCardAuthenticationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public int iCCIssueNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=10)]
        public int iCCStartMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=11)]
        public int iCCStartYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=12)]
        public bool bAuthorize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=13)]
        public string sAuthorizationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=14)]
        public string s3DSecureValues;
        
        public CheckoutEx3Request() {
        }
        
        public CheckoutEx3Request(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, bool bAuthorize, string sAuthorizationCode, string s3DSecureValues) {
            this.sSessionKey = sSessionKey;
            this.sCCOwner = sCCOwner;
            this.sCCNumber = sCCNumber;
            this.iCCType = iCCType;
            this.iCCMonth = iCCMonth;
            this.iCCYear = iCCYear;
            this.dAmount = dAmount;
            this.bAllowUnderPayment = bAllowUnderPayment;
            this.sCardAuthenticationCode = sCardAuthenticationCode;
            this.iCCIssueNumber = iCCIssueNumber;
            this.iCCStartMonth = iCCStartMonth;
            this.iCCStartYear = iCCStartYear;
            this.bAuthorize = bAuthorize;
            this.sAuthorizationCode = sAuthorizationCode;
            this.s3DSecureValues = s3DSecureValues;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutEx3Response", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutEx3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader;
        
        public CheckoutEx3Response() {
        }
        
        public CheckoutEx3Response(TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader) {
            this.CheckoutStatusHeader = CheckoutStatusHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTickets", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sWebSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sPriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int iPerformanceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iNumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iZone;
        
        public ReserveTicketsRequest() {
        }
        
        public ReserveTicketsRequest(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone) {
            this.sWebSessionID = sWebSessionID;
            this.sPriceType = sPriceType;
            this.iPerformanceNumber = iPerformanceNumber;
            this.iNumberOfSeats = iNumberOfSeats;
            this.iZone = iZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int ReserveTicketsResult;
        
        public ReserveTicketsResponse() {
        }
        
        public ReserveTicketsResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader, int ReserveTicketsResult) {
            this.LineItemHeader = LineItemHeader;
            this.ReserveTicketsResult = ReserveTicketsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsSpecialRequests", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsSpecialRequests {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sWebSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sPriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int iPerformanceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iNumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string sSpecialRequests;
        
        public ReserveTicketsSpecialRequests() {
        }
        
        public ReserveTicketsSpecialRequests(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.sWebSessionID = sWebSessionID;
            this.sPriceType = sPriceType;
            this.iPerformanceNumber = iPerformanceNumber;
            this.iNumberOfSeats = iNumberOfSeats;
            this.iZone = iZone;
            this.sSpecialRequests = sSpecialRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsSpecialRequestsResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsSpecialRequests1 {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int ReserveTicketsSpecialRequestsResult;
        
        public ReserveTicketsSpecialRequests1() {
        }
        
        public ReserveTicketsSpecialRequests1(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader, int ReserveTicketsSpecialRequestsResult) {
            this.LineItemHeader = LineItemHeader;
            this.ReserveTicketsSpecialRequestsResult = ReserveTicketsSpecialRequestsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsUnseated", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsUnseatedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sWebSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sPriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int iPerformanceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iNumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string sSpecialRequests;
        
        public ReserveTicketsUnseatedRequest() {
        }
        
        public ReserveTicketsUnseatedRequest(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.sWebSessionID = sWebSessionID;
            this.sPriceType = sPriceType;
            this.iPerformanceNumber = iPerformanceNumber;
            this.iNumberOfSeats = iNumberOfSeats;
            this.iZone = iZone;
            this.sSpecialRequests = sSpecialRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsUnseatedResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsUnseatedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int ReserveTicketsUnseatedResult;
        
        public ReserveTicketsUnseatedResponse() {
        }
        
        public ReserveTicketsUnseatedResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader, int ReserveTicketsUnseatedResult) {
            this.LineItemHeader = LineItemHeader;
            this.ReserveTicketsUnseatedResult = ReserveTicketsUnseatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddContribution", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddContributionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sWebSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public decimal Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int Fund;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int AccountMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public bool Upgrade;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public bool Renew;
        
        public AddContributionRequest() {
        }
        
        public AddContributionRequest(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew) {
            this.sWebSessionID = sWebSessionID;
            this.Amount = Amount;
            this.Fund = Fund;
            this.AccountMethod = AccountMethod;
            this.Upgrade = Upgrade;
            this.Renew = Renew;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddContributionResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddContributionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        public AddContributionResponse() {
        }
        
        public AddContributionResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader) {
            this.LineItemHeader = LineItemHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddContributionEx", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddContributionExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sWebSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public decimal dAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int iFundNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iAccountMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public bool bUpgrade;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public bool bRenew;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public int iMemberLevelNo;
        
        public AddContributionExRequest() {
        }
        
        public AddContributionExRequest(string sWebSessionID, decimal dAmount, int iFundNo, int iAccountMethod, bool bUpgrade, bool bRenew, int iMemberLevelNo) {
            this.sWebSessionID = sWebSessionID;
            this.dAmount = dAmount;
            this.iFundNo = iFundNo;
            this.iAccountMethod = iAccountMethod;
            this.bUpgrade = bUpgrade;
            this.bRenew = bRenew;
            this.iMemberLevelNo = iMemberLevelNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddContributionExResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddContributionExResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        public AddContributionExResponse() {
        }
        
        public AddContributionExResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader) {
            this.LineItemHeader = LineItemHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Checkout", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sCCOwner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sCCNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iCCType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iCCMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int iCCYear;
        
        public CheckoutRequest() {
        }
        
        public CheckoutRequest(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear) {
            this.sSessionKey = sSessionKey;
            this.sCCOwner = sCCOwner;
            this.sCCNumber = sCCNumber;
            this.iCCType = iCCType;
            this.iCCMonth = iCCMonth;
            this.iCCYear = iCCYear;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader;
        
        public CheckoutResponse() {
        }
        
        public CheckoutResponse(TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader) {
            this.CheckoutStatusHeader = CheckoutStatusHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Login", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iLoginType;
        
        public LoginRequest() {
        }
        
        public LoginRequest(string sSessionKey, string sUID, string sPwd, int iLoginType) {
            this.sSessionKey = sSessionKey;
            this.sUID = sUID;
            this.sPwd = sPwd;
            this.iLoginType = iLoginType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public bool LoginResult;
        
        public LoginResponse() {
        }
        
        public LoginResponse(TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader, bool LoginResult) {
            this.LoginAttemptHeader = LoginAttemptHeader;
            this.LoginResult = LoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginWithPromoCode", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginWithPromoCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iLoginType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iPromotionCode;
        
        public LoginWithPromoCodeRequest() {
        }
        
        public LoginWithPromoCodeRequest(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode) {
            this.sSessionKey = sSessionKey;
            this.sUID = sUID;
            this.sPwd = sPwd;
            this.iLoginType = iLoginType;
            this.iPromotionCode = iPromotionCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginWithPromoCodeResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class LoginWithPromoCodeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public bool LoginWithPromoCodeResult;
        
        public LoginWithPromoCodeResponse() {
        }
        
        public LoginWithPromoCodeResponse(TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginAttemptHeader, bool LoginWithPromoCodeResult) {
            this.LoginAttemptHeader = LoginAttemptHeader;
            this.LoginWithPromoCodeResult = LoginWithPromoCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddCustomerServiceIssue", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddCustomerServiceIssueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public int ContactMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int Category;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int ActivityType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int Origin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string Notes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public int PerformanceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public int PackageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public bool Urgent;
        
        public AddCustomerServiceIssueRequest() {
        }
        
        public AddCustomerServiceIssueRequest(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent) {
            this.sSessionKey = sSessionKey;
            this.ContactMethod = ContactMethod;
            this.Category = Category;
            this.ActivityType = ActivityType;
            this.Origin = Origin;
            this.Notes = Notes;
            this.PerformanceNumber = PerformanceNumber;
            this.PackageNumber = PackageNumber;
            this.Urgent = Urgent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddCustomerServiceIssueResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddCustomerServiceIssueResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        public AddCustomerServiceIssueResponse() {
        }
        
        public AddCustomerServiceIssueResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader) {
            this.LineItemHeader = LineItemHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddPackageItem", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddPackageItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string SessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public int ParentPackageLineItemId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string PriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int PackageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int NumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int Zone;
        
        public AddPackageItemRequest() {
        }
        
        public AddPackageItemRequest(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone) {
            this.SessionKey = SessionKey;
            this.ParentPackageLineItemId = ParentPackageLineItemId;
            this.PriceType = PriceType;
            this.PackageNumber = PackageNumber;
            this.NumberOfSeats = NumberOfSeats;
            this.Zone = Zone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddPackageItemResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddPackageItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        public AddPackageItemResponse() {
        }
        
        public AddPackageItemResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader) {
            this.LineItemHeader = LineItemHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutEx", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sSessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sCCOwner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public string sCCNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iCCType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iCCMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public int iCCYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public decimal dAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=7)]
        public bool bAllowUnderPayment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=8)]
        public string sCardAuthenticationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=9)]
        public int iCCIssueNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=10)]
        public int iCCStartMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=11)]
        public int iCCStartYear;
        
        public CheckoutExRequest() {
        }
        
        public CheckoutExRequest(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear) {
            this.sSessionKey = sSessionKey;
            this.sCCOwner = sCCOwner;
            this.sCCNumber = sCCNumber;
            this.iCCType = iCCType;
            this.iCCMonth = iCCMonth;
            this.iCCYear = iCCYear;
            this.dAmount = dAmount;
            this.bAllowUnderPayment = bAllowUnderPayment;
            this.sCardAuthenticationCode = sCardAuthenticationCode;
            this.iCCIssueNumber = iCCIssueNumber;
            this.iCCStartMonth = iCCStartMonth;
            this.iCCStartYear = iCCStartYear;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutExResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class CheckoutExResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader;
        
        public CheckoutExResponse() {
        }
        
        public CheckoutExResponse(TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutStatusHeader) {
            this.CheckoutStatusHeader = CheckoutStatusHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddPackageItemSeated", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddPackageItemSeatedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string SessionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string PriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int PackageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int NumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int Zone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string RequestedSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public bool LeaveSingleSeats;
        
        public AddPackageItemSeatedRequest() {
        }
        
        public AddPackageItemSeatedRequest(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            this.SessionKey = SessionKey;
            this.PriceType = PriceType;
            this.PackageNumber = PackageNumber;
            this.NumberOfSeats = NumberOfSeats;
            this.Zone = Zone;
            this.RequestedSeats = RequestedSeats;
            this.LeaveSingleSeats = LeaveSingleSeats;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddPackageItemSeatedResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class AddPackageItemSeatedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int AddPackageItemSeatedResult;
        
        public AddPackageItemSeatedResponse() {
        }
        
        public AddPackageItemSeatedResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader, int AddPackageItemSeatedResult) {
            this.LineItemHeader = LineItemHeader;
            this.AddPackageItemSeatedResult = AddPackageItemSeatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsSpecifiedSeats", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsSpecifiedSeatsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public string sWebSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=1)]
        public string sPriceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=2)]
        public int iPerformanceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=3)]
        public int iNumberOfSeats;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=4)]
        public int iZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=5)]
        public string sSpecialRequests;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=6)]
        public string RequestedSeats;
        
        public ReserveTicketsSpecifiedSeatsRequest() {
        }
        
        public ReserveTicketsSpecifiedSeatsRequest(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats) {
            this.sWebSessionID = sWebSessionID;
            this.sPriceType = sPriceType;
            this.iPerformanceNumber = iPerformanceNumber;
            this.iNumberOfSeats = iNumberOfSeats;
            this.iZone = iZone;
            this.sSpecialRequests = sSpecialRequests;
            this.RequestedSeats = RequestedSeats;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReserveTicketsSpecifiedSeatsResponse", WrapperNamespace="http://tessiturasoftware.com/", IsWrapped=true)]
    public partial class ReserveTicketsSpecifiedSeatsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tessiturasoftware.com/")]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tessiturasoftware.com/", Order=0)]
        public int ReserveTicketsSpecifiedSeatsResult;
        
        public ReserveTicketsSpecifiedSeatsResponse() {
        }
        
        public ReserveTicketsSpecifiedSeatsResponse(TessituraIntegration.TessituraWebAPI.LineItemHeader LineItemHeader, int ReserveTicketsSpecifiedSeatsResult) {
            this.LineItemHeader = LineItemHeader;
            this.ReserveTicketsSpecifiedSeatsResult = ReserveTicketsSpecifiedSeatsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TessituraSoapChannel : TessituraIntegration.TessituraWebAPI.TessituraSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsBriefExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsBriefExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReserveTicketsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReserveTicketsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int ReserveTicketsExResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SMTPListeningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SMTPListeningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGiftAidInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGiftAidInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.PerformanceEx2 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.PerformanceEx2)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformancesEx4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformancesEx4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionDetailEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionDetailEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConstituentsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConstituentsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrintTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendTicketEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendTicketEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShiftContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShiftContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckoutEx4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckoutEx4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool LoginEx3Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LoginAttemptHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaintainOrderInitiatorRecipientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MaintainOrderInitiatorRecipientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerSeatFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerSeatFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.BatchResponse[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.BatchResponse[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddSubPackageItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddSubPackageItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddSubPackageItemSeatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddSubPackageItemSeatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int AddSubPackageItemSeatedResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStateProvinceExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStateProvinceExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateSuperPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateSuperPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TessituraCreditCardServerListeningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TessituraCreditCardServerListeningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginConstituentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginConstituentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool LoginConstituentResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LoginAttemptHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsByZoneBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsByZoneBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailSYOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailSYOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.Performance Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.Performance)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNFSPackagePerformanceItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNFSPackagePerformanceItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int AddNFSPackagePerformanceItemResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.NFSPackageLineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.NFSPackageLineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNFSPackageDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNFSPackageDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateNFSPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateNFSPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsBySectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsBySectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsBySectionBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsBySectionBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGiftCertificateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGiftCertificateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCityStateProvinceByPostalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCityStateProvinceByPostalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReturnTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReturnTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddConstituentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddConstituentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateConstituentInterestsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateConstituentInterestsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsByZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsByZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsByZonesBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsByZonesBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsBySectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsBySectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsBySectionsBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsBySectionsBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZonesPerSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZonesPerSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScreensCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetScreensCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebSeatServerConnectionCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebSeatServerConnectionCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool LoginExResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LoginAttemptHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTicketHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTicketHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSubscriptionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSubscriptionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPromoCodeExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPromoCodeExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAPIDiagnosticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAPIDiagnosticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateTessituraUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateTessituraUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckoutEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckoutEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailSYOSDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailSYOSDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSpecialActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSpecialActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSpecialActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSpecialActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateConstituencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateConstituencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHoldCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHoldCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrderConfirmationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrderConfirmationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.Email Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.Email)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendOrderConfirmationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendOrderConfirmationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestOrderConfirmationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestOrderConfirmationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlterTicketExpirationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AlterTicketExpirationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTicketExpirationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTicketExpirationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMaxTicketAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMaxTicketAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocalDataExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocalDataExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformancesEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformancesEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionsEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionsEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackagesEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackagesEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteLocalProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteLocalProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool LoginEx2Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LoginAttemptHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeModeOfSaleExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeModeOfSaleExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePaymentPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePaymentPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateTessituraUserExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateTessituraUserExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckoutEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckoutEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrintAtHomeSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrintAtHomeSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConstituentInfoExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConstituentInfoExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformancesEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformancesEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionsEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionsEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackagesEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackagesEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailWithDiscountingExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailWithDiscountingExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMailPurposesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMailPurposesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBillingSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBillingSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackageDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackageDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackageDetailWithDiscountingExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackageDetailWithDiscountingExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNFSPackageDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNFSPackageDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSubLineItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSubLineItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplyOnAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplyOnAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOnAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOnAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplyDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplyDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSubLineItemPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSubLineItemPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAddressExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAddressExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionDetailEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionDetailEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDefaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDefaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.PerformanceEx Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.PerformanceEx)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReserveTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReserveTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int ReserveTicketsResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReserveTickets1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReserveTickets1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int ReserveTicketsSpecialRequestsResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReserveTicketsUnseatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReserveTicketsUnseatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int ReserveTicketsUnseatedResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddContributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddContributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddContributionExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddContributionExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAddressAndShippingMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAddressAndShippingMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShippingMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShippingMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OrderExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterWithPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterWithPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterWithPromoCodeExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterWithPromoCodeExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool LoginResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LoginAttemptHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginWithPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginWithPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool LoginWithPromoCodeResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LoginAttemptHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateLoginWithPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateLoginWithPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoggedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewSessionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewSessionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCustomerServiceIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCustomerServiceIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStateProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStateProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeModeOfSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeModeOfSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackageDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackageDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExistingOrdersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExistingOrdersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPackageItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPackageItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackageItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackageItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckoutExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckoutExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModeOfSaleRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModeOfSaleRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PurchaseGiftCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PurchaseGiftCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPaymentPlanInstallmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPaymentPlanInstallmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FinalizePaymentPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FinalizePaymentPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidatePaymentPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidatePaymentPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConstituentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConstituentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailWithDiscountingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailWithDiscountingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackageDetailWithDiscountingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackageDetailWithDiscountingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebSeatServerListeningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebSeatServerListeningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPackageItemSeatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPackageItemSeatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int AddPackageItemSeatedResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReserveTicketsSpecifiedSeatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReserveTicketsSpecifiedSeatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int ReserveTicketsSpecifiedSeatsResult {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TessituraIntegration.TessituraWebAPI.LineItemHeader)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateCustomOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateCustomOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKeywordsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKeywordsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsByScreenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsByScreenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatsByScreenBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatsByScreenBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeatStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeatStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformancesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformancesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPackagesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPackagesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConstituentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConstituentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrdersExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrdersExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTicketPrintInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTicketPrintInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateConstituentAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateConstituentAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateConstituentInterestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateConstituentInterestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrdersForDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrdersForDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEmailStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEmailStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewSessionKeyExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewSessionKeyExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCartBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCartBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TessituraSoapClient : System.ServiceModel.ClientBase<TessituraIntegration.TessituraWebAPI.TessituraSoap>, TessituraIntegration.TessituraWebAPI.TessituraSoap {
        
        private BeginOperationDelegate onBeginGetSeatsDelegate;
        
        private EndOperationDelegate onEndGetSeatsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsBriefDelegate;
        
        private EndOperationDelegate onEndGetSeatsBriefDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsBriefCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsBriefExDelegate;
        
        private EndOperationDelegate onEndGetSeatsBriefExDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsBriefExCompletedDelegate;
        
        private BeginOperationDelegate onBeginReserveTicketsExDelegate;
        
        private EndOperationDelegate onEndReserveTicketsExDelegate;
        
        private System.Threading.SendOrPostCallback onReserveTicketsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginSMTPListeningDelegate;
        
        private EndOperationDelegate onEndSMTPListeningDelegate;
        
        private System.Threading.SendOrPostCallback onSMTPListeningCompletedDelegate;
        
        private BeginOperationDelegate onBeginCalculateFeesDelegate;
        
        private EndOperationDelegate onEndCalculateFeesDelegate;
        
        private System.Threading.SendOrPostCallback onCalculateFeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailWithDiscountingSYOSDataSetDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailWithDiscountingSYOSDataSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailWithDiscountingSYOSDataSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGiftAidInfoDelegate;
        
        private EndOperationDelegate onEndGetGiftAidInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetGiftAidInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateLimitsDelegate;
        
        private EndOperationDelegate onEndValidateLimitsDelegate;
        
        private System.Threading.SendOrPostCallback onValidateLimitsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailWithDiscountingSYOSExDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailWithDiscountingSYOSExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailWithDiscountingSYOSExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformancesEx4Delegate;
        
        private EndOperationDelegate onEndGetPerformancesEx4Delegate;
        
        private System.Threading.SendOrPostCallback onGetPerformancesEx4CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionDetailEx3Delegate;
        
        private EndOperationDelegate onEndGetProductionDetailEx3Delegate;
        
        private System.Threading.SendOrPostCallback onGetProductionDetailEx3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConstituentsExDelegate;
        
        private EndOperationDelegate onEndGetConstituentsExDelegate;
        
        private System.Threading.SendOrPostCallback onGetConstituentsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintTicketsDelegate;
        
        private EndOperationDelegate onEndPrintTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onPrintTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDestroyCacheDelegate;
        
        private EndOperationDelegate onEndDestroyCacheDelegate;
        
        private System.Threading.SendOrPostCallback onDestroyCacheCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendTicketEmailDelegate;
        
        private EndOperationDelegate onEndSendTicketEmailDelegate;
        
        private System.Threading.SendOrPostCallback onSendTicketEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginShiftContextDelegate;
        
        private EndOperationDelegate onEndShiftContextDelegate;
        
        private System.Threading.SendOrPostCallback onShiftContextCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateLoginDelegate;
        
        private EndOperationDelegate onEndCreateLoginDelegate;
        
        private System.Threading.SendOrPostCallback onCreateLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckoutEx4Delegate;
        
        private EndOperationDelegate onEndCheckoutEx4Delegate;
        
        private System.Threading.SendOrPostCallback onCheckoutEx4CompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginEx3Delegate;
        
        private EndOperationDelegate onEndLoginEx3Delegate;
        
        private System.Threading.SendOrPostCallback onLoginEx3CompletedDelegate;
        
        private BeginOperationDelegate onBeginMaintainOrderInitiatorRecipientDelegate;
        
        private EndOperationDelegate onEndMaintainOrderInitiatorRecipientDelegate;
        
        private System.Threading.SendOrPostCallback onMaintainOrderInitiatorRecipientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerSeatFeesDelegate;
        
        private EndOperationDelegate onEndGetPerSeatFeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerSeatFeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchDelegate;
        
        private EndOperationDelegate onEndBatchDelegate;
        
        private System.Threading.SendOrPostCallback onBatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGiftAidInfoDelegate;
        
        private EndOperationDelegate onEndUpdateGiftAidInfoDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGiftAidInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginTransferCartDelegate;
        
        private EndOperationDelegate onEndTransferCartDelegate;
        
        private System.Threading.SendOrPostCallback onTransferCartCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddSubPackageItemDelegate;
        
        private EndOperationDelegate onEndAddSubPackageItemDelegate;
        
        private System.Threading.SendOrPostCallback onAddSubPackageItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddSubPackageItemSeatedDelegate;
        
        private EndOperationDelegate onEndAddSubPackageItemSeatedDelegate;
        
        private System.Threading.SendOrPostCallback onAddSubPackageItemSeatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCustomOrderDataDelegate;
        
        private EndOperationDelegate onEndUpdateCustomOrderDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCustomOrderDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrderCommentsExDelegate;
        
        private EndOperationDelegate onEndAddOrderCommentsExDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrderCommentsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveOrderCommentsExDelegate;
        
        private EndOperationDelegate onEndRemoveOrderCommentsExDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveOrderCommentsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionDetailExDelegate;
        
        private EndOperationDelegate onEndGetProductionDetailExDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductionDetailExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocalDataDelegate;
        
        private EndOperationDelegate onEndGetLocalDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocalDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLocalDataDelegate;
        
        private EndOperationDelegate onEndUpdateLocalDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLocalDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPromoCodeDelegate;
        
        private EndOperationDelegate onEndGetPromoCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPromoCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStateProvinceExDelegate;
        
        private EndOperationDelegate onEndGetStateProvinceExDelegate;
        
        private System.Threading.SendOrPostCallback onGetStateProvinceExCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateSuperPackagesDelegate;
        
        private EndOperationDelegate onEndValidateSuperPackagesDelegate;
        
        private System.Threading.SendOrPostCallback onValidateSuperPackagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginTessituraSeatServerListeningViaWebSeatServerDelegate;
        
        private EndOperationDelegate onEndTessituraSeatServerListeningViaWebSeatServerDelegate;
        
        private System.Threading.SendOrPostCallback onTessituraSeatServerListeningViaWebSeatServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginTessituraCreditCardServerListeningDelegate;
        
        private EndOperationDelegate onEndTessituraCreditCardServerListeningDelegate;
        
        private System.Threading.SendOrPostCallback onTessituraCreditCardServerListeningCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrderDetailsDelegate;
        
        private EndOperationDelegate onEndGetOrderDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrderDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginConstituentDelegate;
        
        private EndOperationDelegate onEndLoginConstituentDelegate;
        
        private System.Threading.SendOrPostCallback onLoginConstituentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveSuperPackageItemDelegate;
        
        private EndOperationDelegate onEndRemoveSuperPackageItemDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveSuperPackageItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsByZoneDelegate;
        
        private EndOperationDelegate onEndGetSeatsByZoneDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsByZoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsByZoneBriefDelegate;
        
        private EndOperationDelegate onEndGetSeatsByZoneBriefDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsByZoneBriefCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailSYOSDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailSYOSDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailSYOSCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNFSPackagePerformanceItemDelegate;
        
        private EndOperationDelegate onEndAddNFSPackagePerformanceItemDelegate;
        
        private System.Threading.SendOrPostCallback onAddNFSPackagePerformanceItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNFSPackageDetailDelegate;
        
        private EndOperationDelegate onEndGetNFSPackageDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetNFSPackageDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateNFSPackagesDelegate;
        
        private EndOperationDelegate onEndValidateNFSPackagesDelegate;
        
        private System.Threading.SendOrPostCallback onValidateNFSPackagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveNFSPackageDelegate;
        
        private EndOperationDelegate onEndRemoveNFSPackageDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveNFSPackageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsBySectionDelegate;
        
        private EndOperationDelegate onEndGetSeatsBySectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsBySectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsBySectionBriefDelegate;
        
        private EndOperationDelegate onEndGetSeatsBySectionBriefDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsBySectionBriefCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGiftCertificateInfoDelegate;
        
        private EndOperationDelegate onEndGetGiftCertificateInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetGiftCertificateInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCityStateProvinceByPostalCodeDelegate;
        
        private EndOperationDelegate onEndGetCityStateProvinceByPostalCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCityStateProvinceByPostalCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAddressDelegate;
        
        private EndOperationDelegate onEndUpdateAddressDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAccountInfoEx2Delegate;
        
        private EndOperationDelegate onEndUpdateAccountInfoEx2Delegate;
        
        private System.Threading.SendOrPostCallback onUpdateAccountInfoEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOrderDetailsDelegate;
        
        private EndOperationDelegate onEndUpdateOrderDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOrderDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebContentDelegate;
        
        private EndOperationDelegate onEndGetWebContentDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFeesDelegate;
        
        private EndOperationDelegate onEndGetFeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetFeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFeeDelegate;
        
        private EndOperationDelegate onEndUpdateFeeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveFeeDelegate;
        
        private EndOperationDelegate onEndRemoveFeeDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveFeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReturnTicketsDelegate;
        
        private EndOperationDelegate onEndGetReturnTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReturnTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnTicketDelegate;
        
        private EndOperationDelegate onEndReturnTicketDelegate;
        
        private System.Threading.SendOrPostCallback onReturnTicketCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAttributesDelegate;
        
        private EndOperationDelegate onEndGetAttributesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAttributesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAssociationDelegate;
        
        private EndOperationDelegate onEndUpdateAssociationDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAssociationCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveAssociationDelegate;
        
        private EndOperationDelegate onEndRemoveAssociationDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveAssociationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddConstituentDelegate;
        
        private EndOperationDelegate onEndAddConstituentDelegate;
        
        private System.Threading.SendOrPostCallback onAddConstituentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRankingDelegate;
        
        private EndOperationDelegate onEndUpdateRankingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRankingCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateConstituentInterestsExDelegate;
        
        private EndOperationDelegate onEndUpdateConstituentInterestsExDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateConstituentInterestsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEAddressDelegate;
        
        private EndOperationDelegate onEndUpdateEAddressDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsByZonesDelegate;
        
        private EndOperationDelegate onEndGetSeatsByZonesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsByZonesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsByZonesBriefDelegate;
        
        private EndOperationDelegate onEndGetSeatsByZonesBriefDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsByZonesBriefCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsBySectionsDelegate;
        
        private EndOperationDelegate onEndGetSeatsBySectionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsBySectionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsBySectionsBriefDelegate;
        
        private EndOperationDelegate onEndGetSeatsBySectionsBriefDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsBySectionsBriefCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZonesPerSectionDelegate;
        
        private EndOperationDelegate onEndGetZonesPerSectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetZonesPerSectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetScreensDelegate;
        
        private EndOperationDelegate onEndGetScreensDelegate;
        
        private System.Threading.SendOrPostCallback onGetScreensCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectSessionSeatServerDelegate;
        
        private EndOperationDelegate onEndDisconnectSessionSeatServerDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectSessionSeatServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebSeatServerConnectionCountDelegate;
        
        private EndOperationDelegate onEndWebSeatServerConnectionCountDelegate;
        
        private System.Threading.SendOrPostCallback onWebSeatServerConnectionCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionsDelegate;
        
        private EndOperationDelegate onEndGetProductionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionCreditsDelegate;
        
        private EndOperationDelegate onEndGetProductionCreditsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductionCreditsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginExDelegate;
        
        private EndOperationDelegate onEndLoginExDelegate;
        
        private System.Threading.SendOrPostCallback onLoginExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTicketHistoryDelegate;
        
        private EndOperationDelegate onEndGetTicketHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetTicketHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSubscriptionHistoryDelegate;
        
        private EndOperationDelegate onEndGetSubscriptionHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetSubscriptionHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrderCommentsEx2Delegate;
        
        private EndOperationDelegate onEndAddOrderCommentsEx2Delegate;
        
        private System.Threading.SendOrPostCallback onAddOrderCommentsEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPromoCodeExDelegate;
        
        private EndOperationDelegate onEndGetPromoCodeExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPromoCodeExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionsExDelegate;
        
        private EndOperationDelegate onEndGetProductionsExDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductionsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAPIDiagnosticsDelegate;
        
        private EndOperationDelegate onEndGetAPIDiagnosticsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAPIDiagnosticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateTessituraUserDelegate;
        
        private EndOperationDelegate onEndValidateTessituraUserDelegate;
        
        private System.Threading.SendOrPostCallback onValidateTessituraUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckoutEx2Delegate;
        
        private EndOperationDelegate onEndCheckoutEx2Delegate;
        
        private System.Threading.SendOrPostCallback onCheckoutEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailSYOSDataSetDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailSYOSDataSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailSYOSDataSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePhoneDelegate;
        
        private EndOperationDelegate onEndUpdatePhoneDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePhoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemovePhoneDelegate;
        
        private EndOperationDelegate onEndRemovePhoneDelegate;
        
        private System.Threading.SendOrPostCallback onRemovePhoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSpecialActivityDelegate;
        
        private EndOperationDelegate onEndUpdateSpecialActivityDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSpecialActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSpecialActivitiesDelegate;
        
        private EndOperationDelegate onEndGetSpecialActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSpecialActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateConstituencyDelegate;
        
        private EndOperationDelegate onEndUpdateConstituencyDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateConstituencyCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveConstituencyDelegate;
        
        private EndOperationDelegate onEndRemoveConstituencyDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveConstituencyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHoldCodesDelegate;
        
        private EndOperationDelegate onEndGetHoldCodesDelegate;
        
        private System.Threading.SendOrPostCallback onGetHoldCodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateHoldCodeDelegate;
        
        private EndOperationDelegate onEndUpdateHoldCodeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateHoldCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveHoldCodeDelegate;
        
        private EndOperationDelegate onEndRemoveHoldCodeDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveHoldCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrderConfirmationEmailDelegate;
        
        private EndOperationDelegate onEndGetOrderConfirmationEmailDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrderConfirmationEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendOrderConfirmationEmailDelegate;
        
        private EndOperationDelegate onEndSendOrderConfirmationEmailDelegate;
        
        private System.Threading.SendOrPostCallback onSendOrderConfirmationEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestOrderConfirmationEmailDelegate;
        
        private EndOperationDelegate onEndTestOrderConfirmationEmailDelegate;
        
        private System.Threading.SendOrPostCallback onTestOrderConfirmationEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginAlterTicketExpirationDelegate;
        
        private EndOperationDelegate onEndAlterTicketExpirationDelegate;
        
        private System.Threading.SendOrPostCallback onAlterTicketExpirationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTicketExpirationDelegate;
        
        private EndOperationDelegate onEndGetTicketExpirationDelegate;
        
        private System.Threading.SendOrPostCallback onGetTicketExpirationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMaxTicketAmountDelegate;
        
        private EndOperationDelegate onEndGetMaxTicketAmountDelegate;
        
        private System.Threading.SendOrPostCallback onGetMaxTicketAmountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocalDataExDelegate;
        
        private EndOperationDelegate onEndGetLocalDataExDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocalDataExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformancesEx2Delegate;
        
        private EndOperationDelegate onEndGetPerformancesEx2Delegate;
        
        private System.Threading.SendOrPostCallback onGetPerformancesEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionsEx2Delegate;
        
        private EndOperationDelegate onEndGetProductionsEx2Delegate;
        
        private System.Threading.SendOrPostCallback onGetProductionsEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackagesEx2Delegate;
        
        private EndOperationDelegate onEndGetPackagesEx2Delegate;
        
        private System.Threading.SendOrPostCallback onGetPackagesEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteLocalProcedureDelegate;
        
        private EndOperationDelegate onEndExecuteLocalProcedureDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteLocalProcedureCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendCredentialsDelegate;
        
        private EndOperationDelegate onEndSendCredentialsDelegate;
        
        private System.Threading.SendOrPostCallback onSendCredentialsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginEx2Delegate;
        
        private EndOperationDelegate onEndLoginEx2Delegate;
        
        private System.Threading.SendOrPostCallback onLoginEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeModeOfSaleExDelegate;
        
        private EndOperationDelegate onEndChangeModeOfSaleExDelegate;
        
        private System.Threading.SendOrPostCallback onChangeModeOfSaleExCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSourceCodeDelegate;
        
        private EndOperationDelegate onEndUpdateSourceCodeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSourceCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePaymentPlanDelegate;
        
        private EndOperationDelegate onEndCreatePaymentPlanDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePaymentPlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateTessituraUserExDelegate;
        
        private EndOperationDelegate onEndValidateTessituraUserExDelegate;
        
        private System.Threading.SendOrPostCallback onValidateTessituraUserExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPermissionsDelegate;
        
        private EndOperationDelegate onEndGetPermissionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPermissionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatSummaryDelegate;
        
        private EndOperationDelegate onEndGetSeatSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckoutEx3Delegate;
        
        private EndOperationDelegate onEndCheckoutEx3Delegate;
        
        private System.Threading.SendOrPostCallback onCheckoutEx3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPrintAtHomeSettingsDelegate;
        
        private EndOperationDelegate onEndGetPrintAtHomeSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrintAtHomeSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConstituentInfoExDelegate;
        
        private EndOperationDelegate onEndGetConstituentInfoExDelegate;
        
        private System.Threading.SendOrPostCallback onGetConstituentInfoExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformancesEx3Delegate;
        
        private EndOperationDelegate onEndGetPerformancesEx3Delegate;
        
        private System.Threading.SendOrPostCallback onGetPerformancesEx3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionsEx3Delegate;
        
        private EndOperationDelegate onEndGetProductionsEx3Delegate;
        
        private System.Threading.SendOrPostCallback onGetProductionsEx3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackagesEx3Delegate;
        
        private EndOperationDelegate onEndGetPackagesEx3Delegate;
        
        private System.Threading.SendOrPostCallback onGetPackagesEx3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailExDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailWithDiscountingExDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailWithDiscountingExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailWithDiscountingExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactOptionsDelegate;
        
        private EndOperationDelegate onEndGetContactOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMailPurposesDelegate;
        
        private EndOperationDelegate onEndGetMailPurposesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMailPurposesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGiftAidDeclarationDelegate;
        
        private EndOperationDelegate onEndUpdateGiftAidDeclarationDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGiftAidDeclarationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBillingSchedulesDelegate;
        
        private EndOperationDelegate onEndGetBillingSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetBillingSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackageDetailExDelegate;
        
        private EndOperationDelegate onEndGetPackageDetailExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPackageDetailExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackageDetailWithDiscountingExDelegate;
        
        private EndOperationDelegate onEndGetPackageDetailWithDiscountingExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPackageDetailWithDiscountingExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNFSPackageDetailExDelegate;
        
        private EndOperationDelegate onEndGetNFSPackageDetailExDelegate;
        
        private System.Threading.SendOrPostCallback onGetNFSPackageDetailExCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearCartDelegate;
        
        private EndOperationDelegate onEndClearCartDelegate;
        
        private System.Threading.SendOrPostCallback onClearCartCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSubLineItemsDelegate;
        
        private EndOperationDelegate onEndGetSubLineItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSubLineItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplyOnAccountDelegate;
        
        private EndOperationDelegate onEndApplyOnAccountDelegate;
        
        private System.Threading.SendOrPostCallback onApplyOnAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOnAccountInfoDelegate;
        
        private EndOperationDelegate onEndGetOnAccountInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetOnAccountInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplyDiscountDelegate;
        
        private EndOperationDelegate onEndApplyDiscountDelegate;
        
        private System.Threading.SendOrPostCallback onApplyDiscountCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSubLineItemPriceDelegate;
        
        private EndOperationDelegate onEndUpdateSubLineItemPriceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSubLineItemPriceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAddressExDelegate;
        
        private EndOperationDelegate onEndUpdateAddressExDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAddressExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionDetailEx2Delegate;
        
        private EndOperationDelegate onEndGetProductionDetailEx2Delegate;
        
        private System.Threading.SendOrPostCallback onGetProductionDetailEx2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDefaultsDelegate;
        
        private EndOperationDelegate onEndGetDefaultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDefaultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestReprintDelegate;
        
        private EndOperationDelegate onEndRequestReprintDelegate;
        
        private System.Threading.SendOrPostCallback onRequestReprintCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailWithDiscountingSYOSDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailWithDiscountingSYOSDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailWithDiscountingSYOSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductionDetailDelegate;
        
        private EndOperationDelegate onEndGetProductionDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductionDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformancesDelegate;
        
        private EndOperationDelegate onEndGetPerformancesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformancesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKeywordsDelegate;
        
        private EndOperationDelegate onEndGetKeywordsDelegate;
        
        private System.Threading.SendOrPostCallback onGetKeywordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVenueDelegate;
        
        private EndOperationDelegate onEndGetVenueDelegate;
        
        private System.Threading.SendOrPostCallback onGetVenueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceAvailabilityDelegate;
        
        private EndOperationDelegate onEndGetPerformanceAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginReserveTicketsDelegate;
        
        private EndOperationDelegate onEndReserveTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onReserveTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginReserveTickets1Delegate;
        
        private EndOperationDelegate onEndReserveTickets1Delegate;
        
        private System.Threading.SendOrPostCallback onReserveTickets1CompletedDelegate;
        
        private BeginOperationDelegate onBeginReserveTicketsUnseatedDelegate;
        
        private EndOperationDelegate onEndReserveTicketsUnseatedDelegate;
        
        private System.Threading.SendOrPostCallback onReserveTicketsUnseatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginReleaseTicketsDelegate;
        
        private EndOperationDelegate onEndReleaseTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onReleaseTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddContributionDelegate;
        
        private EndOperationDelegate onEndAddContributionDelegate;
        
        private System.Threading.SendOrPostCallback onAddContributionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddContributionExDelegate;
        
        private EndOperationDelegate onEndAddContributionExDelegate;
        
        private System.Threading.SendOrPostCallback onAddContributionExCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveContribuionDelegate;
        
        private EndOperationDelegate onEndRemoveContribuionDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveContribuionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCartDelegate;
        
        private EndOperationDelegate onEndGetCartDelegate;
        
        private System.Threading.SendOrPostCallback onGetCartCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAddressAndShippingMethodDelegate;
        
        private EndOperationDelegate onEndGetAddressAndShippingMethodDelegate;
        
        private System.Threading.SendOrPostCallback onGetAddressAndShippingMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShippingMethodsDelegate;
        
        private EndOperationDelegate onEndGetShippingMethodsDelegate;
        
        private System.Threading.SendOrPostCallback onGetShippingMethodsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetShippingInformationDelegate;
        
        private EndOperationDelegate onEndSetShippingInformationDelegate;
        
        private System.Threading.SendOrPostCallback onSetShippingInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckoutDelegate;
        
        private EndOperationDelegate onEndCheckoutDelegate;
        
        private System.Threading.SendOrPostCallback onCheckoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPaymentMethodDelegate;
        
        private EndOperationDelegate onEndGetPaymentMethodDelegate;
        
        private System.Threading.SendOrPostCallback onGetPaymentMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrderDelegate;
        
        private EndOperationDelegate onEndGetOrderDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginOrderExistsDelegate;
        
        private EndOperationDelegate onEndOrderExistsDelegate;
        
        private System.Threading.SendOrPostCallback onOrderExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterWithPromoCodeDelegate;
        
        private EndOperationDelegate onEndRegisterWithPromoCodeDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterWithPromoCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterWithPromoCodeExDelegate;
        
        private EndOperationDelegate onEndRegisterWithPromoCodeExDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterWithPromoCodeExCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginWithPromoCodeDelegate;
        
        private EndOperationDelegate onEndLoginWithPromoCodeDelegate;
        
        private System.Threading.SendOrPostCallback onLoginWithPromoCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLoginDelegate;
        
        private EndOperationDelegate onEndUpdateLoginDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLoginWithPromoCodeDelegate;
        
        private EndOperationDelegate onEndUpdateLoginWithPromoCodeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLoginWithPromoCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginInfoDelegate;
        
        private EndOperationDelegate onEndLoginInfoDelegate;
        
        private System.Threading.SendOrPostCallback onLoginInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountInfoDelegate;
        
        private EndOperationDelegate onEndGetAccountInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAccountInfoDelegate;
        
        private EndOperationDelegate onEndUpdateAccountInfoDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAccountInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertNewShippingAddressDelegate;
        
        private EndOperationDelegate onEndInsertNewShippingAddressDelegate;
        
        private System.Threading.SendOrPostCallback onInsertNewShippingAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoggedInDelegate;
        
        private EndOperationDelegate onEndLoggedInDelegate;
        
        private System.Threading.SendOrPostCallback onLoggedInCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewSessionKeyDelegate;
        
        private EndOperationDelegate onEndGetNewSessionKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewSessionKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLastAccessTimeDelegate;
        
        private EndOperationDelegate onEndUpdateLastAccessTimeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLastAccessTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVariablesDelegate;
        
        private EndOperationDelegate onEndGetVariablesDelegate;
        
        private System.Threading.SendOrPostCallback onGetVariablesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetVariableDelegate;
        
        private EndOperationDelegate onEndSetVariableDelegate;
        
        private System.Threading.SendOrPostCallback onSetVariableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVariableDelegate;
        
        private EndOperationDelegate onEndDeleteVariableDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVariableCompletedDelegate;
        
        private BeginOperationDelegate onBeginTransferSessionDelegate;
        
        private EndOperationDelegate onEndTransferSessionDelegate;
        
        private System.Threading.SendOrPostCallback onTransferSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCustomerServiceIssueDelegate;
        
        private EndOperationDelegate onEndAddCustomerServiceIssueDelegate;
        
        private System.Threading.SendOrPostCallback onAddCustomerServiceIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCountriesDelegate;
        
        private EndOperationDelegate onEndGetCountriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCountriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStateProvinceDelegate;
        
        private EndOperationDelegate onEndGetStateProvinceDelegate;
        
        private System.Threading.SendOrPostCallback onGetStateProvinceCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeModeOfSaleDelegate;
        
        private EndOperationDelegate onEndChangeModeOfSaleDelegate;
        
        private System.Threading.SendOrPostCallback onChangeModeOfSaleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackagesDelegate;
        
        private EndOperationDelegate onEndGetPackagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPackagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackageDetailDelegate;
        
        private EndOperationDelegate onEndGetPackageDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetPackageDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExistingOrdersInfoDelegate;
        
        private EndOperationDelegate onEndGetExistingOrdersInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetExistingOrdersInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadExistingOrderDelegate;
        
        private EndOperationDelegate onEndLoadExistingOrderDelegate;
        
        private System.Threading.SendOrPostCallback onLoadExistingOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPackageItemDelegate;
        
        private EndOperationDelegate onEndAddPackageItemDelegate;
        
        private System.Threading.SendOrPostCallback onAddPackageItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemovePackageItemDelegate;
        
        private EndOperationDelegate onEndRemovePackageItemDelegate;
        
        private System.Threading.SendOrPostCallback onRemovePackageItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackageItemDelegate;
        
        private EndOperationDelegate onEndGetPackageItemDelegate;
        
        private System.Threading.SendOrPostCallback onGetPackageItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrderCommentsDelegate;
        
        private EndOperationDelegate onEndAddOrderCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrderCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveOrderCommentsDelegate;
        
        private EndOperationDelegate onEndRemoveOrderCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveOrderCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckoutExDelegate;
        
        private EndOperationDelegate onEndCheckoutExDelegate;
        
        private System.Threading.SendOrPostCallback onCheckoutExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModeOfSaleRulesDelegate;
        
        private EndOperationDelegate onEndGetModeOfSaleRulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetModeOfSaleRulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginPurchaseGiftCertificateDelegate;
        
        private EndOperationDelegate onEndPurchaseGiftCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onPurchaseGiftCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplyGiftCertificateDelegate;
        
        private EndOperationDelegate onEndApplyGiftCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onApplyGiftCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveGiftCertificateDelegate;
        
        private EndOperationDelegate onEndRemoveGiftCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveGiftCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPaymentPlanInstallmentDelegate;
        
        private EndOperationDelegate onEndAddPaymentPlanInstallmentDelegate;
        
        private System.Threading.SendOrPostCallback onAddPaymentPlanInstallmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemovePaymentPlanDelegate;
        
        private EndOperationDelegate onEndRemovePaymentPlanDelegate;
        
        private System.Threading.SendOrPostCallback onRemovePaymentPlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginFinalizePaymentPlanDelegate;
        
        private EndOperationDelegate onEndFinalizePaymentPlanDelegate;
        
        private System.Threading.SendOrPostCallback onFinalizePaymentPlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidatePaymentPlanDelegate;
        
        private EndOperationDelegate onEndValidatePaymentPlanDelegate;
        
        private System.Threading.SendOrPostCallback onValidatePaymentPlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConstituentInfoDelegate;
        
        private EndOperationDelegate onEndGetConstituentInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetConstituentInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailWithDiscountingDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailWithDiscountingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailWithDiscountingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackageDetailWithDiscountingDelegate;
        
        private EndOperationDelegate onEndGetPackageDetailWithDiscountingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPackageDetailWithDiscountingCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAccountInfoExDelegate;
        
        private EndOperationDelegate onEndUpdateAccountInfoExDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAccountInfoExCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebSeatServerListeningDelegate;
        
        private EndOperationDelegate onEndWebSeatServerListeningDelegate;
        
        private System.Threading.SendOrPostCallback onWebSeatServerListeningCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPackageItemSeatedDelegate;
        
        private EndOperationDelegate onEndAddPackageItemSeatedDelegate;
        
        private System.Threading.SendOrPostCallback onAddPackageItemSeatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginReserveTicketsSpecifiedSeatsDelegate;
        
        private EndOperationDelegate onEndReserveTicketsSpecifiedSeatsDelegate;
        
        private System.Threading.SendOrPostCallback onReserveTicketsSpecifiedSeatsCompletedDelegate;
        
        private BeginOperationDelegate onBeginForgotLoginDelegate;
        
        private EndOperationDelegate onEndForgotLoginDelegate;
        
        private System.Threading.SendOrPostCallback onForgotLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePriceTypeDelegate;
        
        private EndOperationDelegate onEndUpdatePriceTypeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePriceTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateCustomOfferDelegate;
        
        private EndOperationDelegate onEndValidateCustomOfferDelegate;
        
        private System.Threading.SendOrPostCallback onValidateCustomOfferCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKeywordsExDelegate;
        
        private EndOperationDelegate onEndGetKeywordsExDelegate;
        
        private System.Threading.SendOrPostCallback onGetKeywordsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsByScreenDelegate;
        
        private EndOperationDelegate onEndGetSeatsByScreenDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsByScreenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatsByScreenBriefDelegate;
        
        private EndOperationDelegate onEndGetSeatsByScreenBriefDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatsByScreenBriefCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeatStatusDelegate;
        
        private EndOperationDelegate onEndGetSeatStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeatStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformancesExDelegate;
        
        private EndOperationDelegate onEndGetPerformancesExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformancesExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPackagesExDelegate;
        
        private EndOperationDelegate onEndGetPackagesExDelegate;
        
        private System.Threading.SendOrPostCallback onGetPackagesExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConstituentsDelegate;
        
        private EndOperationDelegate onEndGetConstituentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetConstituentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrdersExDelegate;
        
        private EndOperationDelegate onEndGetOrdersExDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrdersExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTicketPrintInformationDelegate;
        
        private EndOperationDelegate onEndGetTicketPrintInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetTicketPrintInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateConstituentAttributesDelegate;
        
        private EndOperationDelegate onEndUpdateConstituentAttributesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateConstituentAttributesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateConstituentInterestsDelegate;
        
        private EndOperationDelegate onEndUpdateConstituentInterestsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateConstituentInterestsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrdersForDeliveryDelegate;
        
        private EndOperationDelegate onEndGetOrdersForDeliveryDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrdersForDeliveryCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEmailStatusDelegate;
        
        private EndOperationDelegate onEndUpdateEmailStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEmailStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewSessionKeyExDelegate;
        
        private EndOperationDelegate onEndGetNewSessionKeyExDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewSessionKeyExCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCartBriefDelegate;
        
        private EndOperationDelegate onEndGetCartBriefDelegate;
        
        private System.Threading.SendOrPostCallback onGetCartBriefCompletedDelegate;
        
        public TessituraSoapClient() {
        }
        
        public TessituraSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TessituraSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TessituraSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TessituraSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetSeatsCompletedEventArgs> GetSeatsCompleted;
        
        public event System.EventHandler<GetSeatsBriefCompletedEventArgs> GetSeatsBriefCompleted;
        
        public event System.EventHandler<GetSeatsBriefExCompletedEventArgs> GetSeatsBriefExCompleted;
        
        public event System.EventHandler<ReserveTicketsExCompletedEventArgs> ReserveTicketsExCompleted;
        
        public event System.EventHandler<SMTPListeningCompletedEventArgs> SMTPListeningCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CalculateFeesCompleted;
        
        public event System.EventHandler<GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs> GetPerformanceDetailWithDiscountingSYOSDataSetCompleted;
        
        public event System.EventHandler<GetGiftAidInfoCompletedEventArgs> GetGiftAidInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ValidateLimitsCompleted;
        
        public event System.EventHandler<GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs> GetPerformanceDetailWithDiscountingSYOSExCompleted;
        
        public event System.EventHandler<GetPerformancesEx4CompletedEventArgs> GetPerformancesEx4Completed;
        
        public event System.EventHandler<GetProductionDetailEx3CompletedEventArgs> GetProductionDetailEx3Completed;
        
        public event System.EventHandler<GetConstituentsExCompletedEventArgs> GetConstituentsExCompleted;
        
        public event System.EventHandler<PrintTicketsCompletedEventArgs> PrintTicketsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DestroyCacheCompleted;
        
        public event System.EventHandler<SendTicketEmailCompletedEventArgs> SendTicketEmailCompleted;
        
        public event System.EventHandler<ShiftContextCompletedEventArgs> ShiftContextCompleted;
        
        public event System.EventHandler<CreateLoginCompletedEventArgs> CreateLoginCompleted;
        
        public event System.EventHandler<CheckoutEx4CompletedEventArgs> CheckoutEx4Completed;
        
        public event System.EventHandler<LoginEx3CompletedEventArgs> LoginEx3Completed;
        
        public event System.EventHandler<MaintainOrderInitiatorRecipientCompletedEventArgs> MaintainOrderInitiatorRecipientCompleted;
        
        public event System.EventHandler<GetPerSeatFeesCompletedEventArgs> GetPerSeatFeesCompleted;
        
        public event System.EventHandler<BatchCompletedEventArgs> BatchCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateGiftAidInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TransferCartCompleted;
        
        public event System.EventHandler<AddSubPackageItemCompletedEventArgs> AddSubPackageItemCompleted;
        
        public event System.EventHandler<AddSubPackageItemSeatedCompletedEventArgs> AddSubPackageItemSeatedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateCustomOrderDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddOrderCommentsExCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveOrderCommentsExCompleted;
        
        public event System.EventHandler<GetProductionDetailExCompletedEventArgs> GetProductionDetailExCompleted;
        
        public event System.EventHandler<GetLocalDataCompletedEventArgs> GetLocalDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateLocalDataCompleted;
        
        public event System.EventHandler<GetPromoCodeCompletedEventArgs> GetPromoCodeCompleted;
        
        public event System.EventHandler<GetStateProvinceExCompletedEventArgs> GetStateProvinceExCompleted;
        
        public event System.EventHandler<ValidateSuperPackagesCompletedEventArgs> ValidateSuperPackagesCompleted;
        
        public event System.EventHandler<TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs> TessituraSeatServerListeningViaWebSeatServerCompleted;
        
        public event System.EventHandler<TessituraCreditCardServerListeningCompletedEventArgs> TessituraCreditCardServerListeningCompleted;
        
        public event System.EventHandler<GetOrderDetailsCompletedEventArgs> GetOrderDetailsCompleted;
        
        public event System.EventHandler<LoginConstituentCompletedEventArgs> LoginConstituentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveSuperPackageItemCompleted;
        
        public event System.EventHandler<GetSeatsByZoneCompletedEventArgs> GetSeatsByZoneCompleted;
        
        public event System.EventHandler<GetSeatsByZoneBriefCompletedEventArgs> GetSeatsByZoneBriefCompleted;
        
        public event System.EventHandler<GetPerformanceDetailSYOSCompletedEventArgs> GetPerformanceDetailSYOSCompleted;
        
        public event System.EventHandler<AddNFSPackagePerformanceItemCompletedEventArgs> AddNFSPackagePerformanceItemCompleted;
        
        public event System.EventHandler<GetNFSPackageDetailCompletedEventArgs> GetNFSPackageDetailCompleted;
        
        public event System.EventHandler<ValidateNFSPackagesCompletedEventArgs> ValidateNFSPackagesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveNFSPackageCompleted;
        
        public event System.EventHandler<GetSeatsBySectionCompletedEventArgs> GetSeatsBySectionCompleted;
        
        public event System.EventHandler<GetSeatsBySectionBriefCompletedEventArgs> GetSeatsBySectionBriefCompleted;
        
        public event System.EventHandler<GetGiftCertificateInfoCompletedEventArgs> GetGiftCertificateInfoCompleted;
        
        public event System.EventHandler<GetCityStateProvinceByPostalCodeCompletedEventArgs> GetCityStateProvinceByPostalCodeCompleted;
        
        public event System.EventHandler<UpdateAddressCompletedEventArgs> UpdateAddressCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAccountInfoEx2Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateOrderDetailsCompleted;
        
        public event System.EventHandler<GetWebContentCompletedEventArgs> GetWebContentCompleted;
        
        public event System.EventHandler<GetFeesCompletedEventArgs> GetFeesCompleted;
        
        public event System.EventHandler<UpdateFeeCompletedEventArgs> UpdateFeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveFeeCompleted;
        
        public event System.EventHandler<GetReturnTicketsCompletedEventArgs> GetReturnTicketsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReturnTicketCompleted;
        
        public event System.EventHandler<GetAttributesCompletedEventArgs> GetAttributesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAssociationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveAssociationCompleted;
        
        public event System.EventHandler<AddConstituentCompletedEventArgs> AddConstituentCompleted;
        
        public event System.EventHandler<UpdateRankingCompletedEventArgs> UpdateRankingCompleted;
        
        public event System.EventHandler<UpdateConstituentInterestsExCompletedEventArgs> UpdateConstituentInterestsExCompleted;
        
        public event System.EventHandler<UpdateEAddressCompletedEventArgs> UpdateEAddressCompleted;
        
        public event System.EventHandler<GetSeatsByZonesCompletedEventArgs> GetSeatsByZonesCompleted;
        
        public event System.EventHandler<GetSeatsByZonesBriefCompletedEventArgs> GetSeatsByZonesBriefCompleted;
        
        public event System.EventHandler<GetSeatsBySectionsCompletedEventArgs> GetSeatsBySectionsCompleted;
        
        public event System.EventHandler<GetSeatsBySectionsBriefCompletedEventArgs> GetSeatsBySectionsBriefCompleted;
        
        public event System.EventHandler<GetZonesPerSectionCompletedEventArgs> GetZonesPerSectionCompleted;
        
        public event System.EventHandler<GetScreensCompletedEventArgs> GetScreensCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectSessionSeatServerCompleted;
        
        public event System.EventHandler<WebSeatServerConnectionCountCompletedEventArgs> WebSeatServerConnectionCountCompleted;
        
        public event System.EventHandler<GetProductionsCompletedEventArgs> GetProductionsCompleted;
        
        public event System.EventHandler<GetProductionCreditsCompletedEventArgs> GetProductionCreditsCompleted;
        
        public event System.EventHandler<LoginExCompletedEventArgs> LoginExCompleted;
        
        public event System.EventHandler<GetTicketHistoryCompletedEventArgs> GetTicketHistoryCompleted;
        
        public event System.EventHandler<GetSubscriptionHistoryCompletedEventArgs> GetSubscriptionHistoryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddOrderCommentsEx2Completed;
        
        public event System.EventHandler<GetPromoCodeExCompletedEventArgs> GetPromoCodeExCompleted;
        
        public event System.EventHandler<GetProductionsExCompletedEventArgs> GetProductionsExCompleted;
        
        public event System.EventHandler<GetAPIDiagnosticsCompletedEventArgs> GetAPIDiagnosticsCompleted;
        
        public event System.EventHandler<ValidateTessituraUserCompletedEventArgs> ValidateTessituraUserCompleted;
        
        public event System.EventHandler<CheckoutEx2CompletedEventArgs> CheckoutEx2Completed;
        
        public event System.EventHandler<GetPerformanceDetailSYOSDataSetCompletedEventArgs> GetPerformanceDetailSYOSDataSetCompleted;
        
        public event System.EventHandler<UpdatePhoneCompletedEventArgs> UpdatePhoneCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemovePhoneCompleted;
        
        public event System.EventHandler<UpdateSpecialActivityCompletedEventArgs> UpdateSpecialActivityCompleted;
        
        public event System.EventHandler<GetSpecialActivitiesCompletedEventArgs> GetSpecialActivitiesCompleted;
        
        public event System.EventHandler<UpdateConstituencyCompletedEventArgs> UpdateConstituencyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveConstituencyCompleted;
        
        public event System.EventHandler<GetHoldCodesCompletedEventArgs> GetHoldCodesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateHoldCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveHoldCodeCompleted;
        
        public event System.EventHandler<GetOrderConfirmationEmailCompletedEventArgs> GetOrderConfirmationEmailCompleted;
        
        public event System.EventHandler<SendOrderConfirmationEmailCompletedEventArgs> SendOrderConfirmationEmailCompleted;
        
        public event System.EventHandler<TestOrderConfirmationEmailCompletedEventArgs> TestOrderConfirmationEmailCompleted;
        
        public event System.EventHandler<AlterTicketExpirationCompletedEventArgs> AlterTicketExpirationCompleted;
        
        public event System.EventHandler<GetTicketExpirationCompletedEventArgs> GetTicketExpirationCompleted;
        
        public event System.EventHandler<GetMaxTicketAmountCompletedEventArgs> GetMaxTicketAmountCompleted;
        
        public event System.EventHandler<GetLocalDataExCompletedEventArgs> GetLocalDataExCompleted;
        
        public event System.EventHandler<GetPerformancesEx2CompletedEventArgs> GetPerformancesEx2Completed;
        
        public event System.EventHandler<GetProductionsEx2CompletedEventArgs> GetProductionsEx2Completed;
        
        public event System.EventHandler<GetPackagesEx2CompletedEventArgs> GetPackagesEx2Completed;
        
        public event System.EventHandler<ExecuteLocalProcedureCompletedEventArgs> ExecuteLocalProcedureCompleted;
        
        public event System.EventHandler<SendCredentialsCompletedEventArgs> SendCredentialsCompleted;
        
        public event System.EventHandler<LoginEx2CompletedEventArgs> LoginEx2Completed;
        
        public event System.EventHandler<ChangeModeOfSaleExCompletedEventArgs> ChangeModeOfSaleExCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSourceCodeCompleted;
        
        public event System.EventHandler<CreatePaymentPlanCompletedEventArgs> CreatePaymentPlanCompleted;
        
        public event System.EventHandler<ValidateTessituraUserExCompletedEventArgs> ValidateTessituraUserExCompleted;
        
        public event System.EventHandler<GetPermissionsCompletedEventArgs> GetPermissionsCompleted;
        
        public event System.EventHandler<GetSeatSummaryCompletedEventArgs> GetSeatSummaryCompleted;
        
        public event System.EventHandler<CheckoutEx3CompletedEventArgs> CheckoutEx3Completed;
        
        public event System.EventHandler<GetPrintAtHomeSettingsCompletedEventArgs> GetPrintAtHomeSettingsCompleted;
        
        public event System.EventHandler<GetConstituentInfoExCompletedEventArgs> GetConstituentInfoExCompleted;
        
        public event System.EventHandler<GetPerformancesEx3CompletedEventArgs> GetPerformancesEx3Completed;
        
        public event System.EventHandler<GetProductionsEx3CompletedEventArgs> GetProductionsEx3Completed;
        
        public event System.EventHandler<GetPackagesEx3CompletedEventArgs> GetPackagesEx3Completed;
        
        public event System.EventHandler<GetPerformanceDetailExCompletedEventArgs> GetPerformanceDetailExCompleted;
        
        public event System.EventHandler<GetPerformanceDetailWithDiscountingExCompletedEventArgs> GetPerformanceDetailWithDiscountingExCompleted;
        
        public event System.EventHandler<GetContactOptionsCompletedEventArgs> GetContactOptionsCompleted;
        
        public event System.EventHandler<GetMailPurposesCompletedEventArgs> GetMailPurposesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateGiftAidDeclarationCompleted;
        
        public event System.EventHandler<GetBillingSchedulesCompletedEventArgs> GetBillingSchedulesCompleted;
        
        public event System.EventHandler<GetPackageDetailExCompletedEventArgs> GetPackageDetailExCompleted;
        
        public event System.EventHandler<GetPackageDetailWithDiscountingExCompletedEventArgs> GetPackageDetailWithDiscountingExCompleted;
        
        public event System.EventHandler<GetNFSPackageDetailExCompletedEventArgs> GetNFSPackageDetailExCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearCartCompleted;
        
        public event System.EventHandler<GetSubLineItemsCompletedEventArgs> GetSubLineItemsCompleted;
        
        public event System.EventHandler<ApplyOnAccountCompletedEventArgs> ApplyOnAccountCompleted;
        
        public event System.EventHandler<GetOnAccountInfoCompletedEventArgs> GetOnAccountInfoCompleted;
        
        public event System.EventHandler<ApplyDiscountCompletedEventArgs> ApplyDiscountCompleted;
        
        public event System.EventHandler<UpdateSubLineItemPriceCompletedEventArgs> UpdateSubLineItemPriceCompleted;
        
        public event System.EventHandler<UpdateAddressExCompletedEventArgs> UpdateAddressExCompleted;
        
        public event System.EventHandler<GetProductionDetailEx2CompletedEventArgs> GetProductionDetailEx2Completed;
        
        public event System.EventHandler<GetDefaultsCompletedEventArgs> GetDefaultsCompleted;
        
        public event System.EventHandler<RequestReprintCompletedEventArgs> RequestReprintCompleted;
        
        public event System.EventHandler<GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs> GetPerformanceDetailWithDiscountingSYOSCompleted;
        
        public event System.EventHandler<GetProductionDetailCompletedEventArgs> GetProductionDetailCompleted;
        
        public event System.EventHandler<GetPerformancesCompletedEventArgs> GetPerformancesCompleted;
        
        public event System.EventHandler<GetPerformanceDetailCompletedEventArgs> GetPerformanceDetailCompleted;
        
        public event System.EventHandler<GetKeywordsCompletedEventArgs> GetKeywordsCompleted;
        
        public event System.EventHandler<GetVenueCompletedEventArgs> GetVenueCompleted;
        
        public event System.EventHandler<GetPerformanceAvailabilityCompletedEventArgs> GetPerformanceAvailabilityCompleted;
        
        public event System.EventHandler<ReserveTicketsCompletedEventArgs> ReserveTicketsCompleted;
        
        public event System.EventHandler<ReserveTickets1CompletedEventArgs> ReserveTickets1Completed;
        
        public event System.EventHandler<ReserveTicketsUnseatedCompletedEventArgs> ReserveTicketsUnseatedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReleaseTicketsCompleted;
        
        public event System.EventHandler<AddContributionCompletedEventArgs> AddContributionCompleted;
        
        public event System.EventHandler<AddContributionExCompletedEventArgs> AddContributionExCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveContribuionCompleted;
        
        public event System.EventHandler<GetCartCompletedEventArgs> GetCartCompleted;
        
        public event System.EventHandler<GetAddressAndShippingMethodCompletedEventArgs> GetAddressAndShippingMethodCompleted;
        
        public event System.EventHandler<GetShippingMethodsCompletedEventArgs> GetShippingMethodsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetShippingInformationCompleted;
        
        public event System.EventHandler<CheckoutCompletedEventArgs> CheckoutCompleted;
        
        public event System.EventHandler<GetPaymentMethodCompletedEventArgs> GetPaymentMethodCompleted;
        
        public event System.EventHandler<GetOrderCompletedEventArgs> GetOrderCompleted;
        
        public event System.EventHandler<OrderExistsCompletedEventArgs> OrderExistsCompleted;
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<RegisterWithPromoCodeCompletedEventArgs> RegisterWithPromoCodeCompleted;
        
        public event System.EventHandler<RegisterWithPromoCodeExCompletedEventArgs> RegisterWithPromoCodeExCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogoutCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<LoginWithPromoCodeCompletedEventArgs> LoginWithPromoCodeCompleted;
        
        public event System.EventHandler<UpdateLoginCompletedEventArgs> UpdateLoginCompleted;
        
        public event System.EventHandler<UpdateLoginWithPromoCodeCompletedEventArgs> UpdateLoginWithPromoCodeCompleted;
        
        public event System.EventHandler<LoginInfoCompletedEventArgs> LoginInfoCompleted;
        
        public event System.EventHandler<GetAccountInfoCompletedEventArgs> GetAccountInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAccountInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertNewShippingAddressCompleted;
        
        public event System.EventHandler<LoggedInCompletedEventArgs> LoggedInCompleted;
        
        public event System.EventHandler<GetNewSessionKeyCompletedEventArgs> GetNewSessionKeyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateLastAccessTimeCompleted;
        
        public event System.EventHandler<GetVariablesCompletedEventArgs> GetVariablesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetVariableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteVariableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TransferSessionCompleted;
        
        public event System.EventHandler<AddCustomerServiceIssueCompletedEventArgs> AddCustomerServiceIssueCompleted;
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<GetCountriesCompletedEventArgs> GetCountriesCompleted;
        
        public event System.EventHandler<GetStateProvinceCompletedEventArgs> GetStateProvinceCompleted;
        
        public event System.EventHandler<ChangeModeOfSaleCompletedEventArgs> ChangeModeOfSaleCompleted;
        
        public event System.EventHandler<GetPackagesCompletedEventArgs> GetPackagesCompleted;
        
        public event System.EventHandler<GetPackageDetailCompletedEventArgs> GetPackageDetailCompleted;
        
        public event System.EventHandler<GetExistingOrdersInfoCompletedEventArgs> GetExistingOrdersInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadExistingOrderCompleted;
        
        public event System.EventHandler<AddPackageItemCompletedEventArgs> AddPackageItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemovePackageItemCompleted;
        
        public event System.EventHandler<GetPackageItemCompletedEventArgs> GetPackageItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddOrderCommentsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveOrderCommentsCompleted;
        
        public event System.EventHandler<CheckoutExCompletedEventArgs> CheckoutExCompleted;
        
        public event System.EventHandler<GetModeOfSaleRulesCompletedEventArgs> GetModeOfSaleRulesCompleted;
        
        public event System.EventHandler<PurchaseGiftCertificateCompletedEventArgs> PurchaseGiftCertificateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ApplyGiftCertificateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveGiftCertificateCompleted;
        
        public event System.EventHandler<AddPaymentPlanInstallmentCompletedEventArgs> AddPaymentPlanInstallmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemovePaymentPlanCompleted;
        
        public event System.EventHandler<FinalizePaymentPlanCompletedEventArgs> FinalizePaymentPlanCompleted;
        
        public event System.EventHandler<ValidatePaymentPlanCompletedEventArgs> ValidatePaymentPlanCompleted;
        
        public event System.EventHandler<GetConstituentInfoCompletedEventArgs> GetConstituentInfoCompleted;
        
        public event System.EventHandler<GetPerformanceDetailWithDiscountingCompletedEventArgs> GetPerformanceDetailWithDiscountingCompleted;
        
        public event System.EventHandler<GetPackageDetailWithDiscountingCompletedEventArgs> GetPackageDetailWithDiscountingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAccountInfoExCompleted;
        
        public event System.EventHandler<WebSeatServerListeningCompletedEventArgs> WebSeatServerListeningCompleted;
        
        public event System.EventHandler<AddPackageItemSeatedCompletedEventArgs> AddPackageItemSeatedCompleted;
        
        public event System.EventHandler<ReserveTicketsSpecifiedSeatsCompletedEventArgs> ReserveTicketsSpecifiedSeatsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ForgotLoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePriceTypeCompleted;
        
        public event System.EventHandler<ValidateCustomOfferCompletedEventArgs> ValidateCustomOfferCompleted;
        
        public event System.EventHandler<GetKeywordsExCompletedEventArgs> GetKeywordsExCompleted;
        
        public event System.EventHandler<GetSeatsByScreenCompletedEventArgs> GetSeatsByScreenCompleted;
        
        public event System.EventHandler<GetSeatsByScreenBriefCompletedEventArgs> GetSeatsByScreenBriefCompleted;
        
        public event System.EventHandler<GetSeatStatusCompletedEventArgs> GetSeatStatusCompleted;
        
        public event System.EventHandler<GetPerformancesExCompletedEventArgs> GetPerformancesExCompleted;
        
        public event System.EventHandler<GetPackagesExCompletedEventArgs> GetPackagesExCompleted;
        
        public event System.EventHandler<GetConstituentsCompletedEventArgs> GetConstituentsCompleted;
        
        public event System.EventHandler<GetOrdersExCompletedEventArgs> GetOrdersExCompleted;
        
        public event System.EventHandler<GetTicketPrintInformationCompletedEventArgs> GetTicketPrintInformationCompleted;
        
        public event System.EventHandler<UpdateConstituentAttributesCompletedEventArgs> UpdateConstituentAttributesCompleted;
        
        public event System.EventHandler<UpdateConstituentInterestsCompletedEventArgs> UpdateConstituentInterestsCompleted;
        
        public event System.EventHandler<GetOrdersForDeliveryCompletedEventArgs> GetOrdersForDeliveryCompleted;
        
        public event System.EventHandler<UpdateEmailStatusCompletedEventArgs> UpdateEmailStatusCompleted;
        
        public event System.EventHandler<GetNewSessionKeyExCompletedEventArgs> GetNewSessionKeyExCompleted;
        
        public event System.EventHandler<GetCartBriefCompletedEventArgs> GetCartBriefCompleted;
        
        public System.Data.DataSet GetSeats(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            return base.Channel.GetSeats(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeats(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeats(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeats(System.IAsyncResult result) {
            return base.Channel.EndGetSeats(result);
        }
        
        private System.IAsyncResult OnBeginGetSeats(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPackageNumber = ((int)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            string sZoneList = ((string)(inValues[3]));
            string sSectionList = ((string)(inValues[4]));
            string sScreenList = ((string)(inValues[5]));
            char cSummaryOnly = ((char)(inValues[6]));
            char cCalcPackageAlloc = ((char)(inValues[7]));
            string sCheckPriceTypes = ((string)(inValues[8]));
            char cReturnNonSeats = ((char)(inValues[9]));
            return this.BeginGetSeats(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, callback, asyncState);
        }
        
        private object[] OnEndGetSeats(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeats(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsCompleted(object state) {
            if ((this.GetSeatsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsCompleted(this, new GetSeatsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            this.GetSeatsAsync(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, null);
        }
        
        public void GetSeatsAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, object userState) {
            if ((this.onBeginGetSeatsDelegate == null)) {
                this.onBeginGetSeatsDelegate = new BeginOperationDelegate(this.OnBeginGetSeats);
            }
            if ((this.onEndGetSeatsDelegate == null)) {
                this.onEndGetSeatsDelegate = new EndOperationDelegate(this.OnEndGetSeats);
            }
            if ((this.onGetSeatsCompletedDelegate == null)) {
                this.onGetSeatsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsDelegate, new object[] {
                        sSessionKey,
                        iPackageNumber,
                        iPerformanceNumber,
                        sZoneList,
                        sSectionList,
                        sScreenList,
                        cSummaryOnly,
                        cCalcPackageAlloc,
                        sCheckPriceTypes,
                        cReturnNonSeats}, this.onEndGetSeatsDelegate, this.onGetSeatsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsBrief(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            return base.Channel.GetSeatsBrief(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsBrief(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsBrief(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsBrief(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsBrief(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsBrief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPackageNumber = ((int)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            string sZoneList = ((string)(inValues[3]));
            string sSectionList = ((string)(inValues[4]));
            string sScreenList = ((string)(inValues[5]));
            char cSummaryOnly = ((char)(inValues[6]));
            char cCalcPackageAlloc = ((char)(inValues[7]));
            string sCheckPriceTypes = ((string)(inValues[8]));
            char cReturnNonSeats = ((char)(inValues[9]));
            return this.BeginGetSeatsBrief(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsBrief(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsBrief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsBriefCompleted(object state) {
            if ((this.GetSeatsBriefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsBriefCompleted(this, new GetSeatsBriefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsBriefAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            this.GetSeatsBriefAsync(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, null);
        }
        
        public void GetSeatsBriefAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, object userState) {
            if ((this.onBeginGetSeatsBriefDelegate == null)) {
                this.onBeginGetSeatsBriefDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsBrief);
            }
            if ((this.onEndGetSeatsBriefDelegate == null)) {
                this.onEndGetSeatsBriefDelegate = new EndOperationDelegate(this.OnEndGetSeatsBrief);
            }
            if ((this.onGetSeatsBriefCompletedDelegate == null)) {
                this.onGetSeatsBriefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsBriefCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsBriefDelegate, new object[] {
                        sSessionKey,
                        iPackageNumber,
                        iPerformanceNumber,
                        sZoneList,
                        sSectionList,
                        sScreenList,
                        cSummaryOnly,
                        cCalcPackageAlloc,
                        sCheckPriceTypes,
                        cReturnNonSeats}, this.onEndGetSeatsBriefDelegate, this.onGetSeatsBriefCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsBriefEx(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            return base.Channel.GetSeatsBriefEx(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsBriefEx(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsBriefEx(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsBriefEx(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsBriefEx(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsBriefEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPackageNumber = ((int)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            string sZoneList = ((string)(inValues[3]));
            string sSectionList = ((string)(inValues[4]));
            string sScreenList = ((string)(inValues[5]));
            char cSummaryOnly = ((char)(inValues[6]));
            char cCalcPackageAlloc = ((char)(inValues[7]));
            string sCheckPriceTypes = ((string)(inValues[8]));
            char cReturnNonSeats = ((char)(inValues[9]));
            return this.BeginGetSeatsBriefEx(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsBriefEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsBriefEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsBriefExCompleted(object state) {
            if ((this.GetSeatsBriefExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsBriefExCompleted(this, new GetSeatsBriefExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsBriefExAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            this.GetSeatsBriefExAsync(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, null);
        }
        
        public void GetSeatsBriefExAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, object userState) {
            if ((this.onBeginGetSeatsBriefExDelegate == null)) {
                this.onBeginGetSeatsBriefExDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsBriefEx);
            }
            if ((this.onEndGetSeatsBriefExDelegate == null)) {
                this.onEndGetSeatsBriefExDelegate = new EndOperationDelegate(this.OnEndGetSeatsBriefEx);
            }
            if ((this.onGetSeatsBriefExCompletedDelegate == null)) {
                this.onGetSeatsBriefExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsBriefExCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsBriefExDelegate, new object[] {
                        sSessionKey,
                        iPackageNumber,
                        iPerformanceNumber,
                        sZoneList,
                        sSectionList,
                        sScreenList,
                        cSummaryOnly,
                        cCalcPackageAlloc,
                        sCheckPriceTypes,
                        cReturnNonSeats}, this.onEndGetSeatsBriefExDelegate, this.onGetSeatsBriefExCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.ReserveTicketsEx(TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest request) {
            return base.Channel.ReserveTicketsEx(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader ReserveTicketsEx(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, out int ReserveTicketsExResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            TessituraIntegration.TessituraWebAPI.ReserveTicketsExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).ReserveTicketsEx(inValue);
            ReserveTicketsExResult = retVal.ReserveTicketsExResult;
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginReserveTicketsEx(TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReserveTicketsEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReserveTicketsEx(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsExRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginReserveTicketsEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndReserveTicketsEx(System.IAsyncResult result) {
            return base.Channel.EndReserveTicketsEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndReserveTicketsEx(System.IAsyncResult result, out int ReserveTicketsExResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndReserveTicketsEx(result);
            ReserveTicketsExResult = retVal.ReserveTicketsExResult;
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginReserveTicketsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            string sPriceType = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iNumberOfSeats = ((int)(inValues[3]));
            int iZone = ((int)(inValues[4]));
            string sSpecialRequests = ((string)(inValues[5]));
            return this.BeginReserveTicketsEx(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, callback, asyncState);
        }
        
        private object[] OnEndReserveTicketsEx(System.IAsyncResult result) {
            int ReserveTicketsExResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndReserveTicketsEx(result, out ReserveTicketsExResult);
            return new object[] {
                    ReserveTicketsExResult,
                    retVal};
        }
        
        private void OnReserveTicketsExCompleted(object state) {
            if ((this.ReserveTicketsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReserveTicketsExCompleted(this, new ReserveTicketsExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReserveTicketsExAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.ReserveTicketsExAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, null);
        }
        
        public void ReserveTicketsExAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, object userState) {
            if ((this.onBeginReserveTicketsExDelegate == null)) {
                this.onBeginReserveTicketsExDelegate = new BeginOperationDelegate(this.OnBeginReserveTicketsEx);
            }
            if ((this.onEndReserveTicketsExDelegate == null)) {
                this.onEndReserveTicketsExDelegate = new EndOperationDelegate(this.OnEndReserveTicketsEx);
            }
            if ((this.onReserveTicketsExCompletedDelegate == null)) {
                this.onReserveTicketsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReserveTicketsExCompleted);
            }
            base.InvokeAsync(this.onBeginReserveTicketsExDelegate, new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests}, this.onEndReserveTicketsExDelegate, this.onReserveTicketsExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet SMTPListening(string sOrganizationName) {
            return base.Channel.SMTPListening(sOrganizationName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSMTPListening(string sOrganizationName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSMTPListening(sOrganizationName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSMTPListening(System.IAsyncResult result) {
            return base.Channel.EndSMTPListening(result);
        }
        
        private System.IAsyncResult OnBeginSMTPListening(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sOrganizationName = ((string)(inValues[0]));
            return this.BeginSMTPListening(sOrganizationName, callback, asyncState);
        }
        
        private object[] OnEndSMTPListening(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSMTPListening(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSMTPListeningCompleted(object state) {
            if ((this.SMTPListeningCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SMTPListeningCompleted(this, new SMTPListeningCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SMTPListeningAsync(string sOrganizationName) {
            this.SMTPListeningAsync(sOrganizationName, null);
        }
        
        public void SMTPListeningAsync(string sOrganizationName, object userState) {
            if ((this.onBeginSMTPListeningDelegate == null)) {
                this.onBeginSMTPListeningDelegate = new BeginOperationDelegate(this.OnBeginSMTPListening);
            }
            if ((this.onEndSMTPListeningDelegate == null)) {
                this.onEndSMTPListeningDelegate = new EndOperationDelegate(this.OnEndSMTPListening);
            }
            if ((this.onSMTPListeningCompletedDelegate == null)) {
                this.onSMTPListeningCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSMTPListeningCompleted);
            }
            base.InvokeAsync(this.onBeginSMTPListeningDelegate, new object[] {
                        sOrganizationName}, this.onEndSMTPListeningDelegate, this.onSMTPListeningCompletedDelegate, userState);
        }
        
        public void CalculateFees(string sSessionKey, int iOrderNo) {
            base.Channel.CalculateFees(sSessionKey, iOrderNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCalculateFees(string sSessionKey, int iOrderNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCalculateFees(sSessionKey, iOrderNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCalculateFees(System.IAsyncResult result) {
            base.Channel.EndCalculateFees(result);
        }
        
        private System.IAsyncResult OnBeginCalculateFees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iOrderNo = ((int)(inValues[1]));
            return this.BeginCalculateFees(sSessionKey, iOrderNo, callback, asyncState);
        }
        
        private object[] OnEndCalculateFees(System.IAsyncResult result) {
            this.EndCalculateFees(result);
            return null;
        }
        
        private void OnCalculateFeesCompleted(object state) {
            if ((this.CalculateFeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CalculateFeesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CalculateFeesAsync(string sSessionKey, int iOrderNo) {
            this.CalculateFeesAsync(sSessionKey, iOrderNo, null);
        }
        
        public void CalculateFeesAsync(string sSessionKey, int iOrderNo, object userState) {
            if ((this.onBeginCalculateFeesDelegate == null)) {
                this.onBeginCalculateFeesDelegate = new BeginOperationDelegate(this.OnBeginCalculateFees);
            }
            if ((this.onEndCalculateFeesDelegate == null)) {
                this.onEndCalculateFeesDelegate = new EndOperationDelegate(this.OnEndCalculateFees);
            }
            if ((this.onCalculateFeesCompletedDelegate == null)) {
                this.onCalculateFeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCalculateFeesCompleted);
            }
            base.InvokeAsync(this.onBeginCalculateFeesDelegate, new object[] {
                        sSessionKey,
                        iOrderNo}, this.onEndCalculateFeesDelegate, this.onCalculateFeesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformanceDetailWithDiscountingSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            return base.Channel.GetPerformanceDetailWithDiscountingSYOSDataSet(SessionKey, iPerf_no, iModeOfSale, sContentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailWithDiscountingSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailWithDiscountingSYOSDataSet(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformanceDetailWithDiscountingSYOSDataSet(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailWithDiscountingSYOSDataSet(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailWithDiscountingSYOSDataSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            short iModeOfSale = ((short)(inValues[2]));
            string sContentType = ((string)(inValues[3]));
            return this.BeginGetPerformanceDetailWithDiscountingSYOSDataSet(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailWithDiscountingSYOSDataSet(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformanceDetailWithDiscountingSYOSDataSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailWithDiscountingSYOSDataSetCompleted(object state) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSDataSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailWithDiscountingSYOSDataSetCompleted(this, new GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailWithDiscountingSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingSYOSDataSetAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        public void GetPerformanceDetailWithDiscountingSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.onBeginGetPerformanceDetailWithDiscountingSYOSDataSetDelegate == null)) {
                this.onBeginGetPerformanceDetailWithDiscountingSYOSDataSetDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailWithDiscountingSYOSDataSet);
            }
            if ((this.onEndGetPerformanceDetailWithDiscountingSYOSDataSetDelegate == null)) {
                this.onEndGetPerformanceDetailWithDiscountingSYOSDataSetDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailWithDiscountingSYOSDataSet);
            }
            if ((this.onGetPerformanceDetailWithDiscountingSYOSDataSetCompletedDelegate == null)) {
                this.onGetPerformanceDetailWithDiscountingSYOSDataSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingSYOSDataSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailWithDiscountingSYOSDataSetDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.onEndGetPerformanceDetailWithDiscountingSYOSDataSetDelegate, this.onGetPerformanceDetailWithDiscountingSYOSDataSetCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetGiftAidInfo(string SessionKey, int iGiftaid_type, char cActive_only) {
            return base.Channel.GetGiftAidInfo(SessionKey, iGiftaid_type, cActive_only);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGiftAidInfo(string SessionKey, int iGiftaid_type, char cActive_only, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGiftAidInfo(SessionKey, iGiftaid_type, cActive_only, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetGiftAidInfo(System.IAsyncResult result) {
            return base.Channel.EndGetGiftAidInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetGiftAidInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iGiftaid_type = ((int)(inValues[1]));
            char cActive_only = ((char)(inValues[2]));
            return this.BeginGetGiftAidInfo(SessionKey, iGiftaid_type, cActive_only, callback, asyncState);
        }
        
        private object[] OnEndGetGiftAidInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetGiftAidInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGiftAidInfoCompleted(object state) {
            if ((this.GetGiftAidInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGiftAidInfoCompleted(this, new GetGiftAidInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGiftAidInfoAsync(string SessionKey, int iGiftaid_type, char cActive_only) {
            this.GetGiftAidInfoAsync(SessionKey, iGiftaid_type, cActive_only, null);
        }
        
        public void GetGiftAidInfoAsync(string SessionKey, int iGiftaid_type, char cActive_only, object userState) {
            if ((this.onBeginGetGiftAidInfoDelegate == null)) {
                this.onBeginGetGiftAidInfoDelegate = new BeginOperationDelegate(this.OnBeginGetGiftAidInfo);
            }
            if ((this.onEndGetGiftAidInfoDelegate == null)) {
                this.onEndGetGiftAidInfoDelegate = new EndOperationDelegate(this.OnEndGetGiftAidInfo);
            }
            if ((this.onGetGiftAidInfoCompletedDelegate == null)) {
                this.onGetGiftAidInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGiftAidInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetGiftAidInfoDelegate, new object[] {
                        SessionKey,
                        iGiftaid_type,
                        cActive_only}, this.onEndGetGiftAidInfoDelegate, this.onGetGiftAidInfoCompletedDelegate, userState);
        }
        
        public void ValidateLimits(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req) {
            base.Channel.ValidateLimits(SessionKey, iPerf_no, iPkg_no, iPrice_type, iNo_seats_req);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateLimits(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateLimits(SessionKey, iPerf_no, iPkg_no, iPrice_type, iNo_seats_req, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndValidateLimits(System.IAsyncResult result) {
            base.Channel.EndValidateLimits(result);
        }
        
        private System.IAsyncResult OnBeginValidateLimits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            int iPkg_no = ((int)(inValues[2]));
            int iPrice_type = ((int)(inValues[3]));
            int iNo_seats_req = ((int)(inValues[4]));
            return this.BeginValidateLimits(SessionKey, iPerf_no, iPkg_no, iPrice_type, iNo_seats_req, callback, asyncState);
        }
        
        private object[] OnEndValidateLimits(System.IAsyncResult result) {
            this.EndValidateLimits(result);
            return null;
        }
        
        private void OnValidateLimitsCompleted(object state) {
            if ((this.ValidateLimitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateLimitsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateLimitsAsync(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req) {
            this.ValidateLimitsAsync(SessionKey, iPerf_no, iPkg_no, iPrice_type, iNo_seats_req, null);
        }
        
        public void ValidateLimitsAsync(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req, object userState) {
            if ((this.onBeginValidateLimitsDelegate == null)) {
                this.onBeginValidateLimitsDelegate = new BeginOperationDelegate(this.OnBeginValidateLimits);
            }
            if ((this.onEndValidateLimitsDelegate == null)) {
                this.onEndValidateLimitsDelegate = new EndOperationDelegate(this.OnEndValidateLimits);
            }
            if ((this.onValidateLimitsCompletedDelegate == null)) {
                this.onValidateLimitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateLimitsCompleted);
            }
            base.InvokeAsync(this.onBeginValidateLimitsDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iPkg_no,
                        iPrice_type,
                        iNo_seats_req}, this.onEndValidateLimitsDelegate, this.onValidateLimitsCompletedDelegate, userState);
        }
        
        public TessituraIntegration.TessituraWebAPI.PerformanceEx2 GetPerformanceDetailWithDiscountingSYOSEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            return base.Channel.GetPerformanceDetailWithDiscountingSYOSEx(SessionKey, iPerf_no, iModeOfSale, sContentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailWithDiscountingSYOSEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailWithDiscountingSYOSEx(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.PerformanceEx2 EndGetPerformanceDetailWithDiscountingSYOSEx(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailWithDiscountingSYOSEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailWithDiscountingSYOSEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            short iModeOfSale = ((short)(inValues[2]));
            string sContentType = ((string)(inValues[3]));
            return this.BeginGetPerformanceDetailWithDiscountingSYOSEx(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailWithDiscountingSYOSEx(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.PerformanceEx2 retVal = this.EndGetPerformanceDetailWithDiscountingSYOSEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailWithDiscountingSYOSExCompleted(object state) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailWithDiscountingSYOSExCompleted(this, new GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailWithDiscountingSYOSExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingSYOSExAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        public void GetPerformanceDetailWithDiscountingSYOSExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.onBeginGetPerformanceDetailWithDiscountingSYOSExDelegate == null)) {
                this.onBeginGetPerformanceDetailWithDiscountingSYOSExDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailWithDiscountingSYOSEx);
            }
            if ((this.onEndGetPerformanceDetailWithDiscountingSYOSExDelegate == null)) {
                this.onEndGetPerformanceDetailWithDiscountingSYOSExDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailWithDiscountingSYOSEx);
            }
            if ((this.onGetPerformanceDetailWithDiscountingSYOSExCompletedDelegate == null)) {
                this.onGetPerformanceDetailWithDiscountingSYOSExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingSYOSExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailWithDiscountingSYOSExDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.onEndGetPerformanceDetailWithDiscountingSYOSExDelegate, this.onGetPerformanceDetailWithDiscountingSYOSExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformancesEx4(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts) {
            return base.Channel.GetPerformancesEx4(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, bIncludeSeatCounts);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformancesEx4(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginGetPerformancesEx4(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, bIncludeSeatCounts, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformancesEx4(System.IAsyncResult result) {
            return base.Channel.EndGetPerformancesEx4(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformancesEx4(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            short iVenueID = ((short)(inValues[3]));
            short iModeOfSale = ((short)(inValues[4]));
            int iBusinessUnit = ((int)(inValues[5]));
            string sSortString = ((string)(inValues[6]));
            string sKeywords = ((string)(inValues[7]));
            string cKeywordAndOrStatement = ((string)(inValues[8]));
            string sArtistLastName = ((string)(inValues[9]));
            string sFullText = ((string)(inValues[10]));
            string sFullTextType = ((string)(inValues[11]));
            string sContentType = ((string)(inValues[12]));
            string sPerformanceIds = ((string)(inValues[13]));
            string sSeasonIds = ((string)(inValues[14]));
            bool bIncludeSeatCounts = ((bool)(inValues[15]));
            return this.BeginGetPerformancesEx4(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, bIncludeSeatCounts, callback, asyncState);
        }
        
        private object[] OnEndGetPerformancesEx4(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformancesEx4(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformancesEx4Completed(object state) {
            if ((this.GetPerformancesEx4Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformancesEx4Completed(this, new GetPerformancesEx4CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformancesEx4Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts) {
            this.GetPerformancesEx4Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, bIncludeSeatCounts, null);
        }
        
        public void GetPerformancesEx4Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts, 
                    object userState) {
            if ((this.onBeginGetPerformancesEx4Delegate == null)) {
                this.onBeginGetPerformancesEx4Delegate = new BeginOperationDelegate(this.OnBeginGetPerformancesEx4);
            }
            if ((this.onEndGetPerformancesEx4Delegate == null)) {
                this.onEndGetPerformancesEx4Delegate = new EndOperationDelegate(this.OnEndGetPerformancesEx4);
            }
            if ((this.onGetPerformancesEx4CompletedDelegate == null)) {
                this.onGetPerformancesEx4CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformancesEx4Completed);
            }
            base.InvokeAsync(this.onBeginGetPerformancesEx4Delegate, new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPerformanceIds,
                        sSeasonIds,
                        bIncludeSeatCounts}, this.onEndGetPerformancesEx4Delegate, this.onGetPerformancesEx4CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionDetailEx3(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts) {
            return base.Channel.GetProductionDetailEx3(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, bIncludeSeatCounts);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionDetailEx3(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductionDetailEx3(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, bIncludeSeatCounts, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionDetailEx3(System.IAsyncResult result) {
            return base.Channel.EndGetProductionDetailEx3(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionDetailEx3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            int iProd_Season_no = ((int)(inValues[2]));
            short iModeOfSale = ((short)(inValues[3]));
            int iBusinessUnit = ((int)(inValues[4]));
            string sContentTypes = ((string)(inValues[5]));
            string sPerformanceContentTypes = ((string)(inValues[6]));
            bool bIncludeSeatCounts = ((bool)(inValues[7]));
            return this.BeginGetProductionDetailEx3(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, bIncludeSeatCounts, callback, asyncState);
        }
        
        private object[] OnEndGetProductionDetailEx3(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionDetailEx3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionDetailEx3Completed(object state) {
            if ((this.GetProductionDetailEx3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionDetailEx3Completed(this, new GetProductionDetailEx3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionDetailEx3Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts) {
            this.GetProductionDetailEx3Async(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, bIncludeSeatCounts, null);
        }
        
        public void GetProductionDetailEx3Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts, object userState) {
            if ((this.onBeginGetProductionDetailEx3Delegate == null)) {
                this.onBeginGetProductionDetailEx3Delegate = new BeginOperationDelegate(this.OnBeginGetProductionDetailEx3);
            }
            if ((this.onEndGetProductionDetailEx3Delegate == null)) {
                this.onEndGetProductionDetailEx3Delegate = new EndOperationDelegate(this.OnEndGetProductionDetailEx3);
            }
            if ((this.onGetProductionDetailEx3CompletedDelegate == null)) {
                this.onGetProductionDetailEx3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailEx3Completed);
            }
            base.InvokeAsync(this.onBeginGetProductionDetailEx3Delegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit,
                        sContentTypes,
                        sPerformanceContentTypes,
                        bIncludeSeatCounts}, this.onEndGetProductionDetailEx3Delegate, this.onGetProductionDetailEx3CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetConstituentsEx(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName) {
            return base.Channel.GetConstituentsEx(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, sLastName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConstituentsEx(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConstituentsEx(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, sLastName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetConstituentsEx(System.IAsyncResult result) {
            return base.Channel.EndGetConstituentsEx(result);
        }
        
        private System.IAsyncResult OnBeginGetConstituentsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sCCNumber = ((string)(inValues[1]));
            string sPhoneNumber = ((string)(inValues[2]));
            int iCustomerServiceNumber = ((int)(inValues[3]));
            int iOrderNumber = ((int)(inValues[4]));
            string sEmailAddress = ((string)(inValues[5]));
            string sLastName = ((string)(inValues[6]));
            return this.BeginGetConstituentsEx(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, sLastName, callback, asyncState);
        }
        
        private object[] OnEndGetConstituentsEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetConstituentsEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConstituentsExCompleted(object state) {
            if ((this.GetConstituentsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConstituentsExCompleted(this, new GetConstituentsExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConstituentsExAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName) {
            this.GetConstituentsExAsync(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, sLastName, null);
        }
        
        public void GetConstituentsExAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName, object userState) {
            if ((this.onBeginGetConstituentsExDelegate == null)) {
                this.onBeginGetConstituentsExDelegate = new BeginOperationDelegate(this.OnBeginGetConstituentsEx);
            }
            if ((this.onEndGetConstituentsExDelegate == null)) {
                this.onEndGetConstituentsExDelegate = new EndOperationDelegate(this.OnEndGetConstituentsEx);
            }
            if ((this.onGetConstituentsExCompletedDelegate == null)) {
                this.onGetConstituentsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConstituentsExCompleted);
            }
            base.InvokeAsync(this.onBeginGetConstituentsExDelegate, new object[] {
                        sWebSessionId,
                        sCCNumber,
                        sPhoneNumber,
                        iCustomerServiceNumber,
                        iOrderNumber,
                        sEmailAddress,
                        sLastName}, this.onEndGetConstituentsExDelegate, this.onGetConstituentsExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet PrintTickets(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader) {
            return base.Channel.PrintTickets(sSessionKey, sOrderId, sLineItems, sSubLineItems, sTicketDesignNo, iBarWidth, iBarHeight, bNewTicketNumberForReprints, bIncludeHeader);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintTickets(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintTickets(sSessionKey, sOrderId, sLineItems, sSubLineItems, sTicketDesignNo, iBarWidth, iBarHeight, bNewTicketNumberForReprints, bIncludeHeader, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndPrintTickets(System.IAsyncResult result) {
            return base.Channel.EndPrintTickets(result);
        }
        
        private System.IAsyncResult OnBeginPrintTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sOrderId = ((string)(inValues[1]));
            string sLineItems = ((string)(inValues[2]));
            string sSubLineItems = ((string)(inValues[3]));
            string sTicketDesignNo = ((string)(inValues[4]));
            int iBarWidth = ((int)(inValues[5]));
            int iBarHeight = ((int)(inValues[6]));
            bool bNewTicketNumberForReprints = ((bool)(inValues[7]));
            bool bIncludeHeader = ((bool)(inValues[8]));
            return this.BeginPrintTickets(sSessionKey, sOrderId, sLineItems, sSubLineItems, sTicketDesignNo, iBarWidth, iBarHeight, bNewTicketNumberForReprints, bIncludeHeader, callback, asyncState);
        }
        
        private object[] OnEndPrintTickets(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndPrintTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrintTicketsCompleted(object state) {
            if ((this.PrintTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintTicketsCompleted(this, new PrintTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintTicketsAsync(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader) {
            this.PrintTicketsAsync(sSessionKey, sOrderId, sLineItems, sSubLineItems, sTicketDesignNo, iBarWidth, iBarHeight, bNewTicketNumberForReprints, bIncludeHeader, null);
        }
        
        public void PrintTicketsAsync(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader, object userState) {
            if ((this.onBeginPrintTicketsDelegate == null)) {
                this.onBeginPrintTicketsDelegate = new BeginOperationDelegate(this.OnBeginPrintTickets);
            }
            if ((this.onEndPrintTicketsDelegate == null)) {
                this.onEndPrintTicketsDelegate = new EndOperationDelegate(this.OnEndPrintTickets);
            }
            if ((this.onPrintTicketsCompletedDelegate == null)) {
                this.onPrintTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginPrintTicketsDelegate, new object[] {
                        sSessionKey,
                        sOrderId,
                        sLineItems,
                        sSubLineItems,
                        sTicketDesignNo,
                        iBarWidth,
                        iBarHeight,
                        bNewTicketNumberForReprints,
                        bIncludeHeader}, this.onEndPrintTicketsDelegate, this.onPrintTicketsCompletedDelegate, userState);
        }
        
        public void DestroyCache() {
            base.Channel.DestroyCache();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDestroyCache(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDestroyCache(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDestroyCache(System.IAsyncResult result) {
            base.Channel.EndDestroyCache(result);
        }
        
        private System.IAsyncResult OnBeginDestroyCache(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDestroyCache(callback, asyncState);
        }
        
        private object[] OnEndDestroyCache(System.IAsyncResult result) {
            this.EndDestroyCache(result);
            return null;
        }
        
        private void OnDestroyCacheCompleted(object state) {
            if ((this.DestroyCacheCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DestroyCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DestroyCacheAsync() {
            this.DestroyCacheAsync(null);
        }
        
        public void DestroyCacheAsync(object userState) {
            if ((this.onBeginDestroyCacheDelegate == null)) {
                this.onBeginDestroyCacheDelegate = new BeginOperationDelegate(this.OnBeginDestroyCache);
            }
            if ((this.onEndDestroyCacheDelegate == null)) {
                this.onEndDestroyCacheDelegate = new EndOperationDelegate(this.OnEndDestroyCache);
            }
            if ((this.onDestroyCacheCompletedDelegate == null)) {
                this.onDestroyCacheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDestroyCacheCompleted);
            }
            base.InvokeAsync(this.onBeginDestroyCacheDelegate, null, this.onEndDestroyCacheDelegate, this.onDestroyCacheCompletedDelegate, userState);
        }
        
        public bool SendTicketEmail(string sSessionKey, int iTemplateNo, string sRecipientEmail, string sOrderId, string sLineItems, string sSubLineItems, bool bNewTicketNumberForReprints, string sAdditionalValues) {
            return base.Channel.SendTicketEmail(sSessionKey, iTemplateNo, sRecipientEmail, sOrderId, sLineItems, sSubLineItems, bNewTicketNumberForReprints, sAdditionalValues);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendTicketEmail(string sSessionKey, int iTemplateNo, string sRecipientEmail, string sOrderId, string sLineItems, string sSubLineItems, bool bNewTicketNumberForReprints, string sAdditionalValues, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendTicketEmail(sSessionKey, iTemplateNo, sRecipientEmail, sOrderId, sLineItems, sSubLineItems, bNewTicketNumberForReprints, sAdditionalValues, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendTicketEmail(System.IAsyncResult result) {
            return base.Channel.EndSendTicketEmail(result);
        }
        
        private System.IAsyncResult OnBeginSendTicketEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iTemplateNo = ((int)(inValues[1]));
            string sRecipientEmail = ((string)(inValues[2]));
            string sOrderId = ((string)(inValues[3]));
            string sLineItems = ((string)(inValues[4]));
            string sSubLineItems = ((string)(inValues[5]));
            bool bNewTicketNumberForReprints = ((bool)(inValues[6]));
            string sAdditionalValues = ((string)(inValues[7]));
            return this.BeginSendTicketEmail(sSessionKey, iTemplateNo, sRecipientEmail, sOrderId, sLineItems, sSubLineItems, bNewTicketNumberForReprints, sAdditionalValues, callback, asyncState);
        }
        
        private object[] OnEndSendTicketEmail(System.IAsyncResult result) {
            bool retVal = this.EndSendTicketEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendTicketEmailCompleted(object state) {
            if ((this.SendTicketEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendTicketEmailCompleted(this, new SendTicketEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendTicketEmailAsync(string sSessionKey, int iTemplateNo, string sRecipientEmail, string sOrderId, string sLineItems, string sSubLineItems, bool bNewTicketNumberForReprints, string sAdditionalValues) {
            this.SendTicketEmailAsync(sSessionKey, iTemplateNo, sRecipientEmail, sOrderId, sLineItems, sSubLineItems, bNewTicketNumberForReprints, sAdditionalValues, null);
        }
        
        public void SendTicketEmailAsync(string sSessionKey, int iTemplateNo, string sRecipientEmail, string sOrderId, string sLineItems, string sSubLineItems, bool bNewTicketNumberForReprints, string sAdditionalValues, object userState) {
            if ((this.onBeginSendTicketEmailDelegate == null)) {
                this.onBeginSendTicketEmailDelegate = new BeginOperationDelegate(this.OnBeginSendTicketEmail);
            }
            if ((this.onEndSendTicketEmailDelegate == null)) {
                this.onEndSendTicketEmailDelegate = new EndOperationDelegate(this.OnEndSendTicketEmail);
            }
            if ((this.onSendTicketEmailCompletedDelegate == null)) {
                this.onSendTicketEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTicketEmailCompleted);
            }
            base.InvokeAsync(this.onBeginSendTicketEmailDelegate, new object[] {
                        sSessionKey,
                        iTemplateNo,
                        sRecipientEmail,
                        sOrderId,
                        sLineItems,
                        sSubLineItems,
                        bNewTicketNumberForReprints,
                        sAdditionalValues}, this.onEndSendTicketEmailDelegate, this.onSendTicketEmailCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ShiftContext(string sSessionKey, int contextCustomerNo) {
            return base.Channel.ShiftContext(sSessionKey, contextCustomerNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginShiftContext(string sSessionKey, int contextCustomerNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShiftContext(sSessionKey, contextCustomerNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndShiftContext(System.IAsyncResult result) {
            return base.Channel.EndShiftContext(result);
        }
        
        private System.IAsyncResult OnBeginShiftContext(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int contextCustomerNo = ((int)(inValues[1]));
            return this.BeginShiftContext(sSessionKey, contextCustomerNo, callback, asyncState);
        }
        
        private object[] OnEndShiftContext(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndShiftContext(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShiftContextCompleted(object state) {
            if ((this.ShiftContextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShiftContextCompleted(this, new ShiftContextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShiftContextAsync(string sSessionKey, int contextCustomerNo) {
            this.ShiftContextAsync(sSessionKey, contextCustomerNo, null);
        }
        
        public void ShiftContextAsync(string sSessionKey, int contextCustomerNo, object userState) {
            if ((this.onBeginShiftContextDelegate == null)) {
                this.onBeginShiftContextDelegate = new BeginOperationDelegate(this.OnBeginShiftContext);
            }
            if ((this.onEndShiftContextDelegate == null)) {
                this.onEndShiftContextDelegate = new EndOperationDelegate(this.OnEndShiftContext);
            }
            if ((this.onShiftContextCompletedDelegate == null)) {
                this.onShiftContextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShiftContextCompleted);
            }
            base.InvokeAsync(this.onBeginShiftContextDelegate, new object[] {
                        sSessionKey,
                        contextCustomerNo}, this.onEndShiftContextDelegate, this.onShiftContextCompletedDelegate, userState);
        }
        
        public bool CreateLogin(string sSessionKey, int iCustomerNumber, string sUID, int iLoginType, string sEmail, string sPassword) {
            return base.Channel.CreateLogin(sSessionKey, iCustomerNumber, sUID, iLoginType, sEmail, sPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateLogin(string sSessionKey, int iCustomerNumber, string sUID, int iLoginType, string sEmail, string sPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateLogin(sSessionKey, iCustomerNumber, sUID, iLoginType, sEmail, sPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCreateLogin(System.IAsyncResult result) {
            return base.Channel.EndCreateLogin(result);
        }
        
        private System.IAsyncResult OnBeginCreateLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iCustomerNumber = ((int)(inValues[1]));
            string sUID = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            string sEmail = ((string)(inValues[4]));
            string sPassword = ((string)(inValues[5]));
            return this.BeginCreateLogin(sSessionKey, iCustomerNumber, sUID, iLoginType, sEmail, sPassword, callback, asyncState);
        }
        
        private object[] OnEndCreateLogin(System.IAsyncResult result) {
            bool retVal = this.EndCreateLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateLoginCompleted(object state) {
            if ((this.CreateLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateLoginCompleted(this, new CreateLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateLoginAsync(string sSessionKey, int iCustomerNumber, string sUID, int iLoginType, string sEmail, string sPassword) {
            this.CreateLoginAsync(sSessionKey, iCustomerNumber, sUID, iLoginType, sEmail, sPassword, null);
        }
        
        public void CreateLoginAsync(string sSessionKey, int iCustomerNumber, string sUID, int iLoginType, string sEmail, string sPassword, object userState) {
            if ((this.onBeginCreateLoginDelegate == null)) {
                this.onBeginCreateLoginDelegate = new BeginOperationDelegate(this.OnBeginCreateLogin);
            }
            if ((this.onEndCreateLoginDelegate == null)) {
                this.onEndCreateLoginDelegate = new EndOperationDelegate(this.OnEndCreateLogin);
            }
            if ((this.onCreateLoginCompletedDelegate == null)) {
                this.onCreateLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateLoginCompleted);
            }
            base.InvokeAsync(this.onBeginCreateLoginDelegate, new object[] {
                        sSessionKey,
                        iCustomerNumber,
                        sUID,
                        iLoginType,
                        sEmail,
                        sPassword}, this.onEndCreateLoginDelegate, this.onCreateLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx4Response TessituraIntegration.TessituraWebAPI.TessituraSoap.CheckoutEx4(TessituraIntegration.TessituraWebAPI.CheckoutEx4Request request) {
            return base.Channel.CheckoutEx4(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutEx4(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    int iAccountId, 
                    string sZipCode, 
                    string sAddress, 
                    string sPaymentReference) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx4Request inValue = new TessituraIntegration.TessituraWebAPI.CheckoutEx4Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            inValue.bAuthorize = bAuthorize;
            inValue.sAuthorizationCode = sAuthorizationCode;
            inValue.s3DSecureValues = s3DSecureValues;
            inValue.iAccountId = iAccountId;
            inValue.sZipCode = sZipCode;
            inValue.sAddress = sAddress;
            inValue.sPaymentReference = sPaymentReference;
            TessituraIntegration.TessituraWebAPI.CheckoutEx4Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).CheckoutEx4(inValue);
            return retVal.CheckoutStatusHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginCheckoutEx4(TessituraIntegration.TessituraWebAPI.CheckoutEx4Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckoutEx4(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckoutEx4(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    int iAccountId, 
                    string sZipCode, 
                    string sAddress, 
                    string sPaymentReference, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx4Request inValue = new TessituraIntegration.TessituraWebAPI.CheckoutEx4Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            inValue.bAuthorize = bAuthorize;
            inValue.sAuthorizationCode = sAuthorizationCode;
            inValue.s3DSecureValues = s3DSecureValues;
            inValue.iAccountId = iAccountId;
            inValue.sZipCode = sZipCode;
            inValue.sAddress = sAddress;
            inValue.sPaymentReference = sPaymentReference;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginCheckoutEx4(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx4Response TessituraIntegration.TessituraWebAPI.TessituraSoap.EndCheckoutEx4(System.IAsyncResult result) {
            return base.Channel.EndCheckoutEx4(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader EndCheckoutEx4(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx4Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndCheckoutEx4(result);
            return retVal.CheckoutStatusHeader;
        }
        
        private System.IAsyncResult OnBeginCheckoutEx4(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sCCOwner = ((string)(inValues[1]));
            string sCCNumber = ((string)(inValues[2]));
            int iCCType = ((int)(inValues[3]));
            int iCCMonth = ((int)(inValues[4]));
            int iCCYear = ((int)(inValues[5]));
            decimal dAmount = ((decimal)(inValues[6]));
            bool bAllowUnderPayment = ((bool)(inValues[7]));
            string sCardAuthenticationCode = ((string)(inValues[8]));
            int iCCIssueNumber = ((int)(inValues[9]));
            int iCCStartMonth = ((int)(inValues[10]));
            int iCCStartYear = ((int)(inValues[11]));
            bool bAuthorize = ((bool)(inValues[12]));
            string sAuthorizationCode = ((string)(inValues[13]));
            string s3DSecureValues = ((string)(inValues[14]));
            int iAccountId = ((int)(inValues[15]));
            string sZipCode = ((string)(inValues[16]));
            string sAddress = ((string)(inValues[17]));
            string sPaymentReference = ((string)(inValues[18]));
            return this.BeginCheckoutEx4(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, s3DSecureValues, iAccountId, sZipCode, sAddress, sPaymentReference, callback, asyncState);
        }
        
        private object[] OnEndCheckoutEx4(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader retVal = this.EndCheckoutEx4(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckoutEx4Completed(object state) {
            if ((this.CheckoutEx4Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckoutEx4Completed(this, new CheckoutEx4CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckoutEx4Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    int iAccountId, 
                    string sZipCode, 
                    string sAddress, 
                    string sPaymentReference) {
            this.CheckoutEx4Async(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, s3DSecureValues, iAccountId, sZipCode, sAddress, sPaymentReference, null);
        }
        
        public void CheckoutEx4Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    int iAccountId, 
                    string sZipCode, 
                    string sAddress, 
                    string sPaymentReference, 
                    object userState) {
            if ((this.onBeginCheckoutEx4Delegate == null)) {
                this.onBeginCheckoutEx4Delegate = new BeginOperationDelegate(this.OnBeginCheckoutEx4);
            }
            if ((this.onEndCheckoutEx4Delegate == null)) {
                this.onEndCheckoutEx4Delegate = new EndOperationDelegate(this.OnEndCheckoutEx4);
            }
            if ((this.onCheckoutEx4CompletedDelegate == null)) {
                this.onCheckoutEx4CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckoutEx4Completed);
            }
            base.InvokeAsync(this.onBeginCheckoutEx4Delegate, new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        bAuthorize,
                        sAuthorizationCode,
                        s3DSecureValues,
                        iAccountId,
                        sZipCode,
                        sAddress,
                        sPaymentReference}, this.onEndCheckoutEx4Delegate, this.onCheckoutEx4CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginEx3Response TessituraIntegration.TessituraWebAPI.TessituraSoap.LoginEx3(TessituraIntegration.TessituraWebAPI.LoginEx3Request request) {
            return base.Channel.LoginEx3(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginEx3(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, bool bAlreadyAuthenticated, out bool LoginEx3Result) {
            TessituraIntegration.TessituraWebAPI.LoginEx3Request inValue = new TessituraIntegration.TessituraWebAPI.LoginEx3Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            inValue.sEmail = sEmail;
            inValue.sPhone = sPhone;
            inValue.sPostalCode = sPostalCode;
            inValue.iCustomerNo = iCustomerNo;
            inValue.iN1N2 = iN1N2;
            inValue.sForgotLoginToken = sForgotLoginToken;
            inValue.bAlreadyAuthenticated = bAlreadyAuthenticated;
            TessituraIntegration.TessituraWebAPI.LoginEx3Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).LoginEx3(inValue);
            LoginEx3Result = retVal.LoginEx3Result;
            return retVal.LoginAttemptHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginLoginEx3(TessituraIntegration.TessituraWebAPI.LoginEx3Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginEx3(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginEx3(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, bool bAlreadyAuthenticated, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.LoginEx3Request inValue = new TessituraIntegration.TessituraWebAPI.LoginEx3Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            inValue.sEmail = sEmail;
            inValue.sPhone = sPhone;
            inValue.sPostalCode = sPostalCode;
            inValue.iCustomerNo = iCustomerNo;
            inValue.iN1N2 = iN1N2;
            inValue.sForgotLoginToken = sForgotLoginToken;
            inValue.bAlreadyAuthenticated = bAlreadyAuthenticated;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginLoginEx3(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginEx3Response TessituraIntegration.TessituraWebAPI.TessituraSoap.EndLoginEx3(System.IAsyncResult result) {
            return base.Channel.EndLoginEx3(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader EndLoginEx3(System.IAsyncResult result, out bool LoginEx3Result) {
            TessituraIntegration.TessituraWebAPI.LoginEx3Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndLoginEx3(result);
            LoginEx3Result = retVal.LoginEx3Result;
            return retVal.LoginAttemptHeader;
        }
        
        private System.IAsyncResult OnBeginLoginEx3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            int iPromotionCode = ((int)(inValues[4]));
            string sEmail = ((string)(inValues[5]));
            string sPhone = ((string)(inValues[6]));
            string sPostalCode = ((string)(inValues[7]));
            int iCustomerNo = ((int)(inValues[8]));
            int iN1N2 = ((int)(inValues[9]));
            string sForgotLoginToken = ((string)(inValues[10]));
            bool bAlreadyAuthenticated = ((bool)(inValues[11]));
            return this.BeginLoginEx3(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, sForgotLoginToken, bAlreadyAuthenticated, callback, asyncState);
        }
        
        private object[] OnEndLoginEx3(System.IAsyncResult result) {
            bool LoginEx3Result = this.GetDefaultValueForInitialization<bool>();
            TessituraIntegration.TessituraWebAPI.LoginAttemptHeader retVal = this.EndLoginEx3(result, out LoginEx3Result);
            return new object[] {
                    LoginEx3Result,
                    retVal};
        }
        
        private void OnLoginEx3Completed(object state) {
            if ((this.LoginEx3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginEx3Completed(this, new LoginEx3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginEx3Async(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, bool bAlreadyAuthenticated) {
            this.LoginEx3Async(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, sForgotLoginToken, bAlreadyAuthenticated, null);
        }
        
        public void LoginEx3Async(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, bool bAlreadyAuthenticated, object userState) {
            if ((this.onBeginLoginEx3Delegate == null)) {
                this.onBeginLoginEx3Delegate = new BeginOperationDelegate(this.OnBeginLoginEx3);
            }
            if ((this.onEndLoginEx3Delegate == null)) {
                this.onEndLoginEx3Delegate = new EndOperationDelegate(this.OnEndLoginEx3);
            }
            if ((this.onLoginEx3CompletedDelegate == null)) {
                this.onLoginEx3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginEx3Completed);
            }
            base.InvokeAsync(this.onBeginLoginEx3Delegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode,
                        sEmail,
                        sPhone,
                        sPostalCode,
                        iCustomerNo,
                        iN1N2,
                        sForgotLoginToken,
                        bAlreadyAuthenticated}, this.onEndLoginEx3Delegate, this.onLoginEx3CompletedDelegate, userState);
        }
        
        public bool MaintainOrderInitiatorRecipient(string sSessionKey, int iInitiatorNumber, int iRecipientNumber, int iLineItemID, string sSubLineItemIDs) {
            return base.Channel.MaintainOrderInitiatorRecipient(sSessionKey, iInitiatorNumber, iRecipientNumber, iLineItemID, sSubLineItemIDs);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMaintainOrderInitiatorRecipient(string sSessionKey, int iInitiatorNumber, int iRecipientNumber, int iLineItemID, string sSubLineItemIDs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMaintainOrderInitiatorRecipient(sSessionKey, iInitiatorNumber, iRecipientNumber, iLineItemID, sSubLineItemIDs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndMaintainOrderInitiatorRecipient(System.IAsyncResult result) {
            return base.Channel.EndMaintainOrderInitiatorRecipient(result);
        }
        
        private System.IAsyncResult OnBeginMaintainOrderInitiatorRecipient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iInitiatorNumber = ((int)(inValues[1]));
            int iRecipientNumber = ((int)(inValues[2]));
            int iLineItemID = ((int)(inValues[3]));
            string sSubLineItemIDs = ((string)(inValues[4]));
            return this.BeginMaintainOrderInitiatorRecipient(sSessionKey, iInitiatorNumber, iRecipientNumber, iLineItemID, sSubLineItemIDs, callback, asyncState);
        }
        
        private object[] OnEndMaintainOrderInitiatorRecipient(System.IAsyncResult result) {
            bool retVal = this.EndMaintainOrderInitiatorRecipient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMaintainOrderInitiatorRecipientCompleted(object state) {
            if ((this.MaintainOrderInitiatorRecipientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaintainOrderInitiatorRecipientCompleted(this, new MaintainOrderInitiatorRecipientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MaintainOrderInitiatorRecipientAsync(string sSessionKey, int iInitiatorNumber, int iRecipientNumber, int iLineItemID, string sSubLineItemIDs) {
            this.MaintainOrderInitiatorRecipientAsync(sSessionKey, iInitiatorNumber, iRecipientNumber, iLineItemID, sSubLineItemIDs, null);
        }
        
        public void MaintainOrderInitiatorRecipientAsync(string sSessionKey, int iInitiatorNumber, int iRecipientNumber, int iLineItemID, string sSubLineItemIDs, object userState) {
            if ((this.onBeginMaintainOrderInitiatorRecipientDelegate == null)) {
                this.onBeginMaintainOrderInitiatorRecipientDelegate = new BeginOperationDelegate(this.OnBeginMaintainOrderInitiatorRecipient);
            }
            if ((this.onEndMaintainOrderInitiatorRecipientDelegate == null)) {
                this.onEndMaintainOrderInitiatorRecipientDelegate = new EndOperationDelegate(this.OnEndMaintainOrderInitiatorRecipient);
            }
            if ((this.onMaintainOrderInitiatorRecipientCompletedDelegate == null)) {
                this.onMaintainOrderInitiatorRecipientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaintainOrderInitiatorRecipientCompleted);
            }
            base.InvokeAsync(this.onBeginMaintainOrderInitiatorRecipientDelegate, new object[] {
                        sSessionKey,
                        iInitiatorNumber,
                        iRecipientNumber,
                        iLineItemID,
                        sSubLineItemIDs}, this.onEndMaintainOrderInitiatorRecipientDelegate, this.onMaintainOrderInitiatorRecipientCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerSeatFees(int iPerfNo, int iPackageNo, int iMOS, int iPriceType, char cDetailLevel, string sPriceDate) {
            return base.Channel.GetPerSeatFees(iPerfNo, iPackageNo, iMOS, iPriceType, cDetailLevel, sPriceDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerSeatFees(int iPerfNo, int iPackageNo, int iMOS, int iPriceType, char cDetailLevel, string sPriceDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerSeatFees(iPerfNo, iPackageNo, iMOS, iPriceType, cDetailLevel, sPriceDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerSeatFees(System.IAsyncResult result) {
            return base.Channel.EndGetPerSeatFees(result);
        }
        
        private System.IAsyncResult OnBeginGetPerSeatFees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iPerfNo = ((int)(inValues[0]));
            int iPackageNo = ((int)(inValues[1]));
            int iMOS = ((int)(inValues[2]));
            int iPriceType = ((int)(inValues[3]));
            char cDetailLevel = ((char)(inValues[4]));
            string sPriceDate = ((string)(inValues[5]));
            return this.BeginGetPerSeatFees(iPerfNo, iPackageNo, iMOS, iPriceType, cDetailLevel, sPriceDate, callback, asyncState);
        }
        
        private object[] OnEndGetPerSeatFees(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerSeatFees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerSeatFeesCompleted(object state) {
            if ((this.GetPerSeatFeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerSeatFeesCompleted(this, new GetPerSeatFeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerSeatFeesAsync(int iPerfNo, int iPackageNo, int iMOS, int iPriceType, char cDetailLevel, string sPriceDate) {
            this.GetPerSeatFeesAsync(iPerfNo, iPackageNo, iMOS, iPriceType, cDetailLevel, sPriceDate, null);
        }
        
        public void GetPerSeatFeesAsync(int iPerfNo, int iPackageNo, int iMOS, int iPriceType, char cDetailLevel, string sPriceDate, object userState) {
            if ((this.onBeginGetPerSeatFeesDelegate == null)) {
                this.onBeginGetPerSeatFeesDelegate = new BeginOperationDelegate(this.OnBeginGetPerSeatFees);
            }
            if ((this.onEndGetPerSeatFeesDelegate == null)) {
                this.onEndGetPerSeatFeesDelegate = new EndOperationDelegate(this.OnEndGetPerSeatFees);
            }
            if ((this.onGetPerSeatFeesCompletedDelegate == null)) {
                this.onGetPerSeatFeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerSeatFeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerSeatFeesDelegate, new object[] {
                        iPerfNo,
                        iPackageNo,
                        iMOS,
                        iPriceType,
                        cDetailLevel,
                        sPriceDate}, this.onEndGetPerSeatFeesDelegate, this.onGetPerSeatFeesCompletedDelegate, userState);
        }
        
        public TessituraIntegration.TessituraWebAPI.BatchResponse[] Batch(TessituraIntegration.TessituraWebAPI.BatchRequest[] requests) {
            return base.Channel.Batch(requests);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBatch(TessituraIntegration.TessituraWebAPI.BatchRequest[] requests, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatch(requests, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.BatchResponse[] EndBatch(System.IAsyncResult result) {
            return base.Channel.EndBatch(result);
        }
        
        private System.IAsyncResult OnBeginBatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.BatchRequest[] requests = ((TessituraIntegration.TessituraWebAPI.BatchRequest[])(inValues[0]));
            return this.BeginBatch(requests, callback, asyncState);
        }
        
        private object[] OnEndBatch(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.BatchResponse[] retVal = this.EndBatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchCompleted(object state) {
            if ((this.BatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchCompleted(this, new BatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchAsync(TessituraIntegration.TessituraWebAPI.BatchRequest[] requests) {
            this.BatchAsync(requests, null);
        }
        
        public void BatchAsync(TessituraIntegration.TessituraWebAPI.BatchRequest[] requests, object userState) {
            if ((this.onBeginBatchDelegate == null)) {
                this.onBeginBatchDelegate = new BeginOperationDelegate(this.OnBeginBatch);
            }
            if ((this.onEndBatchDelegate == null)) {
                this.onEndBatchDelegate = new EndOperationDelegate(this.OnEndBatch);
            }
            if ((this.onBatchCompletedDelegate == null)) {
                this.onBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchCompleted);
            }
            base.InvokeAsync(this.onBeginBatchDelegate, new object[] {
                        requests}, this.onEndBatchDelegate, this.onBatchCompletedDelegate, userState);
        }
        
        public void UpdateGiftAidInfo(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo) {
            base.Channel.UpdateGiftAidInfo(SessionKey, ContributionDate, DeclarationType, OptIn, RefNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateGiftAidInfo(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGiftAidInfo(SessionKey, ContributionDate, DeclarationType, OptIn, RefNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateGiftAidInfo(System.IAsyncResult result) {
            base.Channel.EndUpdateGiftAidInfo(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGiftAidInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string ContributionDate = ((string)(inValues[1]));
            string DeclarationType = ((string)(inValues[2]));
            bool OptIn = ((bool)(inValues[3]));
            int RefNo = ((int)(inValues[4]));
            return this.BeginUpdateGiftAidInfo(SessionKey, ContributionDate, DeclarationType, OptIn, RefNo, callback, asyncState);
        }
        
        private object[] OnEndUpdateGiftAidInfo(System.IAsyncResult result) {
            this.EndUpdateGiftAidInfo(result);
            return null;
        }
        
        private void OnUpdateGiftAidInfoCompleted(object state) {
            if ((this.UpdateGiftAidInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGiftAidInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGiftAidInfoAsync(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo) {
            this.UpdateGiftAidInfoAsync(SessionKey, ContributionDate, DeclarationType, OptIn, RefNo, null);
        }
        
        public void UpdateGiftAidInfoAsync(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo, object userState) {
            if ((this.onBeginUpdateGiftAidInfoDelegate == null)) {
                this.onBeginUpdateGiftAidInfoDelegate = new BeginOperationDelegate(this.OnBeginUpdateGiftAidInfo);
            }
            if ((this.onEndUpdateGiftAidInfoDelegate == null)) {
                this.onEndUpdateGiftAidInfoDelegate = new EndOperationDelegate(this.OnEndUpdateGiftAidInfo);
            }
            if ((this.onUpdateGiftAidInfoCompletedDelegate == null)) {
                this.onUpdateGiftAidInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGiftAidInfoCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGiftAidInfoDelegate, new object[] {
                        SessionKey,
                        ContributionDate,
                        DeclarationType,
                        OptIn,
                        RefNo}, this.onEndUpdateGiftAidInfoDelegate, this.onUpdateGiftAidInfoCompletedDelegate, userState);
        }
        
        public void TransferCart(string SessionKey) {
            base.Channel.TransferCart(SessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTransferCart(string SessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTransferCart(SessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTransferCart(System.IAsyncResult result) {
            base.Channel.EndTransferCart(result);
        }
        
        private System.IAsyncResult OnBeginTransferCart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            return this.BeginTransferCart(SessionKey, callback, asyncState);
        }
        
        private object[] OnEndTransferCart(System.IAsyncResult result) {
            this.EndTransferCart(result);
            return null;
        }
        
        private void OnTransferCartCompleted(object state) {
            if ((this.TransferCartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TransferCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TransferCartAsync(string SessionKey) {
            this.TransferCartAsync(SessionKey, null);
        }
        
        public void TransferCartAsync(string SessionKey, object userState) {
            if ((this.onBeginTransferCartDelegate == null)) {
                this.onBeginTransferCartDelegate = new BeginOperationDelegate(this.OnBeginTransferCart);
            }
            if ((this.onEndTransferCartDelegate == null)) {
                this.onEndTransferCartDelegate = new EndOperationDelegate(this.OnEndTransferCart);
            }
            if ((this.onTransferCartCompletedDelegate == null)) {
                this.onTransferCartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTransferCartCompleted);
            }
            base.InvokeAsync(this.onBeginTransferCartDelegate, new object[] {
                        SessionKey}, this.onEndTransferCartDelegate, this.onTransferCartCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddSubPackageItem(TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest request) {
            return base.Channel.AddSubPackageItem(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader AddSubPackageItem(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone) {
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest inValue = new TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest();
            inValue.SessionKey = SessionKey;
            inValue.SuperPackageLineItemId = SuperPackageLineItemId;
            inValue.ParentSuperPackageLineItemId = ParentSuperPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.SubPackageNumber = SubPackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddSubPackageItem(inValue);
            return retVal.SubPackageLineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddSubPackageItem(TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSubPackageItem(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddSubPackageItem(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest inValue = new TessituraIntegration.TessituraWebAPI.AddSubPackageItemRequest();
            inValue.SessionKey = SessionKey;
            inValue.SuperPackageLineItemId = SuperPackageLineItemId;
            inValue.ParentSuperPackageLineItemId = ParentSuperPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.SubPackageNumber = SubPackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddSubPackageItem(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddSubPackageItem(System.IAsyncResult result) {
            return base.Channel.EndAddSubPackageItem(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader EndAddSubPackageItem(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddSubPackageItem(result);
            return retVal.SubPackageLineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddSubPackageItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int SuperPackageLineItemId = ((int)(inValues[1]));
            int ParentSuperPackageLineItemId = ((int)(inValues[2]));
            string PriceType = ((string)(inValues[3]));
            int SubPackageNumber = ((int)(inValues[4]));
            int NumberOfSeats = ((int)(inValues[5]));
            int Zone = ((int)(inValues[6]));
            return this.BeginAddSubPackageItem(SessionKey, SuperPackageLineItemId, ParentSuperPackageLineItemId, PriceType, SubPackageNumber, NumberOfSeats, Zone, callback, asyncState);
        }
        
        private object[] OnEndAddSubPackageItem(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader retVal = this.EndAddSubPackageItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddSubPackageItemCompleted(object state) {
            if ((this.AddSubPackageItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSubPackageItemCompleted(this, new AddSubPackageItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSubPackageItemAsync(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone) {
            this.AddSubPackageItemAsync(SessionKey, SuperPackageLineItemId, ParentSuperPackageLineItemId, PriceType, SubPackageNumber, NumberOfSeats, Zone, null);
        }
        
        public void AddSubPackageItemAsync(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, object userState) {
            if ((this.onBeginAddSubPackageItemDelegate == null)) {
                this.onBeginAddSubPackageItemDelegate = new BeginOperationDelegate(this.OnBeginAddSubPackageItem);
            }
            if ((this.onEndAddSubPackageItemDelegate == null)) {
                this.onEndAddSubPackageItemDelegate = new EndOperationDelegate(this.OnEndAddSubPackageItem);
            }
            if ((this.onAddSubPackageItemCompletedDelegate == null)) {
                this.onAddSubPackageItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSubPackageItemCompleted);
            }
            base.InvokeAsync(this.onBeginAddSubPackageItemDelegate, new object[] {
                        SessionKey,
                        SuperPackageLineItemId,
                        ParentSuperPackageLineItemId,
                        PriceType,
                        SubPackageNumber,
                        NumberOfSeats,
                        Zone}, this.onEndAddSubPackageItemDelegate, this.onAddSubPackageItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddSubPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest request) {
            return base.Channel.AddSubPackageItemSeated(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader AddSubPackageItemSeated(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, out int AddSubPackageItemSeatedResult) {
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest inValue = new TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest();
            inValue.SessionKey = SessionKey;
            inValue.SuperPackageLineItemId = SuperPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.SubPackageNumber = SubPackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            inValue.RequestedSeats = RequestedSeats;
            inValue.LeaveSingleSeats = LeaveSingleSeats;
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddSubPackageItemSeated(inValue);
            AddSubPackageItemSeatedResult = retVal.AddSubPackageItemSeatedResult;
            return retVal.SubPackageLineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddSubPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSubPackageItemSeated(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddSubPackageItemSeated(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest inValue = new TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedRequest();
            inValue.SessionKey = SessionKey;
            inValue.SuperPackageLineItemId = SuperPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.SubPackageNumber = SubPackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            inValue.RequestedSeats = RequestedSeats;
            inValue.LeaveSingleSeats = LeaveSingleSeats;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddSubPackageItemSeated(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddSubPackageItemSeated(System.IAsyncResult result) {
            return base.Channel.EndAddSubPackageItemSeated(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader EndAddSubPackageItemSeated(System.IAsyncResult result, out int AddSubPackageItemSeatedResult) {
            TessituraIntegration.TessituraWebAPI.AddSubPackageItemSeatedResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddSubPackageItemSeated(result);
            AddSubPackageItemSeatedResult = retVal.AddSubPackageItemSeatedResult;
            return retVal.SubPackageLineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddSubPackageItemSeated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int SuperPackageLineItemId = ((int)(inValues[1]));
            string PriceType = ((string)(inValues[2]));
            int SubPackageNumber = ((int)(inValues[3]));
            int NumberOfSeats = ((int)(inValues[4]));
            int Zone = ((int)(inValues[5]));
            string RequestedSeats = ((string)(inValues[6]));
            bool LeaveSingleSeats = ((bool)(inValues[7]));
            return this.BeginAddSubPackageItemSeated(SessionKey, SuperPackageLineItemId, PriceType, SubPackageNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, callback, asyncState);
        }
        
        private object[] OnEndAddSubPackageItemSeated(System.IAsyncResult result) {
            int AddSubPackageItemSeatedResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.SubPackageLineItemHeader retVal = this.EndAddSubPackageItemSeated(result, out AddSubPackageItemSeatedResult);
            return new object[] {
                    AddSubPackageItemSeatedResult,
                    retVal};
        }
        
        private void OnAddSubPackageItemSeatedCompleted(object state) {
            if ((this.AddSubPackageItemSeatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSubPackageItemSeatedCompleted(this, new AddSubPackageItemSeatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSubPackageItemSeatedAsync(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            this.AddSubPackageItemSeatedAsync(SessionKey, SuperPackageLineItemId, PriceType, SubPackageNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, null);
        }
        
        public void AddSubPackageItemSeatedAsync(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, object userState) {
            if ((this.onBeginAddSubPackageItemSeatedDelegate == null)) {
                this.onBeginAddSubPackageItemSeatedDelegate = new BeginOperationDelegate(this.OnBeginAddSubPackageItemSeated);
            }
            if ((this.onEndAddSubPackageItemSeatedDelegate == null)) {
                this.onEndAddSubPackageItemSeatedDelegate = new EndOperationDelegate(this.OnEndAddSubPackageItemSeated);
            }
            if ((this.onAddSubPackageItemSeatedCompletedDelegate == null)) {
                this.onAddSubPackageItemSeatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSubPackageItemSeatedCompleted);
            }
            base.InvokeAsync(this.onBeginAddSubPackageItemSeatedDelegate, new object[] {
                        SessionKey,
                        SuperPackageLineItemId,
                        PriceType,
                        SubPackageNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats}, this.onEndAddSubPackageItemSeatedDelegate, this.onAddSubPackageItemSeatedCompletedDelegate, userState);
        }
        
        public void UpdateCustomOrderData(string SessionKey, int RefNo, int FieldIndex, string FieldValue) {
            base.Channel.UpdateCustomOrderData(SessionKey, RefNo, FieldIndex, FieldValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateCustomOrderData(string SessionKey, int RefNo, int FieldIndex, string FieldValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCustomOrderData(SessionKey, RefNo, FieldIndex, FieldValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateCustomOrderData(System.IAsyncResult result) {
            base.Channel.EndUpdateCustomOrderData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCustomOrderData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int RefNo = ((int)(inValues[1]));
            int FieldIndex = ((int)(inValues[2]));
            string FieldValue = ((string)(inValues[3]));
            return this.BeginUpdateCustomOrderData(SessionKey, RefNo, FieldIndex, FieldValue, callback, asyncState);
        }
        
        private object[] OnEndUpdateCustomOrderData(System.IAsyncResult result) {
            this.EndUpdateCustomOrderData(result);
            return null;
        }
        
        private void OnUpdateCustomOrderDataCompleted(object state) {
            if ((this.UpdateCustomOrderDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCustomOrderDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCustomOrderDataAsync(string SessionKey, int RefNo, int FieldIndex, string FieldValue) {
            this.UpdateCustomOrderDataAsync(SessionKey, RefNo, FieldIndex, FieldValue, null);
        }
        
        public void UpdateCustomOrderDataAsync(string SessionKey, int RefNo, int FieldIndex, string FieldValue, object userState) {
            if ((this.onBeginUpdateCustomOrderDataDelegate == null)) {
                this.onBeginUpdateCustomOrderDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateCustomOrderData);
            }
            if ((this.onEndUpdateCustomOrderDataDelegate == null)) {
                this.onEndUpdateCustomOrderDataDelegate = new EndOperationDelegate(this.OnEndUpdateCustomOrderData);
            }
            if ((this.onUpdateCustomOrderDataCompletedDelegate == null)) {
                this.onUpdateCustomOrderDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCustomOrderDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCustomOrderDataDelegate, new object[] {
                        SessionKey,
                        RefNo,
                        FieldIndex,
                        FieldValue}, this.onEndUpdateCustomOrderDataDelegate, this.onUpdateCustomOrderDataCompletedDelegate, userState);
        }
        
        public void AddOrderCommentsEx(string SessionKey, string Comment, int LineItemID, char LineItemType) {
            base.Channel.AddOrderCommentsEx(SessionKey, Comment, LineItemID, LineItemType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOrderCommentsEx(string SessionKey, string Comment, int LineItemID, char LineItemType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrderCommentsEx(SessionKey, Comment, LineItemID, LineItemType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddOrderCommentsEx(System.IAsyncResult result) {
            base.Channel.EndAddOrderCommentsEx(result);
        }
        
        private System.IAsyncResult OnBeginAddOrderCommentsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string Comment = ((string)(inValues[1]));
            int LineItemID = ((int)(inValues[2]));
            char LineItemType = ((char)(inValues[3]));
            return this.BeginAddOrderCommentsEx(SessionKey, Comment, LineItemID, LineItemType, callback, asyncState);
        }
        
        private object[] OnEndAddOrderCommentsEx(System.IAsyncResult result) {
            this.EndAddOrderCommentsEx(result);
            return null;
        }
        
        private void OnAddOrderCommentsExCompleted(object state) {
            if ((this.AddOrderCommentsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrderCommentsExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrderCommentsExAsync(string SessionKey, string Comment, int LineItemID, char LineItemType) {
            this.AddOrderCommentsExAsync(SessionKey, Comment, LineItemID, LineItemType, null);
        }
        
        public void AddOrderCommentsExAsync(string SessionKey, string Comment, int LineItemID, char LineItemType, object userState) {
            if ((this.onBeginAddOrderCommentsExDelegate == null)) {
                this.onBeginAddOrderCommentsExDelegate = new BeginOperationDelegate(this.OnBeginAddOrderCommentsEx);
            }
            if ((this.onEndAddOrderCommentsExDelegate == null)) {
                this.onEndAddOrderCommentsExDelegate = new EndOperationDelegate(this.OnEndAddOrderCommentsEx);
            }
            if ((this.onAddOrderCommentsExCompletedDelegate == null)) {
                this.onAddOrderCommentsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrderCommentsExCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrderCommentsExDelegate, new object[] {
                        SessionKey,
                        Comment,
                        LineItemID,
                        LineItemType}, this.onEndAddOrderCommentsExDelegate, this.onAddOrderCommentsExCompletedDelegate, userState);
        }
        
        public void RemoveOrderCommentsEx(string SessionKey, int LineItemID, char LineItemType) {
            base.Channel.RemoveOrderCommentsEx(SessionKey, LineItemID, LineItemType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveOrderCommentsEx(string SessionKey, int LineItemID, char LineItemType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveOrderCommentsEx(SessionKey, LineItemID, LineItemType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveOrderCommentsEx(System.IAsyncResult result) {
            base.Channel.EndRemoveOrderCommentsEx(result);
        }
        
        private System.IAsyncResult OnBeginRemoveOrderCommentsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int LineItemID = ((int)(inValues[1]));
            char LineItemType = ((char)(inValues[2]));
            return this.BeginRemoveOrderCommentsEx(SessionKey, LineItemID, LineItemType, callback, asyncState);
        }
        
        private object[] OnEndRemoveOrderCommentsEx(System.IAsyncResult result) {
            this.EndRemoveOrderCommentsEx(result);
            return null;
        }
        
        private void OnRemoveOrderCommentsExCompleted(object state) {
            if ((this.RemoveOrderCommentsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveOrderCommentsExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveOrderCommentsExAsync(string SessionKey, int LineItemID, char LineItemType) {
            this.RemoveOrderCommentsExAsync(SessionKey, LineItemID, LineItemType, null);
        }
        
        public void RemoveOrderCommentsExAsync(string SessionKey, int LineItemID, char LineItemType, object userState) {
            if ((this.onBeginRemoveOrderCommentsExDelegate == null)) {
                this.onBeginRemoveOrderCommentsExDelegate = new BeginOperationDelegate(this.OnBeginRemoveOrderCommentsEx);
            }
            if ((this.onEndRemoveOrderCommentsExDelegate == null)) {
                this.onEndRemoveOrderCommentsExDelegate = new EndOperationDelegate(this.OnEndRemoveOrderCommentsEx);
            }
            if ((this.onRemoveOrderCommentsExCompletedDelegate == null)) {
                this.onRemoveOrderCommentsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveOrderCommentsExCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveOrderCommentsExDelegate, new object[] {
                        SessionKey,
                        LineItemID,
                        LineItemType}, this.onEndRemoveOrderCommentsExDelegate, this.onRemoveOrderCommentsExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionDetailEx(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit) {
            return base.Channel.GetProductionDetailEx(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionDetailEx(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductionDetailEx(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionDetailEx(System.IAsyncResult result) {
            return base.Channel.EndGetProductionDetailEx(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionDetailEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            int iProd_Season_no = ((int)(inValues[2]));
            short iModeOfSale = ((short)(inValues[3]));
            int iBusinessUnit = ((int)(inValues[4]));
            return this.BeginGetProductionDetailEx(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetProductionDetailEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionDetailEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionDetailExCompleted(object state) {
            if ((this.GetProductionDetailExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionDetailExCompleted(this, new GetProductionDetailExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionDetailExAsync(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionDetailExAsync(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, null);
        }
        
        public void GetProductionDetailExAsync(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.onBeginGetProductionDetailExDelegate == null)) {
                this.onBeginGetProductionDetailExDelegate = new BeginOperationDelegate(this.OnBeginGetProductionDetailEx);
            }
            if ((this.onEndGetProductionDetailExDelegate == null)) {
                this.onEndGetProductionDetailExDelegate = new EndOperationDelegate(this.OnEndGetProductionDetailEx);
            }
            if ((this.onGetProductionDetailExCompletedDelegate == null)) {
                this.onGetProductionDetailExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailExCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductionDetailExDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit}, this.onEndGetProductionDetailExDelegate, this.onGetProductionDetailExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetLocalData(string SessionKey, int LocalDataTableIndex, int RetrievalKey) {
            return base.Channel.GetLocalData(SessionKey, LocalDataTableIndex, RetrievalKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLocalData(string SessionKey, int LocalDataTableIndex, int RetrievalKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocalData(SessionKey, LocalDataTableIndex, RetrievalKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetLocalData(System.IAsyncResult result) {
            return base.Channel.EndGetLocalData(result);
        }
        
        private System.IAsyncResult OnBeginGetLocalData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int LocalDataTableIndex = ((int)(inValues[1]));
            int RetrievalKey = ((int)(inValues[2]));
            return this.BeginGetLocalData(SessionKey, LocalDataTableIndex, RetrievalKey, callback, asyncState);
        }
        
        private object[] OnEndGetLocalData(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetLocalData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocalDataCompleted(object state) {
            if ((this.GetLocalDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocalDataCompleted(this, new GetLocalDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocalDataAsync(string SessionKey, int LocalDataTableIndex, int RetrievalKey) {
            this.GetLocalDataAsync(SessionKey, LocalDataTableIndex, RetrievalKey, null);
        }
        
        public void GetLocalDataAsync(string SessionKey, int LocalDataTableIndex, int RetrievalKey, object userState) {
            if ((this.onBeginGetLocalDataDelegate == null)) {
                this.onBeginGetLocalDataDelegate = new BeginOperationDelegate(this.OnBeginGetLocalData);
            }
            if ((this.onEndGetLocalDataDelegate == null)) {
                this.onEndGetLocalDataDelegate = new EndOperationDelegate(this.OnEndGetLocalData);
            }
            if ((this.onGetLocalDataCompletedDelegate == null)) {
                this.onGetLocalDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocalDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocalDataDelegate, new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        RetrievalKey}, this.onEndGetLocalDataDelegate, this.onGetLocalDataCompletedDelegate, userState);
        }
        
        public void UpdateLocalData(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues) {
            base.Channel.UpdateLocalData(SessionKey, LocalDataTableIndex, LocalDataTableKey, Action, RetrievalKey, LocalDataValues);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLocalData(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLocalData(SessionKey, LocalDataTableIndex, LocalDataTableKey, Action, RetrievalKey, LocalDataValues, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateLocalData(System.IAsyncResult result) {
            base.Channel.EndUpdateLocalData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLocalData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int LocalDataTableIndex = ((int)(inValues[1]));
            int LocalDataTableKey = ((int)(inValues[2]));
            char Action = ((char)(inValues[3]));
            int RetrievalKey = ((int)(inValues[4]));
            string LocalDataValues = ((string)(inValues[5]));
            return this.BeginUpdateLocalData(SessionKey, LocalDataTableIndex, LocalDataTableKey, Action, RetrievalKey, LocalDataValues, callback, asyncState);
        }
        
        private object[] OnEndUpdateLocalData(System.IAsyncResult result) {
            this.EndUpdateLocalData(result);
            return null;
        }
        
        private void OnUpdateLocalDataCompleted(object state) {
            if ((this.UpdateLocalDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLocalDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLocalDataAsync(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues) {
            this.UpdateLocalDataAsync(SessionKey, LocalDataTableIndex, LocalDataTableKey, Action, RetrievalKey, LocalDataValues, null);
        }
        
        public void UpdateLocalDataAsync(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues, object userState) {
            if ((this.onBeginUpdateLocalDataDelegate == null)) {
                this.onBeginUpdateLocalDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateLocalData);
            }
            if ((this.onEndUpdateLocalDataDelegate == null)) {
                this.onEndUpdateLocalDataDelegate = new EndOperationDelegate(this.OnEndUpdateLocalData);
            }
            if ((this.onUpdateLocalDataCompletedDelegate == null)) {
                this.onUpdateLocalDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLocalDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLocalDataDelegate, new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        LocalDataTableKey,
                        Action,
                        RetrievalKey,
                        LocalDataValues}, this.onEndUpdateLocalDataDelegate, this.onUpdateLocalDataCompletedDelegate, userState);
        }
        
        public int GetPromoCode(string SessionKey, string PromotionCodeString) {
            return base.Channel.GetPromoCode(SessionKey, PromotionCodeString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPromoCode(string SessionKey, string PromotionCodeString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPromoCode(SessionKey, PromotionCodeString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetPromoCode(System.IAsyncResult result) {
            return base.Channel.EndGetPromoCode(result);
        }
        
        private System.IAsyncResult OnBeginGetPromoCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string PromotionCodeString = ((string)(inValues[1]));
            return this.BeginGetPromoCode(SessionKey, PromotionCodeString, callback, asyncState);
        }
        
        private object[] OnEndGetPromoCode(System.IAsyncResult result) {
            int retVal = this.EndGetPromoCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPromoCodeCompleted(object state) {
            if ((this.GetPromoCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPromoCodeCompleted(this, new GetPromoCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPromoCodeAsync(string SessionKey, string PromotionCodeString) {
            this.GetPromoCodeAsync(SessionKey, PromotionCodeString, null);
        }
        
        public void GetPromoCodeAsync(string SessionKey, string PromotionCodeString, object userState) {
            if ((this.onBeginGetPromoCodeDelegate == null)) {
                this.onBeginGetPromoCodeDelegate = new BeginOperationDelegate(this.OnBeginGetPromoCode);
            }
            if ((this.onEndGetPromoCodeDelegate == null)) {
                this.onEndGetPromoCodeDelegate = new EndOperationDelegate(this.OnEndGetPromoCode);
            }
            if ((this.onGetPromoCodeCompletedDelegate == null)) {
                this.onGetPromoCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPromoCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPromoCodeDelegate, new object[] {
                        SessionKey,
                        PromotionCodeString}, this.onEndGetPromoCodeDelegate, this.onGetPromoCodeCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetStateProvinceEx(string CountryIds) {
            return base.Channel.GetStateProvinceEx(CountryIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStateProvinceEx(string CountryIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStateProvinceEx(CountryIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetStateProvinceEx(System.IAsyncResult result) {
            return base.Channel.EndGetStateProvinceEx(result);
        }
        
        private System.IAsyncResult OnBeginGetStateProvinceEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CountryIds = ((string)(inValues[0]));
            return this.BeginGetStateProvinceEx(CountryIds, callback, asyncState);
        }
        
        private object[] OnEndGetStateProvinceEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetStateProvinceEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStateProvinceExCompleted(object state) {
            if ((this.GetStateProvinceExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStateProvinceExCompleted(this, new GetStateProvinceExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStateProvinceExAsync(string CountryIds) {
            this.GetStateProvinceExAsync(CountryIds, null);
        }
        
        public void GetStateProvinceExAsync(string CountryIds, object userState) {
            if ((this.onBeginGetStateProvinceExDelegate == null)) {
                this.onBeginGetStateProvinceExDelegate = new BeginOperationDelegate(this.OnBeginGetStateProvinceEx);
            }
            if ((this.onEndGetStateProvinceExDelegate == null)) {
                this.onEndGetStateProvinceExDelegate = new EndOperationDelegate(this.OnEndGetStateProvinceEx);
            }
            if ((this.onGetStateProvinceExCompletedDelegate == null)) {
                this.onGetStateProvinceExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStateProvinceExCompleted);
            }
            base.InvokeAsync(this.onBeginGetStateProvinceExDelegate, new object[] {
                        CountryIds}, this.onEndGetStateProvinceExDelegate, this.onGetStateProvinceExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ValidateSuperPackages(string SessionKey) {
            return base.Channel.ValidateSuperPackages(SessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateSuperPackages(string SessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateSuperPackages(SessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndValidateSuperPackages(System.IAsyncResult result) {
            return base.Channel.EndValidateSuperPackages(result);
        }
        
        private System.IAsyncResult OnBeginValidateSuperPackages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            return this.BeginValidateSuperPackages(SessionKey, callback, asyncState);
        }
        
        private object[] OnEndValidateSuperPackages(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndValidateSuperPackages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateSuperPackagesCompleted(object state) {
            if ((this.ValidateSuperPackagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateSuperPackagesCompleted(this, new ValidateSuperPackagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateSuperPackagesAsync(string SessionKey) {
            this.ValidateSuperPackagesAsync(SessionKey, null);
        }
        
        public void ValidateSuperPackagesAsync(string SessionKey, object userState) {
            if ((this.onBeginValidateSuperPackagesDelegate == null)) {
                this.onBeginValidateSuperPackagesDelegate = new BeginOperationDelegate(this.OnBeginValidateSuperPackages);
            }
            if ((this.onEndValidateSuperPackagesDelegate == null)) {
                this.onEndValidateSuperPackagesDelegate = new EndOperationDelegate(this.OnEndValidateSuperPackages);
            }
            if ((this.onValidateSuperPackagesCompletedDelegate == null)) {
                this.onValidateSuperPackagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateSuperPackagesCompleted);
            }
            base.InvokeAsync(this.onBeginValidateSuperPackagesDelegate, new object[] {
                        SessionKey}, this.onEndValidateSuperPackagesDelegate, this.onValidateSuperPackagesCompletedDelegate, userState);
        }
        
        public bool TessituraSeatServerListeningViaWebSeatServer() {
            return base.Channel.TessituraSeatServerListeningViaWebSeatServer();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTessituraSeatServerListeningViaWebSeatServer(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTessituraSeatServerListeningViaWebSeatServer(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndTessituraSeatServerListeningViaWebSeatServer(System.IAsyncResult result) {
            return base.Channel.EndTessituraSeatServerListeningViaWebSeatServer(result);
        }
        
        private System.IAsyncResult OnBeginTessituraSeatServerListeningViaWebSeatServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginTessituraSeatServerListeningViaWebSeatServer(callback, asyncState);
        }
        
        private object[] OnEndTessituraSeatServerListeningViaWebSeatServer(System.IAsyncResult result) {
            bool retVal = this.EndTessituraSeatServerListeningViaWebSeatServer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTessituraSeatServerListeningViaWebSeatServerCompleted(object state) {
            if ((this.TessituraSeatServerListeningViaWebSeatServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TessituraSeatServerListeningViaWebSeatServerCompleted(this, new TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TessituraSeatServerListeningViaWebSeatServerAsync() {
            this.TessituraSeatServerListeningViaWebSeatServerAsync(null);
        }
        
        public void TessituraSeatServerListeningViaWebSeatServerAsync(object userState) {
            if ((this.onBeginTessituraSeatServerListeningViaWebSeatServerDelegate == null)) {
                this.onBeginTessituraSeatServerListeningViaWebSeatServerDelegate = new BeginOperationDelegate(this.OnBeginTessituraSeatServerListeningViaWebSeatServer);
            }
            if ((this.onEndTessituraSeatServerListeningViaWebSeatServerDelegate == null)) {
                this.onEndTessituraSeatServerListeningViaWebSeatServerDelegate = new EndOperationDelegate(this.OnEndTessituraSeatServerListeningViaWebSeatServer);
            }
            if ((this.onTessituraSeatServerListeningViaWebSeatServerCompletedDelegate == null)) {
                this.onTessituraSeatServerListeningViaWebSeatServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTessituraSeatServerListeningViaWebSeatServerCompleted);
            }
            base.InvokeAsync(this.onBeginTessituraSeatServerListeningViaWebSeatServerDelegate, null, this.onEndTessituraSeatServerListeningViaWebSeatServerDelegate, this.onTessituraSeatServerListeningViaWebSeatServerCompletedDelegate, userState);
        }
        
        public bool TessituraCreditCardServerListening() {
            return base.Channel.TessituraCreditCardServerListening();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTessituraCreditCardServerListening(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTessituraCreditCardServerListening(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndTessituraCreditCardServerListening(System.IAsyncResult result) {
            return base.Channel.EndTessituraCreditCardServerListening(result);
        }
        
        private System.IAsyncResult OnBeginTessituraCreditCardServerListening(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginTessituraCreditCardServerListening(callback, asyncState);
        }
        
        private object[] OnEndTessituraCreditCardServerListening(System.IAsyncResult result) {
            bool retVal = this.EndTessituraCreditCardServerListening(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTessituraCreditCardServerListeningCompleted(object state) {
            if ((this.TessituraCreditCardServerListeningCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TessituraCreditCardServerListeningCompleted(this, new TessituraCreditCardServerListeningCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TessituraCreditCardServerListeningAsync() {
            this.TessituraCreditCardServerListeningAsync(null);
        }
        
        public void TessituraCreditCardServerListeningAsync(object userState) {
            if ((this.onBeginTessituraCreditCardServerListeningDelegate == null)) {
                this.onBeginTessituraCreditCardServerListeningDelegate = new BeginOperationDelegate(this.OnBeginTessituraCreditCardServerListening);
            }
            if ((this.onEndTessituraCreditCardServerListeningDelegate == null)) {
                this.onEndTessituraCreditCardServerListeningDelegate = new EndOperationDelegate(this.OnEndTessituraCreditCardServerListening);
            }
            if ((this.onTessituraCreditCardServerListeningCompletedDelegate == null)) {
                this.onTessituraCreditCardServerListeningCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTessituraCreditCardServerListeningCompleted);
            }
            base.InvokeAsync(this.onBeginTessituraCreditCardServerListeningDelegate, null, this.onEndTessituraCreditCardServerListeningDelegate, this.onTessituraCreditCardServerListeningCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetOrderDetails(string SessionKey, int OrderNumber) {
            return base.Channel.GetOrderDetails(SessionKey, OrderNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrderDetails(string SessionKey, int OrderNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrderDetails(SessionKey, OrderNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetOrderDetails(System.IAsyncResult result) {
            return base.Channel.EndGetOrderDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetOrderDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int OrderNumber = ((int)(inValues[1]));
            return this.BeginGetOrderDetails(SessionKey, OrderNumber, callback, asyncState);
        }
        
        private object[] OnEndGetOrderDetails(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetOrderDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrderDetailsCompleted(object state) {
            if ((this.GetOrderDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrderDetailsCompleted(this, new GetOrderDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrderDetailsAsync(string SessionKey, int OrderNumber) {
            this.GetOrderDetailsAsync(SessionKey, OrderNumber, null);
        }
        
        public void GetOrderDetailsAsync(string SessionKey, int OrderNumber, object userState) {
            if ((this.onBeginGetOrderDetailsDelegate == null)) {
                this.onBeginGetOrderDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetOrderDetails);
            }
            if ((this.onEndGetOrderDetailsDelegate == null)) {
                this.onEndGetOrderDetailsDelegate = new EndOperationDelegate(this.OnEndGetOrderDetails);
            }
            if ((this.onGetOrderDetailsCompletedDelegate == null)) {
                this.onGetOrderDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrderDetailsDelegate, new object[] {
                        SessionKey,
                        OrderNumber}, this.onEndGetOrderDetailsDelegate, this.onGetOrderDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginConstituentResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.LoginConstituent(TessituraIntegration.TessituraWebAPI.LoginConstituentRequest request) {
            return base.Channel.LoginConstituent(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginConstituent(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers, out bool LoginConstituentResult) {
            TessituraIntegration.TessituraWebAPI.LoginConstituentRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginConstituentRequest();
            inValue.SessionKey = SessionKey;
            inValue.CCNumber = CCNumber;
            inValue.PhoneNumber = PhoneNumber;
            inValue.LoginType = LoginType;
            inValue.PromotionCode = PromotionCode;
            inValue.GenericCustomerNumbers = GenericCustomerNumbers;
            TessituraIntegration.TessituraWebAPI.LoginConstituentResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).LoginConstituent(inValue);
            LoginConstituentResult = retVal.LoginConstituentResult;
            return retVal.LoginAttemptHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginLoginConstituent(TessituraIntegration.TessituraWebAPI.LoginConstituentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginConstituent(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginConstituent(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.LoginConstituentRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginConstituentRequest();
            inValue.SessionKey = SessionKey;
            inValue.CCNumber = CCNumber;
            inValue.PhoneNumber = PhoneNumber;
            inValue.LoginType = LoginType;
            inValue.PromotionCode = PromotionCode;
            inValue.GenericCustomerNumbers = GenericCustomerNumbers;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginLoginConstituent(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginConstituentResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndLoginConstituent(System.IAsyncResult result) {
            return base.Channel.EndLoginConstituent(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader EndLoginConstituent(System.IAsyncResult result, out bool LoginConstituentResult) {
            TessituraIntegration.TessituraWebAPI.LoginConstituentResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndLoginConstituent(result);
            LoginConstituentResult = retVal.LoginConstituentResult;
            return retVal.LoginAttemptHeader;
        }
        
        private System.IAsyncResult OnBeginLoginConstituent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string CCNumber = ((string)(inValues[1]));
            string PhoneNumber = ((string)(inValues[2]));
            int LoginType = ((int)(inValues[3]));
            int PromotionCode = ((int)(inValues[4]));
            string GenericCustomerNumbers = ((string)(inValues[5]));
            return this.BeginLoginConstituent(SessionKey, CCNumber, PhoneNumber, LoginType, PromotionCode, GenericCustomerNumbers, callback, asyncState);
        }
        
        private object[] OnEndLoginConstituent(System.IAsyncResult result) {
            bool LoginConstituentResult = this.GetDefaultValueForInitialization<bool>();
            TessituraIntegration.TessituraWebAPI.LoginAttemptHeader retVal = this.EndLoginConstituent(result, out LoginConstituentResult);
            return new object[] {
                    LoginConstituentResult,
                    retVal};
        }
        
        private void OnLoginConstituentCompleted(object state) {
            if ((this.LoginConstituentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginConstituentCompleted(this, new LoginConstituentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginConstituentAsync(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers) {
            this.LoginConstituentAsync(SessionKey, CCNumber, PhoneNumber, LoginType, PromotionCode, GenericCustomerNumbers, null);
        }
        
        public void LoginConstituentAsync(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers, object userState) {
            if ((this.onBeginLoginConstituentDelegate == null)) {
                this.onBeginLoginConstituentDelegate = new BeginOperationDelegate(this.OnBeginLoginConstituent);
            }
            if ((this.onEndLoginConstituentDelegate == null)) {
                this.onEndLoginConstituentDelegate = new EndOperationDelegate(this.OnEndLoginConstituent);
            }
            if ((this.onLoginConstituentCompletedDelegate == null)) {
                this.onLoginConstituentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginConstituentCompleted);
            }
            base.InvokeAsync(this.onBeginLoginConstituentDelegate, new object[] {
                        SessionKey,
                        CCNumber,
                        PhoneNumber,
                        LoginType,
                        PromotionCode,
                        GenericCustomerNumbers}, this.onEndLoginConstituentDelegate, this.onLoginConstituentCompletedDelegate, userState);
        }
        
        public void RemoveSuperPackageItem(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID) {
            base.Channel.RemoveSuperPackageItem(SessionKey, SuperPackageNumber, SuperPackageLineItemID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveSuperPackageItem(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveSuperPackageItem(SessionKey, SuperPackageNumber, SuperPackageLineItemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveSuperPackageItem(System.IAsyncResult result) {
            base.Channel.EndRemoveSuperPackageItem(result);
        }
        
        private System.IAsyncResult OnBeginRemoveSuperPackageItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int SuperPackageNumber = ((int)(inValues[1]));
            int SuperPackageLineItemID = ((int)(inValues[2]));
            return this.BeginRemoveSuperPackageItem(SessionKey, SuperPackageNumber, SuperPackageLineItemID, callback, asyncState);
        }
        
        private object[] OnEndRemoveSuperPackageItem(System.IAsyncResult result) {
            this.EndRemoveSuperPackageItem(result);
            return null;
        }
        
        private void OnRemoveSuperPackageItemCompleted(object state) {
            if ((this.RemoveSuperPackageItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveSuperPackageItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveSuperPackageItemAsync(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID) {
            this.RemoveSuperPackageItemAsync(SessionKey, SuperPackageNumber, SuperPackageLineItemID, null);
        }
        
        public void RemoveSuperPackageItemAsync(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID, object userState) {
            if ((this.onBeginRemoveSuperPackageItemDelegate == null)) {
                this.onBeginRemoveSuperPackageItemDelegate = new BeginOperationDelegate(this.OnBeginRemoveSuperPackageItem);
            }
            if ((this.onEndRemoveSuperPackageItemDelegate == null)) {
                this.onEndRemoveSuperPackageItemDelegate = new EndOperationDelegate(this.OnEndRemoveSuperPackageItem);
            }
            if ((this.onRemoveSuperPackageItemCompletedDelegate == null)) {
                this.onRemoveSuperPackageItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveSuperPackageItemCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveSuperPackageItemDelegate, new object[] {
                        SessionKey,
                        SuperPackageNumber,
                        SuperPackageLineItemID}, this.onEndRemoveSuperPackageItemDelegate, this.onRemoveSuperPackageItemCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsByZone(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            return base.Channel.GetSeatsByZone(SessionKey, Zone, PerformanceNumber, PackageNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsByZone(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsByZone(SessionKey, Zone, PerformanceNumber, PackageNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsByZone(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsByZone(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsByZone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int Zone = ((int)(inValues[1]));
            int PerformanceNumber = ((int)(inValues[2]));
            int PackageNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsByZone(SessionKey, Zone, PerformanceNumber, PackageNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsByZone(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsByZone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsByZoneCompleted(object state) {
            if ((this.GetSeatsByZoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsByZoneCompleted(this, new GetSeatsByZoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsByZoneAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            this.GetSeatsByZoneAsync(SessionKey, Zone, PerformanceNumber, PackageNumber, null);
        }
        
        public void GetSeatsByZoneAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, object userState) {
            if ((this.onBeginGetSeatsByZoneDelegate == null)) {
                this.onBeginGetSeatsByZoneDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsByZone);
            }
            if ((this.onEndGetSeatsByZoneDelegate == null)) {
                this.onEndGetSeatsByZoneDelegate = new EndOperationDelegate(this.OnEndGetSeatsByZone);
            }
            if ((this.onGetSeatsByZoneCompletedDelegate == null)) {
                this.onGetSeatsByZoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZoneCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsByZoneDelegate, new object[] {
                        SessionKey,
                        Zone,
                        PerformanceNumber,
                        PackageNumber}, this.onEndGetSeatsByZoneDelegate, this.onGetSeatsByZoneCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsByZoneBrief(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            return base.Channel.GetSeatsByZoneBrief(SessionKey, Zone, PerformanceNumber, PackageNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsByZoneBrief(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsByZoneBrief(SessionKey, Zone, PerformanceNumber, PackageNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsByZoneBrief(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsByZoneBrief(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsByZoneBrief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int Zone = ((int)(inValues[1]));
            int PerformanceNumber = ((int)(inValues[2]));
            int PackageNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsByZoneBrief(SessionKey, Zone, PerformanceNumber, PackageNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsByZoneBrief(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsByZoneBrief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsByZoneBriefCompleted(object state) {
            if ((this.GetSeatsByZoneBriefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsByZoneBriefCompleted(this, new GetSeatsByZoneBriefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsByZoneBriefAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            this.GetSeatsByZoneBriefAsync(SessionKey, Zone, PerformanceNumber, PackageNumber, null);
        }
        
        public void GetSeatsByZoneBriefAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, object userState) {
            if ((this.onBeginGetSeatsByZoneBriefDelegate == null)) {
                this.onBeginGetSeatsByZoneBriefDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsByZoneBrief);
            }
            if ((this.onEndGetSeatsByZoneBriefDelegate == null)) {
                this.onEndGetSeatsByZoneBriefDelegate = new EndOperationDelegate(this.OnEndGetSeatsByZoneBrief);
            }
            if ((this.onGetSeatsByZoneBriefCompletedDelegate == null)) {
                this.onGetSeatsByZoneBriefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZoneBriefCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsByZoneBriefDelegate, new object[] {
                        SessionKey,
                        Zone,
                        PerformanceNumber,
                        PackageNumber}, this.onEndGetSeatsByZoneBriefDelegate, this.onGetSeatsByZoneBriefCompletedDelegate, userState);
        }
        
        public TessituraIntegration.TessituraWebAPI.Performance GetPerformanceDetailSYOS(string SessionKey, int iPerf_no, short iModeOfSale) {
            return base.Channel.GetPerformanceDetailSYOS(SessionKey, iPerf_no, iModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailSYOS(string SessionKey, int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailSYOS(SessionKey, iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.Performance EndGetPerformanceDetailSYOS(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailSYOS(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailSYOS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            short iModeOfSale = ((short)(inValues[2]));
            return this.BeginGetPerformanceDetailSYOS(SessionKey, iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailSYOS(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.Performance retVal = this.EndGetPerformanceDetailSYOS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailSYOSCompleted(object state) {
            if ((this.GetPerformanceDetailSYOSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailSYOSCompleted(this, new GetPerformanceDetailSYOSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailSYOSAsync(SessionKey, iPerf_no, iModeOfSale, null);
        }
        
        public void GetPerformanceDetailSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale, object userState) {
            if ((this.onBeginGetPerformanceDetailSYOSDelegate == null)) {
                this.onBeginGetPerformanceDetailSYOSDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailSYOS);
            }
            if ((this.onEndGetPerformanceDetailSYOSDelegate == null)) {
                this.onEndGetPerformanceDetailSYOSDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailSYOS);
            }
            if ((this.onGetPerformanceDetailSYOSCompletedDelegate == null)) {
                this.onGetPerformanceDetailSYOSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailSYOSCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailSYOSDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale}, this.onEndGetPerformanceDetailSYOSDelegate, this.onGetPerformanceDetailSYOSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddNFSPackagePerformanceItem(TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest request) {
            return base.Channel.AddNFSPackagePerformanceItem(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.NFSPackageLineItemHeader AddNFSPackagePerformanceItem(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated, out int AddNFSPackagePerformanceItemResult) {
            TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest inValue = new TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest();
            inValue.SessionKey = SessionKey;
            inValue.NFSPackageLineItemId = NFSPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.PackageNumber = PackageNumber;
            inValue.PerformanceGroupNumber = PerformanceGroupNumber;
            inValue.PerformanceNumber = PerformanceNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            inValue.RequestedSeats = RequestedSeats;
            inValue.LeaveSingleSeats = LeaveSingleSeats;
            inValue.SpecialRequests = SpecialRequests;
            inValue.UnSeated = UnSeated;
            TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddNFSPackagePerformanceItem(inValue);
            AddNFSPackagePerformanceItemResult = retVal.AddNFSPackagePerformanceItemResult;
            return retVal.NFSPackageLineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddNFSPackagePerformanceItem(TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNFSPackagePerformanceItem(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNFSPackagePerformanceItem(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest inValue = new TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemRequest();
            inValue.SessionKey = SessionKey;
            inValue.NFSPackageLineItemId = NFSPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.PackageNumber = PackageNumber;
            inValue.PerformanceGroupNumber = PerformanceGroupNumber;
            inValue.PerformanceNumber = PerformanceNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            inValue.RequestedSeats = RequestedSeats;
            inValue.LeaveSingleSeats = LeaveSingleSeats;
            inValue.SpecialRequests = SpecialRequests;
            inValue.UnSeated = UnSeated;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddNFSPackagePerformanceItem(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddNFSPackagePerformanceItem(System.IAsyncResult result) {
            return base.Channel.EndAddNFSPackagePerformanceItem(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.NFSPackageLineItemHeader EndAddNFSPackagePerformanceItem(System.IAsyncResult result, out int AddNFSPackagePerformanceItemResult) {
            TessituraIntegration.TessituraWebAPI.AddNFSPackagePerformanceItemResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddNFSPackagePerformanceItem(result);
            AddNFSPackagePerformanceItemResult = retVal.AddNFSPackagePerformanceItemResult;
            return retVal.NFSPackageLineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddNFSPackagePerformanceItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int NFSPackageLineItemId = ((int)(inValues[1]));
            string PriceType = ((string)(inValues[2]));
            int PackageNumber = ((int)(inValues[3]));
            int PerformanceGroupNumber = ((int)(inValues[4]));
            int PerformanceNumber = ((int)(inValues[5]));
            int NumberOfSeats = ((int)(inValues[6]));
            int Zone = ((int)(inValues[7]));
            string RequestedSeats = ((string)(inValues[8]));
            bool LeaveSingleSeats = ((bool)(inValues[9]));
            string SpecialRequests = ((string)(inValues[10]));
            bool UnSeated = ((bool)(inValues[11]));
            return this.BeginAddNFSPackagePerformanceItem(SessionKey, NFSPackageLineItemId, PriceType, PackageNumber, PerformanceGroupNumber, PerformanceNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, SpecialRequests, UnSeated, callback, asyncState);
        }
        
        private object[] OnEndAddNFSPackagePerformanceItem(System.IAsyncResult result) {
            int AddNFSPackagePerformanceItemResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.NFSPackageLineItemHeader retVal = this.EndAddNFSPackagePerformanceItem(result, out AddNFSPackagePerformanceItemResult);
            return new object[] {
                    AddNFSPackagePerformanceItemResult,
                    retVal};
        }
        
        private void OnAddNFSPackagePerformanceItemCompleted(object state) {
            if ((this.AddNFSPackagePerformanceItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNFSPackagePerformanceItemCompleted(this, new AddNFSPackagePerformanceItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNFSPackagePerformanceItemAsync(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated) {
            this.AddNFSPackagePerformanceItemAsync(SessionKey, NFSPackageLineItemId, PriceType, PackageNumber, PerformanceGroupNumber, PerformanceNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, SpecialRequests, UnSeated, null);
        }
        
        public void AddNFSPackagePerformanceItemAsync(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated, object userState) {
            if ((this.onBeginAddNFSPackagePerformanceItemDelegate == null)) {
                this.onBeginAddNFSPackagePerformanceItemDelegate = new BeginOperationDelegate(this.OnBeginAddNFSPackagePerformanceItem);
            }
            if ((this.onEndAddNFSPackagePerformanceItemDelegate == null)) {
                this.onEndAddNFSPackagePerformanceItemDelegate = new EndOperationDelegate(this.OnEndAddNFSPackagePerformanceItem);
            }
            if ((this.onAddNFSPackagePerformanceItemCompletedDelegate == null)) {
                this.onAddNFSPackagePerformanceItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNFSPackagePerformanceItemCompleted);
            }
            base.InvokeAsync(this.onBeginAddNFSPackagePerformanceItemDelegate, new object[] {
                        SessionKey,
                        NFSPackageLineItemId,
                        PriceType,
                        PackageNumber,
                        PerformanceGroupNumber,
                        PerformanceNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats,
                        SpecialRequests,
                        UnSeated}, this.onEndAddNFSPackagePerformanceItemDelegate, this.onAddNFSPackagePerformanceItemCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetNFSPackageDetail(string SessionKey, int PackageID, int ModeOfSale) {
            return base.Channel.GetNFSPackageDetail(SessionKey, PackageID, ModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNFSPackageDetail(string SessionKey, int PackageID, int ModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNFSPackageDetail(SessionKey, PackageID, ModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetNFSPackageDetail(System.IAsyncResult result) {
            return base.Channel.EndGetNFSPackageDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetNFSPackageDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PackageID = ((int)(inValues[1]));
            int ModeOfSale = ((int)(inValues[2]));
            return this.BeginGetNFSPackageDetail(SessionKey, PackageID, ModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndGetNFSPackageDetail(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetNFSPackageDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNFSPackageDetailCompleted(object state) {
            if ((this.GetNFSPackageDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNFSPackageDetailCompleted(this, new GetNFSPackageDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNFSPackageDetailAsync(string SessionKey, int PackageID, int ModeOfSale) {
            this.GetNFSPackageDetailAsync(SessionKey, PackageID, ModeOfSale, null);
        }
        
        public void GetNFSPackageDetailAsync(string SessionKey, int PackageID, int ModeOfSale, object userState) {
            if ((this.onBeginGetNFSPackageDetailDelegate == null)) {
                this.onBeginGetNFSPackageDetailDelegate = new BeginOperationDelegate(this.OnBeginGetNFSPackageDetail);
            }
            if ((this.onEndGetNFSPackageDetailDelegate == null)) {
                this.onEndGetNFSPackageDetailDelegate = new EndOperationDelegate(this.OnEndGetNFSPackageDetail);
            }
            if ((this.onGetNFSPackageDetailCompletedDelegate == null)) {
                this.onGetNFSPackageDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNFSPackageDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetNFSPackageDetailDelegate, new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale}, this.onEndGetNFSPackageDetailDelegate, this.onGetNFSPackageDetailCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ValidateNFSPackages(string SessionKey) {
            return base.Channel.ValidateNFSPackages(SessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateNFSPackages(string SessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateNFSPackages(SessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndValidateNFSPackages(System.IAsyncResult result) {
            return base.Channel.EndValidateNFSPackages(result);
        }
        
        private System.IAsyncResult OnBeginValidateNFSPackages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            return this.BeginValidateNFSPackages(SessionKey, callback, asyncState);
        }
        
        private object[] OnEndValidateNFSPackages(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndValidateNFSPackages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateNFSPackagesCompleted(object state) {
            if ((this.ValidateNFSPackagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateNFSPackagesCompleted(this, new ValidateNFSPackagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateNFSPackagesAsync(string SessionKey) {
            this.ValidateNFSPackagesAsync(SessionKey, null);
        }
        
        public void ValidateNFSPackagesAsync(string SessionKey, object userState) {
            if ((this.onBeginValidateNFSPackagesDelegate == null)) {
                this.onBeginValidateNFSPackagesDelegate = new BeginOperationDelegate(this.OnBeginValidateNFSPackages);
            }
            if ((this.onEndValidateNFSPackagesDelegate == null)) {
                this.onEndValidateNFSPackagesDelegate = new EndOperationDelegate(this.OnEndValidateNFSPackages);
            }
            if ((this.onValidateNFSPackagesCompletedDelegate == null)) {
                this.onValidateNFSPackagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateNFSPackagesCompleted);
            }
            base.InvokeAsync(this.onBeginValidateNFSPackagesDelegate, new object[] {
                        SessionKey}, this.onEndValidateNFSPackagesDelegate, this.onValidateNFSPackagesCompletedDelegate, userState);
        }
        
        public void RemoveNFSPackage(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber) {
            base.Channel.RemoveNFSPackage(SessionKey, NFSPackageLineItemId, PerformanceLineItemId, PerformanceNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveNFSPackage(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveNFSPackage(SessionKey, NFSPackageLineItemId, PerformanceLineItemId, PerformanceNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveNFSPackage(System.IAsyncResult result) {
            base.Channel.EndRemoveNFSPackage(result);
        }
        
        private System.IAsyncResult OnBeginRemoveNFSPackage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int NFSPackageLineItemId = ((int)(inValues[1]));
            int PerformanceLineItemId = ((int)(inValues[2]));
            int PerformanceNumber = ((int)(inValues[3]));
            return this.BeginRemoveNFSPackage(SessionKey, NFSPackageLineItemId, PerformanceLineItemId, PerformanceNumber, callback, asyncState);
        }
        
        private object[] OnEndRemoveNFSPackage(System.IAsyncResult result) {
            this.EndRemoveNFSPackage(result);
            return null;
        }
        
        private void OnRemoveNFSPackageCompleted(object state) {
            if ((this.RemoveNFSPackageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveNFSPackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveNFSPackageAsync(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber) {
            this.RemoveNFSPackageAsync(SessionKey, NFSPackageLineItemId, PerformanceLineItemId, PerformanceNumber, null);
        }
        
        public void RemoveNFSPackageAsync(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber, object userState) {
            if ((this.onBeginRemoveNFSPackageDelegate == null)) {
                this.onBeginRemoveNFSPackageDelegate = new BeginOperationDelegate(this.OnBeginRemoveNFSPackage);
            }
            if ((this.onEndRemoveNFSPackageDelegate == null)) {
                this.onEndRemoveNFSPackageDelegate = new EndOperationDelegate(this.OnEndRemoveNFSPackage);
            }
            if ((this.onRemoveNFSPackageCompletedDelegate == null)) {
                this.onRemoveNFSPackageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveNFSPackageCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveNFSPackageDelegate, new object[] {
                        SessionKey,
                        NFSPackageLineItemId,
                        PerformanceLineItemId,
                        PerformanceNumber}, this.onEndRemoveNFSPackageDelegate, this.onRemoveNFSPackageCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsBySection(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            return base.Channel.GetSeatsBySection(SessionKey, PerformanceNumber, PackageNumber, SectionNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsBySection(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsBySection(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsBySection(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsBySection(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsBySection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PerformanceNumber = ((int)(inValues[1]));
            int PackageNumber = ((int)(inValues[2]));
            int SectionNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsBySection(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsBySection(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsBySection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsBySectionCompleted(object state) {
            if ((this.GetSeatsBySectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsBySectionCompleted(this, new GetSeatsBySectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsBySectionAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            this.GetSeatsBySectionAsync(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, null);
        }
        
        public void GetSeatsBySectionAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, object userState) {
            if ((this.onBeginGetSeatsBySectionDelegate == null)) {
                this.onBeginGetSeatsBySectionDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsBySection);
            }
            if ((this.onEndGetSeatsBySectionDelegate == null)) {
                this.onEndGetSeatsBySectionDelegate = new EndOperationDelegate(this.OnEndGetSeatsBySection);
            }
            if ((this.onGetSeatsBySectionCompletedDelegate == null)) {
                this.onGetSeatsBySectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsBySectionDelegate, new object[] {
                        SessionKey,
                        PerformanceNumber,
                        PackageNumber,
                        SectionNumber}, this.onEndGetSeatsBySectionDelegate, this.onGetSeatsBySectionCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsBySectionBrief(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            return base.Channel.GetSeatsBySectionBrief(SessionKey, PerformanceNumber, PackageNumber, SectionNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsBySectionBrief(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsBySectionBrief(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsBySectionBrief(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsBySectionBrief(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsBySectionBrief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PerformanceNumber = ((int)(inValues[1]));
            int PackageNumber = ((int)(inValues[2]));
            int SectionNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsBySectionBrief(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsBySectionBrief(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsBySectionBrief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsBySectionBriefCompleted(object state) {
            if ((this.GetSeatsBySectionBriefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsBySectionBriefCompleted(this, new GetSeatsBySectionBriefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsBySectionBriefAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            this.GetSeatsBySectionBriefAsync(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, null);
        }
        
        public void GetSeatsBySectionBriefAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, object userState) {
            if ((this.onBeginGetSeatsBySectionBriefDelegate == null)) {
                this.onBeginGetSeatsBySectionBriefDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsBySectionBrief);
            }
            if ((this.onEndGetSeatsBySectionBriefDelegate == null)) {
                this.onEndGetSeatsBySectionBriefDelegate = new EndOperationDelegate(this.OnEndGetSeatsBySectionBrief);
            }
            if ((this.onGetSeatsBySectionBriefCompletedDelegate == null)) {
                this.onGetSeatsBySectionBriefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionBriefCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsBySectionBriefDelegate, new object[] {
                        SessionKey,
                        PerformanceNumber,
                        PackageNumber,
                        SectionNumber}, this.onEndGetSeatsBySectionBriefDelegate, this.onGetSeatsBySectionBriefCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetGiftCertificateInfo(string SessionKey, string RedemptionCode) {
            return base.Channel.GetGiftCertificateInfo(SessionKey, RedemptionCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGiftCertificateInfo(string SessionKey, string RedemptionCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGiftCertificateInfo(SessionKey, RedemptionCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetGiftCertificateInfo(System.IAsyncResult result) {
            return base.Channel.EndGetGiftCertificateInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetGiftCertificateInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string RedemptionCode = ((string)(inValues[1]));
            return this.BeginGetGiftCertificateInfo(SessionKey, RedemptionCode, callback, asyncState);
        }
        
        private object[] OnEndGetGiftCertificateInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetGiftCertificateInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGiftCertificateInfoCompleted(object state) {
            if ((this.GetGiftCertificateInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGiftCertificateInfoCompleted(this, new GetGiftCertificateInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGiftCertificateInfoAsync(string SessionKey, string RedemptionCode) {
            this.GetGiftCertificateInfoAsync(SessionKey, RedemptionCode, null);
        }
        
        public void GetGiftCertificateInfoAsync(string SessionKey, string RedemptionCode, object userState) {
            if ((this.onBeginGetGiftCertificateInfoDelegate == null)) {
                this.onBeginGetGiftCertificateInfoDelegate = new BeginOperationDelegate(this.OnBeginGetGiftCertificateInfo);
            }
            if ((this.onEndGetGiftCertificateInfoDelegate == null)) {
                this.onEndGetGiftCertificateInfoDelegate = new EndOperationDelegate(this.OnEndGetGiftCertificateInfo);
            }
            if ((this.onGetGiftCertificateInfoCompletedDelegate == null)) {
                this.onGetGiftCertificateInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGiftCertificateInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetGiftCertificateInfoDelegate, new object[] {
                        SessionKey,
                        RedemptionCode}, this.onEndGetGiftCertificateInfoDelegate, this.onGetGiftCertificateInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCityStateProvinceByPostalCode(string sSessionKey, string sPostalCode, int iCountry) {
            return base.Channel.GetCityStateProvinceByPostalCode(sSessionKey, sPostalCode, iCountry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCityStateProvinceByPostalCode(string sSessionKey, string sPostalCode, int iCountry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCityStateProvinceByPostalCode(sSessionKey, sPostalCode, iCountry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCityStateProvinceByPostalCode(System.IAsyncResult result) {
            return base.Channel.EndGetCityStateProvinceByPostalCode(result);
        }
        
        private System.IAsyncResult OnBeginGetCityStateProvinceByPostalCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sPostalCode = ((string)(inValues[1]));
            int iCountry = ((int)(inValues[2]));
            return this.BeginGetCityStateProvinceByPostalCode(sSessionKey, sPostalCode, iCountry, callback, asyncState);
        }
        
        private object[] OnEndGetCityStateProvinceByPostalCode(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCityStateProvinceByPostalCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCityStateProvinceByPostalCodeCompleted(object state) {
            if ((this.GetCityStateProvinceByPostalCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCityStateProvinceByPostalCodeCompleted(this, new GetCityStateProvinceByPostalCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCityStateProvinceByPostalCodeAsync(string sSessionKey, string sPostalCode, int iCountry) {
            this.GetCityStateProvinceByPostalCodeAsync(sSessionKey, sPostalCode, iCountry, null);
        }
        
        public void GetCityStateProvinceByPostalCodeAsync(string sSessionKey, string sPostalCode, int iCountry, object userState) {
            if ((this.onBeginGetCityStateProvinceByPostalCodeDelegate == null)) {
                this.onBeginGetCityStateProvinceByPostalCodeDelegate = new BeginOperationDelegate(this.OnBeginGetCityStateProvinceByPostalCode);
            }
            if ((this.onEndGetCityStateProvinceByPostalCodeDelegate == null)) {
                this.onEndGetCityStateProvinceByPostalCodeDelegate = new EndOperationDelegate(this.OnEndGetCityStateProvinceByPostalCode);
            }
            if ((this.onGetCityStateProvinceByPostalCodeCompletedDelegate == null)) {
                this.onGetCityStateProvinceByPostalCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCityStateProvinceByPostalCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCityStateProvinceByPostalCodeDelegate, new object[] {
                        sSessionKey,
                        sPostalCode,
                        iCountry}, this.onEndGetCityStateProvinceByPostalCodeDelegate, this.onGetCityStateProvinceByPostalCodeCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateAddress(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange) {
            return base.Channel.UpdateAddress(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAddress(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateAddress(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateAddress(System.IAsyncResult result) {
            return base.Channel.EndUpdateAddress(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sPhone = ((string)(inValues[1]));
            string sStreet1 = ((string)(inValues[2]));
            string sStreet2 = ((string)(inValues[3]));
            string sCity = ((string)(inValues[4]));
            string sStateProv = ((string)(inValues[5]));
            string sPostalCode = ((string)(inValues[6]));
            int iCountry = ((int)(inValues[7]));
            string sPhone2 = ((string)(inValues[8]));
            string sFax = ((string)(inValues[9]));
            int iAddressNumber = ((int)(inValues[10]));
            int iAddressType = ((int)(inValues[11]));
            bool bPrimary = ((bool)(inValues[12]));
            string sStartDate = ((string)(inValues[13]));
            string sEndDate = ((string)(inValues[14]));
            string sMonths = ((string)(inValues[15]));
            string sInActive = ((string)(inValues[16]));
            bool bSaveCopyOnChange = ((bool)(inValues[17]));
            return this.BeginUpdateAddress(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, callback, asyncState);
        }
        
        private object[] OnEndUpdateAddress(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAddressCompleted(object state) {
            if ((this.UpdateAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAddressCompleted(this, new UpdateAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAddressAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange) {
            this.UpdateAddressAsync(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, null);
        }
        
        public void UpdateAddressAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    object userState) {
            if ((this.onBeginUpdateAddressDelegate == null)) {
                this.onBeginUpdateAddressDelegate = new BeginOperationDelegate(this.OnBeginUpdateAddress);
            }
            if ((this.onEndUpdateAddressDelegate == null)) {
                this.onEndUpdateAddressDelegate = new EndOperationDelegate(this.OnEndUpdateAddress);
            }
            if ((this.onUpdateAddressCompletedDelegate == null)) {
                this.onUpdateAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAddressCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAddressDelegate, new object[] {
                        sSessionKey,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        sFax,
                        iAddressNumber,
                        iAddressType,
                        bPrimary,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sInActive,
                        bSaveCopyOnChange}, this.onEndUpdateAddressDelegate, this.onUpdateAddressCompletedDelegate, userState);
        }
        
        public void UpdateAccountInfoEx2(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            base.Channel.UpdateAccountInfoEx2(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sMiddleName2, sLastName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAccountInfoEx2(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateAccountInfoEx2(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sMiddleName2, sLastName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAccountInfoEx2(System.IAsyncResult result) {
            base.Channel.EndUpdateAccountInfoEx2(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAccountInfoEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sEmail = ((string)(inValues[1]));
            string sPhone = ((string)(inValues[2]));
            string sStreet1 = ((string)(inValues[3]));
            string sStreet2 = ((string)(inValues[4]));
            string sCity = ((string)(inValues[5]));
            string sStateProv = ((string)(inValues[6]));
            string sPostalCode = ((string)(inValues[7]));
            int iCountry = ((int)(inValues[8]));
            string sPhone2 = ((string)(inValues[9]));
            int iPhone2Type = ((int)(inValues[10]));
            string sFax = ((string)(inValues[11]));
            string sFirstName = ((string)(inValues[12]));
            string sLastName = ((string)(inValues[13]));
            string sMiddleName = ((string)(inValues[14]));
            string sPrefix = ((string)(inValues[15]));
            string sSuffix = ((string)(inValues[16]));
            string sBusinessTitle = ((string)(inValues[17]));
            int iEmailIndicator = ((int)(inValues[18]));
            int iMailIndicator = ((int)(inValues[19]));
            int iPhoneIndicator = ((int)(inValues[20]));
            string sHtmlIndicator = ((string)(inValues[21]));
            string sGender = ((string)(inValues[22]));
            string sGender2 = ((string)(inValues[23]));
            string sFirstName2 = ((string)(inValues[24]));
            string sMiddleName2 = ((string)(inValues[25]));
            string sLastName2 = ((string)(inValues[26]));
            string sPrefix2 = ((string)(inValues[27]));
            string sSuffix2 = ((string)(inValues[28]));
            int iOriginalSourceNumber = ((int)(inValues[29]));
            bool bUpdateSalutation = ((bool)(inValues[30]));
            int iAddressTypeOverwrite = ((int)(inValues[31]));
            int iEaddressTypeOverwrite = ((int)(inValues[32]));
            string sEsal1DescriptionOverwrite = ((string)(inValues[33]));
            string sEsal2DescriptionOverwrite = ((string)(inValues[34]));
            string sLsalDescriptionOverwrite = ((string)(inValues[35]));
            int iConstituentTypeOverwrite = ((int)(inValues[36]));
            int iNameStatus = ((int)(inValues[37]));
            int iName2Status = ((int)(inValues[38]));
            return this.BeginUpdateAccountInfoEx2(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sMiddleName2, sLastName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, callback, asyncState);
        }
        
        private object[] OnEndUpdateAccountInfoEx2(System.IAsyncResult result) {
            this.EndUpdateAccountInfoEx2(result);
            return null;
        }
        
        private void OnUpdateAccountInfoEx2Completed(object state) {
            if ((this.UpdateAccountInfoEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAccountInfoEx2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAccountInfoEx2Async(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            this.UpdateAccountInfoEx2Async(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sMiddleName2, sLastName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, null);
        }
        
        public void UpdateAccountInfoEx2Async(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    object userState) {
            if ((this.onBeginUpdateAccountInfoEx2Delegate == null)) {
                this.onBeginUpdateAccountInfoEx2Delegate = new BeginOperationDelegate(this.OnBeginUpdateAccountInfoEx2);
            }
            if ((this.onEndUpdateAccountInfoEx2Delegate == null)) {
                this.onEndUpdateAccountInfoEx2Delegate = new EndOperationDelegate(this.OnEndUpdateAccountInfoEx2);
            }
            if ((this.onUpdateAccountInfoEx2CompletedDelegate == null)) {
                this.onUpdateAccountInfoEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAccountInfoEx2Completed);
            }
            base.InvokeAsync(this.onBeginUpdateAccountInfoEx2Delegate, new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sFirstName,
                        sLastName,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator,
                        sGender,
                        sGender2,
                        sFirstName2,
                        sMiddleName2,
                        sLastName2,
                        sPrefix2,
                        sSuffix2,
                        iOriginalSourceNumber,
                        bUpdateSalutation,
                        iAddressTypeOverwrite,
                        iEaddressTypeOverwrite,
                        sEsal1DescriptionOverwrite,
                        sEsal2DescriptionOverwrite,
                        sLsalDescriptionOverwrite,
                        iConstituentTypeOverwrite,
                        iNameStatus,
                        iName2Status}, this.onEndUpdateAccountInfoEx2Delegate, this.onUpdateAccountInfoEx2CompletedDelegate, userState);
        }
        
        public void UpdateOrderDetails(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime) {
            base.Channel.UpdateOrderDetails(sSessionKey, sSolicitor, iCategory, iChannel, sHoldUntilDateTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateOrderDetails(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOrderDetails(sSessionKey, sSolicitor, iCategory, iChannel, sHoldUntilDateTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateOrderDetails(System.IAsyncResult result) {
            base.Channel.EndUpdateOrderDetails(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOrderDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sSolicitor = ((string)(inValues[1]));
            int iCategory = ((int)(inValues[2]));
            int iChannel = ((int)(inValues[3]));
            string sHoldUntilDateTime = ((string)(inValues[4]));
            return this.BeginUpdateOrderDetails(sSessionKey, sSolicitor, iCategory, iChannel, sHoldUntilDateTime, callback, asyncState);
        }
        
        private object[] OnEndUpdateOrderDetails(System.IAsyncResult result) {
            this.EndUpdateOrderDetails(result);
            return null;
        }
        
        private void OnUpdateOrderDetailsCompleted(object state) {
            if ((this.UpdateOrderDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOrderDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOrderDetailsAsync(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime) {
            this.UpdateOrderDetailsAsync(sSessionKey, sSolicitor, iCategory, iChannel, sHoldUntilDateTime, null);
        }
        
        public void UpdateOrderDetailsAsync(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime, object userState) {
            if ((this.onBeginUpdateOrderDetailsDelegate == null)) {
                this.onBeginUpdateOrderDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateOrderDetails);
            }
            if ((this.onEndUpdateOrderDetailsDelegate == null)) {
                this.onEndUpdateOrderDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateOrderDetails);
            }
            if ((this.onUpdateOrderDetailsCompletedDelegate == null)) {
                this.onUpdateOrderDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOrderDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOrderDetailsDelegate, new object[] {
                        sSessionKey,
                        sSolicitor,
                        iCategory,
                        iChannel,
                        sHoldUntilDateTime}, this.onEndUpdateOrderDetailsDelegate, this.onUpdateOrderDetailsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetWebContent(string sSessionKey, int iInventoryNumber, int iPackageNumber) {
            return base.Channel.GetWebContent(sSessionKey, iInventoryNumber, iPackageNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetWebContent(string sSessionKey, int iInventoryNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebContent(sSessionKey, iInventoryNumber, iPackageNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetWebContent(System.IAsyncResult result) {
            return base.Channel.EndGetWebContent(result);
        }
        
        private System.IAsyncResult OnBeginGetWebContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iInventoryNumber = ((int)(inValues[1]));
            int iPackageNumber = ((int)(inValues[2]));
            return this.BeginGetWebContent(sSessionKey, iInventoryNumber, iPackageNumber, callback, asyncState);
        }
        
        private object[] OnEndGetWebContent(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetWebContent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebContentCompleted(object state) {
            if ((this.GetWebContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebContentCompleted(this, new GetWebContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebContentAsync(string sSessionKey, int iInventoryNumber, int iPackageNumber) {
            this.GetWebContentAsync(sSessionKey, iInventoryNumber, iPackageNumber, null);
        }
        
        public void GetWebContentAsync(string sSessionKey, int iInventoryNumber, int iPackageNumber, object userState) {
            if ((this.onBeginGetWebContentDelegate == null)) {
                this.onBeginGetWebContentDelegate = new BeginOperationDelegate(this.OnBeginGetWebContent);
            }
            if ((this.onEndGetWebContentDelegate == null)) {
                this.onEndGetWebContentDelegate = new EndOperationDelegate(this.OnEndGetWebContent);
            }
            if ((this.onGetWebContentCompletedDelegate == null)) {
                this.onGetWebContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebContentCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebContentDelegate, new object[] {
                        sSessionKey,
                        iInventoryNumber,
                        iPackageNumber}, this.onEndGetWebContentDelegate, this.onGetWebContentCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetFees(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear) {
            return base.Channel.GetFees(sSessionKey, sCategoryList, sUserDefined, iSeasonID, iFiscalYear);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFees(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFees(sSessionKey, sCategoryList, sUserDefined, iSeasonID, iFiscalYear, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetFees(System.IAsyncResult result) {
            return base.Channel.EndGetFees(result);
        }
        
        private System.IAsyncResult OnBeginGetFees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sCategoryList = ((string)(inValues[1]));
            string sUserDefined = ((string)(inValues[2]));
            int iSeasonID = ((int)(inValues[3]));
            int iFiscalYear = ((int)(inValues[4]));
            return this.BeginGetFees(sSessionKey, sCategoryList, sUserDefined, iSeasonID, iFiscalYear, callback, asyncState);
        }
        
        private object[] OnEndGetFees(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetFees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFeesCompleted(object state) {
            if ((this.GetFeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFeesCompleted(this, new GetFeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFeesAsync(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear) {
            this.GetFeesAsync(sSessionKey, sCategoryList, sUserDefined, iSeasonID, iFiscalYear, null);
        }
        
        public void GetFeesAsync(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear, object userState) {
            if ((this.onBeginGetFeesDelegate == null)) {
                this.onBeginGetFeesDelegate = new BeginOperationDelegate(this.OnBeginGetFees);
            }
            if ((this.onEndGetFeesDelegate == null)) {
                this.onEndGetFeesDelegate = new EndOperationDelegate(this.OnEndGetFees);
            }
            if ((this.onGetFeesCompletedDelegate == null)) {
                this.onGetFeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetFeesDelegate, new object[] {
                        sSessionKey,
                        sCategoryList,
                        sUserDefined,
                        iSeasonID,
                        iFiscalYear}, this.onEndGetFeesDelegate, this.onGetFeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.UpdateFeeResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.UpdateFee(TessituraIntegration.TessituraWebAPI.UpdateFeeRequest request) {
            return base.Channel.UpdateFee(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader UpdateFee(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount) {
            TessituraIntegration.TessituraWebAPI.UpdateFeeRequest inValue = new TessituraIntegration.TessituraWebAPI.UpdateFeeRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.cAction = cAction;
            inValue.iFeeNo = iFeeNo;
            inValue.iFeeID = iFeeID;
            inValue.dAmount = dAmount;
            TessituraIntegration.TessituraWebAPI.UpdateFeeResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).UpdateFee(inValue);
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginUpdateFee(TessituraIntegration.TessituraWebAPI.UpdateFeeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFee(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFee(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.UpdateFeeRequest inValue = new TessituraIntegration.TessituraWebAPI.UpdateFeeRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.cAction = cAction;
            inValue.iFeeNo = iFeeNo;
            inValue.iFeeID = iFeeID;
            inValue.dAmount = dAmount;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginUpdateFee(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.UpdateFeeResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndUpdateFee(System.IAsyncResult result) {
            return base.Channel.EndUpdateFee(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndUpdateFee(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.UpdateFeeResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndUpdateFee(result);
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginUpdateFee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            char cAction = ((char)(inValues[1]));
            int iFeeNo = ((int)(inValues[2]));
            int iFeeID = ((int)(inValues[3]));
            decimal dAmount = ((decimal)(inValues[4]));
            return this.BeginUpdateFee(sSessionKey, cAction, iFeeNo, iFeeID, dAmount, callback, asyncState);
        }
        
        private object[] OnEndUpdateFee(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndUpdateFee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFeeCompleted(object state) {
            if ((this.UpdateFeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFeeCompleted(this, new UpdateFeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFeeAsync(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount) {
            this.UpdateFeeAsync(sSessionKey, cAction, iFeeNo, iFeeID, dAmount, null);
        }
        
        public void UpdateFeeAsync(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount, object userState) {
            if ((this.onBeginUpdateFeeDelegate == null)) {
                this.onBeginUpdateFeeDelegate = new BeginOperationDelegate(this.OnBeginUpdateFee);
            }
            if ((this.onEndUpdateFeeDelegate == null)) {
                this.onEndUpdateFeeDelegate = new EndOperationDelegate(this.OnEndUpdateFee);
            }
            if ((this.onUpdateFeeCompletedDelegate == null)) {
                this.onUpdateFeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFeeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFeeDelegate, new object[] {
                        sSessionKey,
                        cAction,
                        iFeeNo,
                        iFeeID,
                        dAmount}, this.onEndUpdateFeeDelegate, this.onUpdateFeeCompletedDelegate, userState);
        }
        
        public void RemoveFee(string sSessionKey, int iFeeID) {
            base.Channel.RemoveFee(sSessionKey, iFeeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveFee(string sSessionKey, int iFeeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveFee(sSessionKey, iFeeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveFee(System.IAsyncResult result) {
            base.Channel.EndRemoveFee(result);
        }
        
        private System.IAsyncResult OnBeginRemoveFee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iFeeID = ((int)(inValues[1]));
            return this.BeginRemoveFee(sSessionKey, iFeeID, callback, asyncState);
        }
        
        private object[] OnEndRemoveFee(System.IAsyncResult result) {
            this.EndRemoveFee(result);
            return null;
        }
        
        private void OnRemoveFeeCompleted(object state) {
            if ((this.RemoveFeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveFeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveFeeAsync(string sSessionKey, int iFeeID) {
            this.RemoveFeeAsync(sSessionKey, iFeeID, null);
        }
        
        public void RemoveFeeAsync(string sSessionKey, int iFeeID, object userState) {
            if ((this.onBeginRemoveFeeDelegate == null)) {
                this.onBeginRemoveFeeDelegate = new BeginOperationDelegate(this.OnBeginRemoveFee);
            }
            if ((this.onEndRemoveFeeDelegate == null)) {
                this.onEndRemoveFeeDelegate = new EndOperationDelegate(this.OnEndRemoveFee);
            }
            if ((this.onRemoveFeeCompletedDelegate == null)) {
                this.onRemoveFeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveFeeCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveFeeDelegate, new object[] {
                        sSessionKey,
                        iFeeID}, this.onEndRemoveFeeDelegate, this.onRemoveFeeCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetReturnTickets(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate) {
            return base.Channel.GetReturnTickets(sSessionKey, dtStartDate, dtEndDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReturnTickets(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReturnTickets(sSessionKey, dtStartDate, dtEndDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetReturnTickets(System.IAsyncResult result) {
            return base.Channel.EndGetReturnTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetReturnTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            System.DateTime dtStartDate = ((System.DateTime)(inValues[1]));
            System.DateTime dtEndDate = ((System.DateTime)(inValues[2]));
            return this.BeginGetReturnTickets(sSessionKey, dtStartDate, dtEndDate, callback, asyncState);
        }
        
        private object[] OnEndGetReturnTickets(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetReturnTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReturnTicketsCompleted(object state) {
            if ((this.GetReturnTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReturnTicketsCompleted(this, new GetReturnTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReturnTicketsAsync(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate) {
            this.GetReturnTicketsAsync(sSessionKey, dtStartDate, dtEndDate, null);
        }
        
        public void GetReturnTicketsAsync(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate, object userState) {
            if ((this.onBeginGetReturnTicketsDelegate == null)) {
                this.onBeginGetReturnTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetReturnTickets);
            }
            if ((this.onEndGetReturnTicketsDelegate == null)) {
                this.onEndGetReturnTicketsDelegate = new EndOperationDelegate(this.OnEndGetReturnTickets);
            }
            if ((this.onGetReturnTicketsCompletedDelegate == null)) {
                this.onGetReturnTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReturnTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReturnTicketsDelegate, new object[] {
                        sSessionKey,
                        dtStartDate,
                        dtEndDate}, this.onEndGetReturnTicketsDelegate, this.onGetReturnTicketsCompletedDelegate, userState);
        }
        
        public void ReturnTicket(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate) {
            base.Channel.ReturnTicket(sSessionKey, iPerfNo, iSeatNo, iTicketNo, sCheckSum, cReturnOrDonate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReturnTicket(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnTicket(sSessionKey, iPerfNo, iSeatNo, iTicketNo, sCheckSum, cReturnOrDonate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReturnTicket(System.IAsyncResult result) {
            base.Channel.EndReturnTicket(result);
        }
        
        private System.IAsyncResult OnBeginReturnTicket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPerfNo = ((int)(inValues[1]));
            int iSeatNo = ((int)(inValues[2]));
            int iTicketNo = ((int)(inValues[3]));
            string sCheckSum = ((string)(inValues[4]));
            char cReturnOrDonate = ((char)(inValues[5]));
            return this.BeginReturnTicket(sSessionKey, iPerfNo, iSeatNo, iTicketNo, sCheckSum, cReturnOrDonate, callback, asyncState);
        }
        
        private object[] OnEndReturnTicket(System.IAsyncResult result) {
            this.EndReturnTicket(result);
            return null;
        }
        
        private void OnReturnTicketCompleted(object state) {
            if ((this.ReturnTicketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnTicketAsync(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate) {
            this.ReturnTicketAsync(sSessionKey, iPerfNo, iSeatNo, iTicketNo, sCheckSum, cReturnOrDonate, null);
        }
        
        public void ReturnTicketAsync(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate, object userState) {
            if ((this.onBeginReturnTicketDelegate == null)) {
                this.onBeginReturnTicketDelegate = new BeginOperationDelegate(this.OnBeginReturnTicket);
            }
            if ((this.onEndReturnTicketDelegate == null)) {
                this.onEndReturnTicketDelegate = new EndOperationDelegate(this.OnEndReturnTicket);
            }
            if ((this.onReturnTicketCompletedDelegate == null)) {
                this.onReturnTicketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnTicketCompleted);
            }
            base.InvokeAsync(this.onBeginReturnTicketDelegate, new object[] {
                        sSessionKey,
                        iPerfNo,
                        iSeatNo,
                        iTicketNo,
                        sCheckSum,
                        cReturnOrDonate}, this.onEndReturnTicketDelegate, this.onReturnTicketCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetAttributes(string sSessionKey, int iAttributeID) {
            return base.Channel.GetAttributes(sSessionKey, iAttributeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAttributes(string sSessionKey, int iAttributeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAttributes(sSessionKey, iAttributeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetAttributes(System.IAsyncResult result) {
            return base.Channel.EndGetAttributes(result);
        }
        
        private System.IAsyncResult OnBeginGetAttributes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iAttributeID = ((int)(inValues[1]));
            return this.BeginGetAttributes(sSessionKey, iAttributeID, callback, asyncState);
        }
        
        private object[] OnEndGetAttributes(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetAttributes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAttributesCompleted(object state) {
            if ((this.GetAttributesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAttributesCompleted(this, new GetAttributesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAttributesAsync(string sSessionKey, int iAttributeID) {
            this.GetAttributesAsync(sSessionKey, iAttributeID, null);
        }
        
        public void GetAttributesAsync(string sSessionKey, int iAttributeID, object userState) {
            if ((this.onBeginGetAttributesDelegate == null)) {
                this.onBeginGetAttributesDelegate = new BeginOperationDelegate(this.OnBeginGetAttributes);
            }
            if ((this.onEndGetAttributesDelegate == null)) {
                this.onEndGetAttributesDelegate = new EndOperationDelegate(this.OnEndGetAttributes);
            }
            if ((this.onGetAttributesCompletedDelegate == null)) {
                this.onGetAttributesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAttributesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAttributesDelegate, new object[] {
                        sSessionKey,
                        iAttributeID}, this.onEndGetAttributesDelegate, this.onGetAttributesCompletedDelegate, userState);
        }
        
        public void UpdateAssociation(string sSessionKey, int iConstN1N2, int iAssociationID, int iCustomerNo, string sName, int iAssocN1N2, int iTypeID, string sStartDate, string sEndDate, string sNotes, string sTitle, decimal dSalary, string sGender, string sBirthDate, string sInactive) {
            base.Channel.UpdateAssociation(sSessionKey, iConstN1N2, iAssociationID, iCustomerNo, sName, iAssocN1N2, iTypeID, sStartDate, sEndDate, sNotes, sTitle, dSalary, sGender, sBirthDate, sInactive);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAssociation(
                    string sSessionKey, 
                    int iConstN1N2, 
                    int iAssociationID, 
                    int iCustomerNo, 
                    string sName, 
                    int iAssocN1N2, 
                    int iTypeID, 
                    string sStartDate, 
                    string sEndDate, 
                    string sNotes, 
                    string sTitle, 
                    decimal dSalary, 
                    string sGender, 
                    string sBirthDate, 
                    string sInactive, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateAssociation(sSessionKey, iConstN1N2, iAssociationID, iCustomerNo, sName, iAssocN1N2, iTypeID, sStartDate, sEndDate, sNotes, sTitle, dSalary, sGender, sBirthDate, sInactive, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAssociation(System.IAsyncResult result) {
            base.Channel.EndUpdateAssociation(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAssociation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iConstN1N2 = ((int)(inValues[1]));
            int iAssociationID = ((int)(inValues[2]));
            int iCustomerNo = ((int)(inValues[3]));
            string sName = ((string)(inValues[4]));
            int iAssocN1N2 = ((int)(inValues[5]));
            int iTypeID = ((int)(inValues[6]));
            string sStartDate = ((string)(inValues[7]));
            string sEndDate = ((string)(inValues[8]));
            string sNotes = ((string)(inValues[9]));
            string sTitle = ((string)(inValues[10]));
            decimal dSalary = ((decimal)(inValues[11]));
            string sGender = ((string)(inValues[12]));
            string sBirthDate = ((string)(inValues[13]));
            string sInactive = ((string)(inValues[14]));
            return this.BeginUpdateAssociation(sSessionKey, iConstN1N2, iAssociationID, iCustomerNo, sName, iAssocN1N2, iTypeID, sStartDate, sEndDate, sNotes, sTitle, dSalary, sGender, sBirthDate, sInactive, callback, asyncState);
        }
        
        private object[] OnEndUpdateAssociation(System.IAsyncResult result) {
            this.EndUpdateAssociation(result);
            return null;
        }
        
        private void OnUpdateAssociationCompleted(object state) {
            if ((this.UpdateAssociationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAssociationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAssociationAsync(string sSessionKey, int iConstN1N2, int iAssociationID, int iCustomerNo, string sName, int iAssocN1N2, int iTypeID, string sStartDate, string sEndDate, string sNotes, string sTitle, decimal dSalary, string sGender, string sBirthDate, string sInactive) {
            this.UpdateAssociationAsync(sSessionKey, iConstN1N2, iAssociationID, iCustomerNo, sName, iAssocN1N2, iTypeID, sStartDate, sEndDate, sNotes, sTitle, dSalary, sGender, sBirthDate, sInactive, null);
        }
        
        public void UpdateAssociationAsync(
                    string sSessionKey, 
                    int iConstN1N2, 
                    int iAssociationID, 
                    int iCustomerNo, 
                    string sName, 
                    int iAssocN1N2, 
                    int iTypeID, 
                    string sStartDate, 
                    string sEndDate, 
                    string sNotes, 
                    string sTitle, 
                    decimal dSalary, 
                    string sGender, 
                    string sBirthDate, 
                    string sInactive, 
                    object userState) {
            if ((this.onBeginUpdateAssociationDelegate == null)) {
                this.onBeginUpdateAssociationDelegate = new BeginOperationDelegate(this.OnBeginUpdateAssociation);
            }
            if ((this.onEndUpdateAssociationDelegate == null)) {
                this.onEndUpdateAssociationDelegate = new EndOperationDelegate(this.OnEndUpdateAssociation);
            }
            if ((this.onUpdateAssociationCompletedDelegate == null)) {
                this.onUpdateAssociationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAssociationCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAssociationDelegate, new object[] {
                        sSessionKey,
                        iConstN1N2,
                        iAssociationID,
                        iCustomerNo,
                        sName,
                        iAssocN1N2,
                        iTypeID,
                        sStartDate,
                        sEndDate,
                        sNotes,
                        sTitle,
                        dSalary,
                        sGender,
                        sBirthDate,
                        sInactive}, this.onEndUpdateAssociationDelegate, this.onUpdateAssociationCompletedDelegate, userState);
        }
        
        public void RemoveAssociation(string sSessionKey, int iAssociationID) {
            base.Channel.RemoveAssociation(sSessionKey, iAssociationID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveAssociation(string sSessionKey, int iAssociationID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveAssociation(sSessionKey, iAssociationID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveAssociation(System.IAsyncResult result) {
            base.Channel.EndRemoveAssociation(result);
        }
        
        private System.IAsyncResult OnBeginRemoveAssociation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iAssociationID = ((int)(inValues[1]));
            return this.BeginRemoveAssociation(sSessionKey, iAssociationID, callback, asyncState);
        }
        
        private object[] OnEndRemoveAssociation(System.IAsyncResult result) {
            this.EndRemoveAssociation(result);
            return null;
        }
        
        private void OnRemoveAssociationCompleted(object state) {
            if ((this.RemoveAssociationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveAssociationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveAssociationAsync(string sSessionKey, int iAssociationID) {
            this.RemoveAssociationAsync(sSessionKey, iAssociationID, null);
        }
        
        public void RemoveAssociationAsync(string sSessionKey, int iAssociationID, object userState) {
            if ((this.onBeginRemoveAssociationDelegate == null)) {
                this.onBeginRemoveAssociationDelegate = new BeginOperationDelegate(this.OnBeginRemoveAssociation);
            }
            if ((this.onEndRemoveAssociationDelegate == null)) {
                this.onEndRemoveAssociationDelegate = new EndOperationDelegate(this.OnEndRemoveAssociation);
            }
            if ((this.onRemoveAssociationCompletedDelegate == null)) {
                this.onRemoveAssociationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveAssociationCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveAssociationDelegate, new object[] {
                        sSessionKey,
                        iAssociationID}, this.onEndRemoveAssociationDelegate, this.onRemoveAssociationCompletedDelegate, userState);
        }
        
        public int AddConstituent(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            return base.Channel.AddConstituent(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sLastName2, sMiddleName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddConstituent(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginAddConstituent(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sLastName2, sMiddleName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddConstituent(System.IAsyncResult result) {
            return base.Channel.EndAddConstituent(result);
        }
        
        private System.IAsyncResult OnBeginAddConstituent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sEmail = ((string)(inValues[1]));
            string sPhone = ((string)(inValues[2]));
            string sStreet1 = ((string)(inValues[3]));
            string sStreet2 = ((string)(inValues[4]));
            string sCity = ((string)(inValues[5]));
            string sStateProv = ((string)(inValues[6]));
            string sPostalCode = ((string)(inValues[7]));
            int iCountry = ((int)(inValues[8]));
            string sPhone2 = ((string)(inValues[9]));
            int iPhone2Type = ((int)(inValues[10]));
            string sFax = ((string)(inValues[11]));
            string sFirstName = ((string)(inValues[12]));
            string sLastName = ((string)(inValues[13]));
            string sMiddleName = ((string)(inValues[14]));
            string sPrefix = ((string)(inValues[15]));
            string sSuffix = ((string)(inValues[16]));
            string sBusinessTitle = ((string)(inValues[17]));
            int iEmailIndicator = ((int)(inValues[18]));
            int iMailIndicator = ((int)(inValues[19]));
            int iPhoneIndicator = ((int)(inValues[20]));
            string sHtmlIndicator = ((string)(inValues[21]));
            string sGender = ((string)(inValues[22]));
            string sGender2 = ((string)(inValues[23]));
            string sFirstName2 = ((string)(inValues[24]));
            string sLastName2 = ((string)(inValues[25]));
            string sMiddleName2 = ((string)(inValues[26]));
            string sPrefix2 = ((string)(inValues[27]));
            string sSuffix2 = ((string)(inValues[28]));
            int iOriginalSourceNumber = ((int)(inValues[29]));
            bool bUpdateSalutation = ((bool)(inValues[30]));
            int iAddressTypeOverwrite = ((int)(inValues[31]));
            int iEaddressTypeOverwrite = ((int)(inValues[32]));
            string sEsal1DescriptionOverwrite = ((string)(inValues[33]));
            string sEsal2DescriptionOverwrite = ((string)(inValues[34]));
            string sLsalDescriptionOverwrite = ((string)(inValues[35]));
            int iConstituentTypeOverwrite = ((int)(inValues[36]));
            int iNameStatus = ((int)(inValues[37]));
            int iName2Status = ((int)(inValues[38]));
            return this.BeginAddConstituent(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sLastName2, sMiddleName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, callback, asyncState);
        }
        
        private object[] OnEndAddConstituent(System.IAsyncResult result) {
            int retVal = this.EndAddConstituent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddConstituentCompleted(object state) {
            if ((this.AddConstituentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddConstituentCompleted(this, new AddConstituentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddConstituentAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            this.AddConstituentAsync(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sLastName2, sMiddleName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, null);
        }
        
        public void AddConstituentAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    object userState) {
            if ((this.onBeginAddConstituentDelegate == null)) {
                this.onBeginAddConstituentDelegate = new BeginOperationDelegate(this.OnBeginAddConstituent);
            }
            if ((this.onEndAddConstituentDelegate == null)) {
                this.onEndAddConstituentDelegate = new EndOperationDelegate(this.OnEndAddConstituent);
            }
            if ((this.onAddConstituentCompletedDelegate == null)) {
                this.onAddConstituentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddConstituentCompleted);
            }
            base.InvokeAsync(this.onBeginAddConstituentDelegate, new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sFirstName,
                        sLastName,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator,
                        sGender,
                        sGender2,
                        sFirstName2,
                        sLastName2,
                        sMiddleName2,
                        sPrefix2,
                        sSuffix2,
                        iOriginalSourceNumber,
                        bUpdateSalutation,
                        iAddressTypeOverwrite,
                        iEaddressTypeOverwrite,
                        sEsal1DescriptionOverwrite,
                        sEsal2DescriptionOverwrite,
                        sLsalDescriptionOverwrite,
                        iConstituentTypeOverwrite,
                        iNameStatus,
                        iName2Status}, this.onEndAddConstituentDelegate, this.onAddConstituentCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateRanking(string sSessionKey, int iRankingTypeID, int iRank) {
            return base.Channel.UpdateRanking(sSessionKey, iRankingTypeID, iRank);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateRanking(string sSessionKey, int iRankingTypeID, int iRank, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRanking(sSessionKey, iRankingTypeID, iRank, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateRanking(System.IAsyncResult result) {
            return base.Channel.EndUpdateRanking(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRanking(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iRankingTypeID = ((int)(inValues[1]));
            int iRank = ((int)(inValues[2]));
            return this.BeginUpdateRanking(sSessionKey, iRankingTypeID, iRank, callback, asyncState);
        }
        
        private object[] OnEndUpdateRanking(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateRanking(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRankingCompleted(object state) {
            if ((this.UpdateRankingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRankingCompleted(this, new UpdateRankingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRankingAsync(string sSessionKey, int iRankingTypeID, int iRank) {
            this.UpdateRankingAsync(sSessionKey, iRankingTypeID, iRank, null);
        }
        
        public void UpdateRankingAsync(string sSessionKey, int iRankingTypeID, int iRank, object userState) {
            if ((this.onBeginUpdateRankingDelegate == null)) {
                this.onBeginUpdateRankingDelegate = new BeginOperationDelegate(this.OnBeginUpdateRanking);
            }
            if ((this.onEndUpdateRankingDelegate == null)) {
                this.onEndUpdateRankingDelegate = new EndOperationDelegate(this.OnEndUpdateRanking);
            }
            if ((this.onUpdateRankingCompletedDelegate == null)) {
                this.onUpdateRankingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRankingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRankingDelegate, new object[] {
                        sSessionKey,
                        iRankingTypeID,
                        iRank}, this.onEndUpdateRankingDelegate, this.onUpdateRankingCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateConstituentInterestsEx(string sSessionKey, string sPreferences, int iN1N2) {
            return base.Channel.UpdateConstituentInterestsEx(sSessionKey, sPreferences, iN1N2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateConstituentInterestsEx(string sSessionKey, string sPreferences, int iN1N2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateConstituentInterestsEx(sSessionKey, sPreferences, iN1N2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateConstituentInterestsEx(System.IAsyncResult result) {
            return base.Channel.EndUpdateConstituentInterestsEx(result);
        }
        
        private System.IAsyncResult OnBeginUpdateConstituentInterestsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sPreferences = ((string)(inValues[1]));
            int iN1N2 = ((int)(inValues[2]));
            return this.BeginUpdateConstituentInterestsEx(sSessionKey, sPreferences, iN1N2, callback, asyncState);
        }
        
        private object[] OnEndUpdateConstituentInterestsEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateConstituentInterestsEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateConstituentInterestsExCompleted(object state) {
            if ((this.UpdateConstituentInterestsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateConstituentInterestsExCompleted(this, new UpdateConstituentInterestsExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateConstituentInterestsExAsync(string sSessionKey, string sPreferences, int iN1N2) {
            this.UpdateConstituentInterestsExAsync(sSessionKey, sPreferences, iN1N2, null);
        }
        
        public void UpdateConstituentInterestsExAsync(string sSessionKey, string sPreferences, int iN1N2, object userState) {
            if ((this.onBeginUpdateConstituentInterestsExDelegate == null)) {
                this.onBeginUpdateConstituentInterestsExDelegate = new BeginOperationDelegate(this.OnBeginUpdateConstituentInterestsEx);
            }
            if ((this.onEndUpdateConstituentInterestsExDelegate == null)) {
                this.onEndUpdateConstituentInterestsExDelegate = new EndOperationDelegate(this.OnEndUpdateConstituentInterestsEx);
            }
            if ((this.onUpdateConstituentInterestsExCompletedDelegate == null)) {
                this.onUpdateConstituentInterestsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateConstituentInterestsExCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateConstituentInterestsExDelegate, new object[] {
                        sSessionKey,
                        sPreferences,
                        iN1N2}, this.onEndUpdateConstituentInterestsExDelegate, this.onUpdateConstituentInterestsExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateEAddress(string sSessionKey, int iAddressNumber, string sEmail, string sPurposes, int iAddressType, bool bInActive, string sStartDate, string sEndDate, string sMonths, string sPrimaryInd, string sMarketInd, int iDefaultSal, string sHtmlInd, int iN1N2) {
            return base.Channel.UpdateEAddress(sSessionKey, iAddressNumber, sEmail, sPurposes, iAddressType, bInActive, sStartDate, sEndDate, sMonths, sPrimaryInd, sMarketInd, iDefaultSal, sHtmlInd, iN1N2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateEAddress(
                    string sSessionKey, 
                    int iAddressNumber, 
                    string sEmail, 
                    string sPurposes, 
                    int iAddressType, 
                    bool bInActive, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sPrimaryInd, 
                    string sMarketInd, 
                    int iDefaultSal, 
                    string sHtmlInd, 
                    int iN1N2, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateEAddress(sSessionKey, iAddressNumber, sEmail, sPurposes, iAddressType, bInActive, sStartDate, sEndDate, sMonths, sPrimaryInd, sMarketInd, iDefaultSal, sHtmlInd, iN1N2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateEAddress(System.IAsyncResult result) {
            return base.Channel.EndUpdateEAddress(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iAddressNumber = ((int)(inValues[1]));
            string sEmail = ((string)(inValues[2]));
            string sPurposes = ((string)(inValues[3]));
            int iAddressType = ((int)(inValues[4]));
            bool bInActive = ((bool)(inValues[5]));
            string sStartDate = ((string)(inValues[6]));
            string sEndDate = ((string)(inValues[7]));
            string sMonths = ((string)(inValues[8]));
            string sPrimaryInd = ((string)(inValues[9]));
            string sMarketInd = ((string)(inValues[10]));
            int iDefaultSal = ((int)(inValues[11]));
            string sHtmlInd = ((string)(inValues[12]));
            int iN1N2 = ((int)(inValues[13]));
            return this.BeginUpdateEAddress(sSessionKey, iAddressNumber, sEmail, sPurposes, iAddressType, bInActive, sStartDate, sEndDate, sMonths, sPrimaryInd, sMarketInd, iDefaultSal, sHtmlInd, iN1N2, callback, asyncState);
        }
        
        private object[] OnEndUpdateEAddress(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateEAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEAddressCompleted(object state) {
            if ((this.UpdateEAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEAddressCompleted(this, new UpdateEAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEAddressAsync(string sSessionKey, int iAddressNumber, string sEmail, string sPurposes, int iAddressType, bool bInActive, string sStartDate, string sEndDate, string sMonths, string sPrimaryInd, string sMarketInd, int iDefaultSal, string sHtmlInd, int iN1N2) {
            this.UpdateEAddressAsync(sSessionKey, iAddressNumber, sEmail, sPurposes, iAddressType, bInActive, sStartDate, sEndDate, sMonths, sPrimaryInd, sMarketInd, iDefaultSal, sHtmlInd, iN1N2, null);
        }
        
        public void UpdateEAddressAsync(string sSessionKey, int iAddressNumber, string sEmail, string sPurposes, int iAddressType, bool bInActive, string sStartDate, string sEndDate, string sMonths, string sPrimaryInd, string sMarketInd, int iDefaultSal, string sHtmlInd, int iN1N2, object userState) {
            if ((this.onBeginUpdateEAddressDelegate == null)) {
                this.onBeginUpdateEAddressDelegate = new BeginOperationDelegate(this.OnBeginUpdateEAddress);
            }
            if ((this.onEndUpdateEAddressDelegate == null)) {
                this.onEndUpdateEAddressDelegate = new EndOperationDelegate(this.OnEndUpdateEAddress);
            }
            if ((this.onUpdateEAddressCompletedDelegate == null)) {
                this.onUpdateEAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEAddressCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEAddressDelegate, new object[] {
                        sSessionKey,
                        iAddressNumber,
                        sEmail,
                        sPurposes,
                        iAddressType,
                        bInActive,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sPrimaryInd,
                        sMarketInd,
                        iDefaultSal,
                        sHtmlInd,
                        iN1N2}, this.onEndUpdateEAddressDelegate, this.onUpdateEAddressCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsByZones(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            return base.Channel.GetSeatsByZones(sSessionKey, sZones, iPerformanceNumber, iPackageNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsByZones(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsByZones(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsByZones(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsByZones(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsByZones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sZones = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iPackageNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsByZones(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsByZones(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsByZones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsByZonesCompleted(object state) {
            if ((this.GetSeatsByZonesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsByZonesCompleted(this, new GetSeatsByZonesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsByZonesAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsByZonesAsync(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, null);
        }
        
        public void GetSeatsByZonesAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.onBeginGetSeatsByZonesDelegate == null)) {
                this.onBeginGetSeatsByZonesDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsByZones);
            }
            if ((this.onEndGetSeatsByZonesDelegate == null)) {
                this.onEndGetSeatsByZonesDelegate = new EndOperationDelegate(this.OnEndGetSeatsByZones);
            }
            if ((this.onGetSeatsByZonesCompletedDelegate == null)) {
                this.onGetSeatsByZonesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZonesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsByZonesDelegate, new object[] {
                        sSessionKey,
                        sZones,
                        iPerformanceNumber,
                        iPackageNumber}, this.onEndGetSeatsByZonesDelegate, this.onGetSeatsByZonesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsByZonesBrief(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            return base.Channel.GetSeatsByZonesBrief(sSessionKey, sZones, iPerformanceNumber, iPackageNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsByZonesBrief(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsByZonesBrief(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsByZonesBrief(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsByZonesBrief(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsByZonesBrief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sZones = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iPackageNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsByZonesBrief(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsByZonesBrief(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsByZonesBrief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsByZonesBriefCompleted(object state) {
            if ((this.GetSeatsByZonesBriefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsByZonesBriefCompleted(this, new GetSeatsByZonesBriefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsByZonesBriefAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsByZonesBriefAsync(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, null);
        }
        
        public void GetSeatsByZonesBriefAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.onBeginGetSeatsByZonesBriefDelegate == null)) {
                this.onBeginGetSeatsByZonesBriefDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsByZonesBrief);
            }
            if ((this.onEndGetSeatsByZonesBriefDelegate == null)) {
                this.onEndGetSeatsByZonesBriefDelegate = new EndOperationDelegate(this.OnEndGetSeatsByZonesBrief);
            }
            if ((this.onGetSeatsByZonesBriefCompletedDelegate == null)) {
                this.onGetSeatsByZonesBriefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZonesBriefCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsByZonesBriefDelegate, new object[] {
                        sSessionKey,
                        sZones,
                        iPerformanceNumber,
                        iPackageNumber}, this.onEndGetSeatsByZonesBriefDelegate, this.onGetSeatsByZonesBriefCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsBySections(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            return base.Channel.GetSeatsBySections(sSessionKey, sSections, iPerformanceNumber, iPackageNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsBySections(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsBySections(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsBySections(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsBySections(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsBySections(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sSections = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iPackageNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsBySections(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsBySections(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsBySections(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsBySectionsCompleted(object state) {
            if ((this.GetSeatsBySectionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsBySectionsCompleted(this, new GetSeatsBySectionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsBySectionsAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsBySectionsAsync(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, null);
        }
        
        public void GetSeatsBySectionsAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.onBeginGetSeatsBySectionsDelegate == null)) {
                this.onBeginGetSeatsBySectionsDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsBySections);
            }
            if ((this.onEndGetSeatsBySectionsDelegate == null)) {
                this.onEndGetSeatsBySectionsDelegate = new EndOperationDelegate(this.OnEndGetSeatsBySections);
            }
            if ((this.onGetSeatsBySectionsCompletedDelegate == null)) {
                this.onGetSeatsBySectionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsBySectionsDelegate, new object[] {
                        sSessionKey,
                        sSections,
                        iPerformanceNumber,
                        iPackageNumber}, this.onEndGetSeatsBySectionsDelegate, this.onGetSeatsBySectionsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsBySectionsBrief(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            return base.Channel.GetSeatsBySectionsBrief(sSessionKey, sSections, iPerformanceNumber, iPackageNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsBySectionsBrief(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsBySectionsBrief(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsBySectionsBrief(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsBySectionsBrief(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsBySectionsBrief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sSections = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iPackageNumber = ((int)(inValues[3]));
            return this.BeginGetSeatsBySectionsBrief(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsBySectionsBrief(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsBySectionsBrief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsBySectionsBriefCompleted(object state) {
            if ((this.GetSeatsBySectionsBriefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsBySectionsBriefCompleted(this, new GetSeatsBySectionsBriefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsBySectionsBriefAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsBySectionsBriefAsync(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, null);
        }
        
        public void GetSeatsBySectionsBriefAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.onBeginGetSeatsBySectionsBriefDelegate == null)) {
                this.onBeginGetSeatsBySectionsBriefDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsBySectionsBrief);
            }
            if ((this.onEndGetSeatsBySectionsBriefDelegate == null)) {
                this.onEndGetSeatsBySectionsBriefDelegate = new EndOperationDelegate(this.OnEndGetSeatsBySectionsBrief);
            }
            if ((this.onGetSeatsBySectionsBriefCompletedDelegate == null)) {
                this.onGetSeatsBySectionsBriefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionsBriefCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsBySectionsBriefDelegate, new object[] {
                        sSessionKey,
                        sSections,
                        iPerformanceNumber,
                        iPackageNumber}, this.onEndGetSeatsBySectionsBriefDelegate, this.onGetSeatsBySectionsBriefCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetZonesPerSection(string sSessionKey, int iPerformanceNumber, string sSections) {
            return base.Channel.GetZonesPerSection(sSessionKey, iPerformanceNumber, sSections);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZonesPerSection(string sSessionKey, int iPerformanceNumber, string sSections, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZonesPerSection(sSessionKey, iPerformanceNumber, sSections, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetZonesPerSection(System.IAsyncResult result) {
            return base.Channel.EndGetZonesPerSection(result);
        }
        
        private System.IAsyncResult OnBeginGetZonesPerSection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPerformanceNumber = ((int)(inValues[1]));
            string sSections = ((string)(inValues[2]));
            return this.BeginGetZonesPerSection(sSessionKey, iPerformanceNumber, sSections, callback, asyncState);
        }
        
        private object[] OnEndGetZonesPerSection(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetZonesPerSection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZonesPerSectionCompleted(object state) {
            if ((this.GetZonesPerSectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZonesPerSectionCompleted(this, new GetZonesPerSectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZonesPerSectionAsync(string sSessionKey, int iPerformanceNumber, string sSections) {
            this.GetZonesPerSectionAsync(sSessionKey, iPerformanceNumber, sSections, null);
        }
        
        public void GetZonesPerSectionAsync(string sSessionKey, int iPerformanceNumber, string sSections, object userState) {
            if ((this.onBeginGetZonesPerSectionDelegate == null)) {
                this.onBeginGetZonesPerSectionDelegate = new BeginOperationDelegate(this.OnBeginGetZonesPerSection);
            }
            if ((this.onEndGetZonesPerSectionDelegate == null)) {
                this.onEndGetZonesPerSectionDelegate = new EndOperationDelegate(this.OnEndGetZonesPerSection);
            }
            if ((this.onGetZonesPerSectionCompletedDelegate == null)) {
                this.onGetZonesPerSectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZonesPerSectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetZonesPerSectionDelegate, new object[] {
                        sSessionKey,
                        iPerformanceNumber,
                        sSections}, this.onEndGetZonesPerSectionDelegate, this.onGetZonesPerSectionCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetScreens(string sSessionKey, int iPerformanceNumber) {
            return base.Channel.GetScreens(sSessionKey, iPerformanceNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetScreens(string sSessionKey, int iPerformanceNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetScreens(sSessionKey, iPerformanceNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetScreens(System.IAsyncResult result) {
            return base.Channel.EndGetScreens(result);
        }
        
        private System.IAsyncResult OnBeginGetScreens(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPerformanceNumber = ((int)(inValues[1]));
            return this.BeginGetScreens(sSessionKey, iPerformanceNumber, callback, asyncState);
        }
        
        private object[] OnEndGetScreens(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetScreens(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetScreensCompleted(object state) {
            if ((this.GetScreensCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScreensCompleted(this, new GetScreensCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetScreensAsync(string sSessionKey, int iPerformanceNumber) {
            this.GetScreensAsync(sSessionKey, iPerformanceNumber, null);
        }
        
        public void GetScreensAsync(string sSessionKey, int iPerformanceNumber, object userState) {
            if ((this.onBeginGetScreensDelegate == null)) {
                this.onBeginGetScreensDelegate = new BeginOperationDelegate(this.OnBeginGetScreens);
            }
            if ((this.onEndGetScreensDelegate == null)) {
                this.onEndGetScreensDelegate = new EndOperationDelegate(this.OnEndGetScreens);
            }
            if ((this.onGetScreensCompletedDelegate == null)) {
                this.onGetScreensCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScreensCompleted);
            }
            base.InvokeAsync(this.onBeginGetScreensDelegate, new object[] {
                        sSessionKey,
                        iPerformanceNumber}, this.onEndGetScreensDelegate, this.onGetScreensCompletedDelegate, userState);
        }
        
        public void DisconnectSessionSeatServer(string sSessionKey) {
            base.Channel.DisconnectSessionSeatServer(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnectSessionSeatServer(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnectSessionSeatServer(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnectSessionSeatServer(System.IAsyncResult result) {
            base.Channel.EndDisconnectSessionSeatServer(result);
        }
        
        private System.IAsyncResult OnBeginDisconnectSessionSeatServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginDisconnectSessionSeatServer(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndDisconnectSessionSeatServer(System.IAsyncResult result) {
            this.EndDisconnectSessionSeatServer(result);
            return null;
        }
        
        private void OnDisconnectSessionSeatServerCompleted(object state) {
            if ((this.DisconnectSessionSeatServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectSessionSeatServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectSessionSeatServerAsync(string sSessionKey) {
            this.DisconnectSessionSeatServerAsync(sSessionKey, null);
        }
        
        public void DisconnectSessionSeatServerAsync(string sSessionKey, object userState) {
            if ((this.onBeginDisconnectSessionSeatServerDelegate == null)) {
                this.onBeginDisconnectSessionSeatServerDelegate = new BeginOperationDelegate(this.OnBeginDisconnectSessionSeatServer);
            }
            if ((this.onEndDisconnectSessionSeatServerDelegate == null)) {
                this.onEndDisconnectSessionSeatServerDelegate = new EndOperationDelegate(this.OnEndDisconnectSessionSeatServer);
            }
            if ((this.onDisconnectSessionSeatServerCompletedDelegate == null)) {
                this.onDisconnectSessionSeatServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectSessionSeatServerCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectSessionSeatServerDelegate, new object[] {
                        sSessionKey}, this.onEndDisconnectSessionSeatServerDelegate, this.onDisconnectSessionSeatServerCompletedDelegate, userState);
        }
        
        public int WebSeatServerConnectionCount() {
            return base.Channel.WebSeatServerConnectionCount();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebSeatServerConnectionCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebSeatServerConnectionCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndWebSeatServerConnectionCount(System.IAsyncResult result) {
            return base.Channel.EndWebSeatServerConnectionCount(result);
        }
        
        private System.IAsyncResult OnBeginWebSeatServerConnectionCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginWebSeatServerConnectionCount(callback, asyncState);
        }
        
        private object[] OnEndWebSeatServerConnectionCount(System.IAsyncResult result) {
            int retVal = this.EndWebSeatServerConnectionCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebSeatServerConnectionCountCompleted(object state) {
            if ((this.WebSeatServerConnectionCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebSeatServerConnectionCountCompleted(this, new WebSeatServerConnectionCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebSeatServerConnectionCountAsync() {
            this.WebSeatServerConnectionCountAsync(null);
        }
        
        public void WebSeatServerConnectionCountAsync(object userState) {
            if ((this.onBeginWebSeatServerConnectionCountDelegate == null)) {
                this.onBeginWebSeatServerConnectionCountDelegate = new BeginOperationDelegate(this.OnBeginWebSeatServerConnectionCount);
            }
            if ((this.onEndWebSeatServerConnectionCountDelegate == null)) {
                this.onEndWebSeatServerConnectionCountDelegate = new EndOperationDelegate(this.OnEndWebSeatServerConnectionCount);
            }
            if ((this.onWebSeatServerConnectionCountCompletedDelegate == null)) {
                this.onWebSeatServerConnectionCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebSeatServerConnectionCountCompleted);
            }
            base.InvokeAsync(this.onBeginWebSeatServerConnectionCountDelegate, null, this.onEndWebSeatServerConnectionCountDelegate, this.onWebSeatServerConnectionCountCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductions(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            return base.Channel.GetProductions(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductions(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductions(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductions(System.IAsyncResult result) {
            return base.Channel.EndGetProductions(result);
        }
        
        private System.IAsyncResult OnBeginGetProductions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sStartDate = ((string)(inValues[0]));
            string sEndDate = ((string)(inValues[1]));
            string sPerfType = ((string)(inValues[2]));
            string sArtist = ((string)(inValues[3]));
            short iVenueID = ((short)(inValues[4]));
            string sKeywords = ((string)(inValues[5]));
            short iModeOfSale = ((short)(inValues[6]));
            int iBusinessUnit = ((int)(inValues[7]));
            return this.BeginGetProductions(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetProductions(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionsCompleted(object state) {
            if ((this.GetProductionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionsCompleted(this, new GetProductionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionsAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionsAsync(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, null);
        }
        
        public void GetProductionsAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.onBeginGetProductionsDelegate == null)) {
                this.onBeginGetProductionsDelegate = new BeginOperationDelegate(this.OnBeginGetProductions);
            }
            if ((this.onEndGetProductionsDelegate == null)) {
                this.onEndGetProductionsDelegate = new EndOperationDelegate(this.OnEndGetProductions);
            }
            if ((this.onGetProductionsCompletedDelegate == null)) {
                this.onGetProductionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductionsDelegate, new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit}, this.onEndGetProductionsDelegate, this.onGetProductionsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionCredits(string sSessionKey, int iProdSeasonNo) {
            return base.Channel.GetProductionCredits(sSessionKey, iProdSeasonNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionCredits(string sSessionKey, int iProdSeasonNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductionCredits(sSessionKey, iProdSeasonNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionCredits(System.IAsyncResult result) {
            return base.Channel.EndGetProductionCredits(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionCredits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iProdSeasonNo = ((int)(inValues[1]));
            return this.BeginGetProductionCredits(sSessionKey, iProdSeasonNo, callback, asyncState);
        }
        
        private object[] OnEndGetProductionCredits(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionCredits(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionCreditsCompleted(object state) {
            if ((this.GetProductionCreditsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionCreditsCompleted(this, new GetProductionCreditsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionCreditsAsync(string sSessionKey, int iProdSeasonNo) {
            this.GetProductionCreditsAsync(sSessionKey, iProdSeasonNo, null);
        }
        
        public void GetProductionCreditsAsync(string sSessionKey, int iProdSeasonNo, object userState) {
            if ((this.onBeginGetProductionCreditsDelegate == null)) {
                this.onBeginGetProductionCreditsDelegate = new BeginOperationDelegate(this.OnBeginGetProductionCredits);
            }
            if ((this.onEndGetProductionCreditsDelegate == null)) {
                this.onEndGetProductionCreditsDelegate = new EndOperationDelegate(this.OnEndGetProductionCredits);
            }
            if ((this.onGetProductionCreditsCompletedDelegate == null)) {
                this.onGetProductionCreditsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionCreditsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductionCreditsDelegate, new object[] {
                        sSessionKey,
                        iProdSeasonNo}, this.onEndGetProductionCreditsDelegate, this.onGetProductionCreditsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.LoginEx(TessituraIntegration.TessituraWebAPI.LoginExRequest request) {
            return base.Channel.LoginEx(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginEx(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, out bool LoginExResult) {
            TessituraIntegration.TessituraWebAPI.LoginExRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginExRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            inValue.sEmail = sEmail;
            inValue.sPhone = sPhone;
            inValue.sPostalCode = sPostalCode;
            inValue.iCustomerNo = iCustomerNo;
            inValue.iN1N2 = iN1N2;
            TessituraIntegration.TessituraWebAPI.LoginExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).LoginEx(inValue);
            LoginExResult = retVal.LoginExResult;
            return retVal.LoginAttemptHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginLoginEx(TessituraIntegration.TessituraWebAPI.LoginExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginEx(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.LoginExRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginExRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            inValue.sEmail = sEmail;
            inValue.sPhone = sPhone;
            inValue.sPostalCode = sPostalCode;
            inValue.iCustomerNo = iCustomerNo;
            inValue.iN1N2 = iN1N2;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginLoginEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndLoginEx(System.IAsyncResult result) {
            return base.Channel.EndLoginEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader EndLoginEx(System.IAsyncResult result, out bool LoginExResult) {
            TessituraIntegration.TessituraWebAPI.LoginExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndLoginEx(result);
            LoginExResult = retVal.LoginExResult;
            return retVal.LoginAttemptHeader;
        }
        
        private System.IAsyncResult OnBeginLoginEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            int iPromotionCode = ((int)(inValues[4]));
            string sEmail = ((string)(inValues[5]));
            string sPhone = ((string)(inValues[6]));
            string sPostalCode = ((string)(inValues[7]));
            int iCustomerNo = ((int)(inValues[8]));
            int iN1N2 = ((int)(inValues[9]));
            return this.BeginLoginEx(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, callback, asyncState);
        }
        
        private object[] OnEndLoginEx(System.IAsyncResult result) {
            bool LoginExResult = this.GetDefaultValueForInitialization<bool>();
            TessituraIntegration.TessituraWebAPI.LoginAttemptHeader retVal = this.EndLoginEx(result, out LoginExResult);
            return new object[] {
                    LoginExResult,
                    retVal};
        }
        
        private void OnLoginExCompleted(object state) {
            if ((this.LoginExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginExCompleted(this, new LoginExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginExAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2) {
            this.LoginExAsync(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, null);
        }
        
        public void LoginExAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, object userState) {
            if ((this.onBeginLoginExDelegate == null)) {
                this.onBeginLoginExDelegate = new BeginOperationDelegate(this.OnBeginLoginEx);
            }
            if ((this.onEndLoginExDelegate == null)) {
                this.onEndLoginExDelegate = new EndOperationDelegate(this.OnEndLoginEx);
            }
            if ((this.onLoginExCompletedDelegate == null)) {
                this.onLoginExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginExCompleted);
            }
            base.InvokeAsync(this.onBeginLoginExDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode,
                        sEmail,
                        sPhone,
                        sPostalCode,
                        iCustomerNo,
                        iN1N2}, this.onEndLoginExDelegate, this.onLoginExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetTicketHistory(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate) {
            return base.Channel.GetTicketHistory(sSessionKey, iSeasonNo, iProdSeasonNo, iPerfNo, sPerfStartDate, sPerfEndDate, sOrderStartDate, sOrderEndDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTicketHistory(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTicketHistory(sSessionKey, iSeasonNo, iProdSeasonNo, iPerfNo, sPerfStartDate, sPerfEndDate, sOrderStartDate, sOrderEndDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetTicketHistory(System.IAsyncResult result) {
            return base.Channel.EndGetTicketHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetTicketHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iSeasonNo = ((int)(inValues[1]));
            int iProdSeasonNo = ((int)(inValues[2]));
            int iPerfNo = ((int)(inValues[3]));
            string sPerfStartDate = ((string)(inValues[4]));
            string sPerfEndDate = ((string)(inValues[5]));
            string sOrderStartDate = ((string)(inValues[6]));
            string sOrderEndDate = ((string)(inValues[7]));
            return this.BeginGetTicketHistory(sSessionKey, iSeasonNo, iProdSeasonNo, iPerfNo, sPerfStartDate, sPerfEndDate, sOrderStartDate, sOrderEndDate, callback, asyncState);
        }
        
        private object[] OnEndGetTicketHistory(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetTicketHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTicketHistoryCompleted(object state) {
            if ((this.GetTicketHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTicketHistoryCompleted(this, new GetTicketHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTicketHistoryAsync(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate) {
            this.GetTicketHistoryAsync(sSessionKey, iSeasonNo, iProdSeasonNo, iPerfNo, sPerfStartDate, sPerfEndDate, sOrderStartDate, sOrderEndDate, null);
        }
        
        public void GetTicketHistoryAsync(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate, object userState) {
            if ((this.onBeginGetTicketHistoryDelegate == null)) {
                this.onBeginGetTicketHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetTicketHistory);
            }
            if ((this.onEndGetTicketHistoryDelegate == null)) {
                this.onEndGetTicketHistoryDelegate = new EndOperationDelegate(this.OnEndGetTicketHistory);
            }
            if ((this.onGetTicketHistoryCompletedDelegate == null)) {
                this.onGetTicketHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTicketHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetTicketHistoryDelegate, new object[] {
                        sSessionKey,
                        iSeasonNo,
                        iProdSeasonNo,
                        iPerfNo,
                        sPerfStartDate,
                        sPerfEndDate,
                        sOrderStartDate,
                        sOrderEndDate}, this.onEndGetTicketHistoryDelegate, this.onGetTicketHistoryCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSubscriptionHistory(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate) {
            return base.Channel.GetSubscriptionHistory(sSessionKey, iSeasonNo, iPackageNo, iPackageType, sOrderStartDate, sOrderEndDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSubscriptionHistory(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSubscriptionHistory(sSessionKey, iSeasonNo, iPackageNo, iPackageType, sOrderStartDate, sOrderEndDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSubscriptionHistory(System.IAsyncResult result) {
            return base.Channel.EndGetSubscriptionHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetSubscriptionHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iSeasonNo = ((int)(inValues[1]));
            int iPackageNo = ((int)(inValues[2]));
            int iPackageType = ((int)(inValues[3]));
            string sOrderStartDate = ((string)(inValues[4]));
            string sOrderEndDate = ((string)(inValues[5]));
            return this.BeginGetSubscriptionHistory(sSessionKey, iSeasonNo, iPackageNo, iPackageType, sOrderStartDate, sOrderEndDate, callback, asyncState);
        }
        
        private object[] OnEndGetSubscriptionHistory(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSubscriptionHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSubscriptionHistoryCompleted(object state) {
            if ((this.GetSubscriptionHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSubscriptionHistoryCompleted(this, new GetSubscriptionHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSubscriptionHistoryAsync(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate) {
            this.GetSubscriptionHistoryAsync(sSessionKey, iSeasonNo, iPackageNo, iPackageType, sOrderStartDate, sOrderEndDate, null);
        }
        
        public void GetSubscriptionHistoryAsync(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate, object userState) {
            if ((this.onBeginGetSubscriptionHistoryDelegate == null)) {
                this.onBeginGetSubscriptionHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetSubscriptionHistory);
            }
            if ((this.onEndGetSubscriptionHistoryDelegate == null)) {
                this.onEndGetSubscriptionHistoryDelegate = new EndOperationDelegate(this.OnEndGetSubscriptionHistory);
            }
            if ((this.onGetSubscriptionHistoryCompletedDelegate == null)) {
                this.onGetSubscriptionHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSubscriptionHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetSubscriptionHistoryDelegate, new object[] {
                        sSessionKey,
                        iSeasonNo,
                        iPackageNo,
                        iPackageType,
                        sOrderStartDate,
                        sOrderEndDate}, this.onEndGetSubscriptionHistoryDelegate, this.onGetSubscriptionHistoryCompletedDelegate, userState);
        }
        
        public void AddOrderCommentsEx2(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo) {
            base.Channel.AddOrderCommentsEx2(SessionKey, Comment, LineItemID, LineItemType, CustomerNo, CategoryNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOrderCommentsEx2(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrderCommentsEx2(SessionKey, Comment, LineItemID, LineItemType, CustomerNo, CategoryNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddOrderCommentsEx2(System.IAsyncResult result) {
            base.Channel.EndAddOrderCommentsEx2(result);
        }
        
        private System.IAsyncResult OnBeginAddOrderCommentsEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string Comment = ((string)(inValues[1]));
            int LineItemID = ((int)(inValues[2]));
            char LineItemType = ((char)(inValues[3]));
            int CustomerNo = ((int)(inValues[4]));
            int CategoryNo = ((int)(inValues[5]));
            return this.BeginAddOrderCommentsEx2(SessionKey, Comment, LineItemID, LineItemType, CustomerNo, CategoryNo, callback, asyncState);
        }
        
        private object[] OnEndAddOrderCommentsEx2(System.IAsyncResult result) {
            this.EndAddOrderCommentsEx2(result);
            return null;
        }
        
        private void OnAddOrderCommentsEx2Completed(object state) {
            if ((this.AddOrderCommentsEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrderCommentsEx2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrderCommentsEx2Async(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo) {
            this.AddOrderCommentsEx2Async(SessionKey, Comment, LineItemID, LineItemType, CustomerNo, CategoryNo, null);
        }
        
        public void AddOrderCommentsEx2Async(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo, object userState) {
            if ((this.onBeginAddOrderCommentsEx2Delegate == null)) {
                this.onBeginAddOrderCommentsEx2Delegate = new BeginOperationDelegate(this.OnBeginAddOrderCommentsEx2);
            }
            if ((this.onEndAddOrderCommentsEx2Delegate == null)) {
                this.onEndAddOrderCommentsEx2Delegate = new EndOperationDelegate(this.OnEndAddOrderCommentsEx2);
            }
            if ((this.onAddOrderCommentsEx2CompletedDelegate == null)) {
                this.onAddOrderCommentsEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrderCommentsEx2Completed);
            }
            base.InvokeAsync(this.onBeginAddOrderCommentsEx2Delegate, new object[] {
                        SessionKey,
                        Comment,
                        LineItemID,
                        LineItemType,
                        CustomerNo,
                        CategoryNo}, this.onEndAddOrderCommentsEx2Delegate, this.onAddOrderCommentsEx2CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPromoCodeEx(string SessionKey, string PromotionCodeString, int PromotionCode) {
            return base.Channel.GetPromoCodeEx(SessionKey, PromotionCodeString, PromotionCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPromoCodeEx(string SessionKey, string PromotionCodeString, int PromotionCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPromoCodeEx(SessionKey, PromotionCodeString, PromotionCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPromoCodeEx(System.IAsyncResult result) {
            return base.Channel.EndGetPromoCodeEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPromoCodeEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string PromotionCodeString = ((string)(inValues[1]));
            int PromotionCode = ((int)(inValues[2]));
            return this.BeginGetPromoCodeEx(SessionKey, PromotionCodeString, PromotionCode, callback, asyncState);
        }
        
        private object[] OnEndGetPromoCodeEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPromoCodeEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPromoCodeExCompleted(object state) {
            if ((this.GetPromoCodeExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPromoCodeExCompleted(this, new GetPromoCodeExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPromoCodeExAsync(string SessionKey, string PromotionCodeString, int PromotionCode) {
            this.GetPromoCodeExAsync(SessionKey, PromotionCodeString, PromotionCode, null);
        }
        
        public void GetPromoCodeExAsync(string SessionKey, string PromotionCodeString, int PromotionCode, object userState) {
            if ((this.onBeginGetPromoCodeExDelegate == null)) {
                this.onBeginGetPromoCodeExDelegate = new BeginOperationDelegate(this.OnBeginGetPromoCodeEx);
            }
            if ((this.onEndGetPromoCodeExDelegate == null)) {
                this.onEndGetPromoCodeExDelegate = new EndOperationDelegate(this.OnEndGetPromoCodeEx);
            }
            if ((this.onGetPromoCodeExCompletedDelegate == null)) {
                this.onGetPromoCodeExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPromoCodeExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPromoCodeExDelegate, new object[] {
                        SessionKey,
                        PromotionCodeString,
                        PromotionCode}, this.onEndGetPromoCodeExDelegate, this.onGetPromoCodeExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionsEx(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            return base.Channel.GetProductionsEx(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionsEx(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductionsEx(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionsEx(System.IAsyncResult result) {
            return base.Channel.EndGetProductionsEx(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            string sPerfType = ((string)(inValues[3]));
            string sArtist = ((string)(inValues[4]));
            short iVenueID = ((short)(inValues[5]));
            string sKeywords = ((string)(inValues[6]));
            short iModeOfSale = ((short)(inValues[7]));
            int iBusinessUnit = ((int)(inValues[8]));
            return this.BeginGetProductionsEx(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetProductionsEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionsEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionsExCompleted(object state) {
            if ((this.GetProductionsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionsExCompleted(this, new GetProductionsExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionsExAsync(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionsExAsync(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, null);
        }
        
        public void GetProductionsExAsync(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.onBeginGetProductionsExDelegate == null)) {
                this.onBeginGetProductionsExDelegate = new BeginOperationDelegate(this.OnBeginGetProductionsEx);
            }
            if ((this.onEndGetProductionsExDelegate == null)) {
                this.onEndGetProductionsExDelegate = new EndOperationDelegate(this.OnEndGetProductionsEx);
            }
            if ((this.onGetProductionsExCompletedDelegate == null)) {
                this.onGetProductionsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionsExCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductionsExDelegate, new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit}, this.onEndGetProductionsExDelegate, this.onGetProductionsExCompletedDelegate, userState);
        }
        
        public string GetAPIDiagnostics() {
            return base.Channel.GetAPIDiagnostics();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAPIDiagnostics(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAPIDiagnostics(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAPIDiagnostics(System.IAsyncResult result) {
            return base.Channel.EndGetAPIDiagnostics(result);
        }
        
        private System.IAsyncResult OnBeginGetAPIDiagnostics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAPIDiagnostics(callback, asyncState);
        }
        
        private object[] OnEndGetAPIDiagnostics(System.IAsyncResult result) {
            string retVal = this.EndGetAPIDiagnostics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAPIDiagnosticsCompleted(object state) {
            if ((this.GetAPIDiagnosticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAPIDiagnosticsCompleted(this, new GetAPIDiagnosticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAPIDiagnosticsAsync() {
            this.GetAPIDiagnosticsAsync(null);
        }
        
        public void GetAPIDiagnosticsAsync(object userState) {
            if ((this.onBeginGetAPIDiagnosticsDelegate == null)) {
                this.onBeginGetAPIDiagnosticsDelegate = new BeginOperationDelegate(this.OnBeginGetAPIDiagnostics);
            }
            if ((this.onEndGetAPIDiagnosticsDelegate == null)) {
                this.onEndGetAPIDiagnosticsDelegate = new EndOperationDelegate(this.OnEndGetAPIDiagnostics);
            }
            if ((this.onGetAPIDiagnosticsCompletedDelegate == null)) {
                this.onGetAPIDiagnosticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAPIDiagnosticsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAPIDiagnosticsDelegate, null, this.onEndGetAPIDiagnosticsDelegate, this.onGetAPIDiagnosticsCompletedDelegate, userState);
        }
        
        public bool ValidateTessituraUser(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            return base.Channel.ValidateTessituraUser(sSessionKey, sTessituraUsername, sTessituraPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateTessituraUser(string sSessionKey, string sTessituraUsername, string sTessituraPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateTessituraUser(sSessionKey, sTessituraUsername, sTessituraPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndValidateTessituraUser(System.IAsyncResult result) {
            return base.Channel.EndValidateTessituraUser(result);
        }
        
        private System.IAsyncResult OnBeginValidateTessituraUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sTessituraUsername = ((string)(inValues[1]));
            string sTessituraPassword = ((string)(inValues[2]));
            return this.BeginValidateTessituraUser(sSessionKey, sTessituraUsername, sTessituraPassword, callback, asyncState);
        }
        
        private object[] OnEndValidateTessituraUser(System.IAsyncResult result) {
            bool retVal = this.EndValidateTessituraUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateTessituraUserCompleted(object state) {
            if ((this.ValidateTessituraUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateTessituraUserCompleted(this, new ValidateTessituraUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateTessituraUserAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            this.ValidateTessituraUserAsync(sSessionKey, sTessituraUsername, sTessituraPassword, null);
        }
        
        public void ValidateTessituraUserAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword, object userState) {
            if ((this.onBeginValidateTessituraUserDelegate == null)) {
                this.onBeginValidateTessituraUserDelegate = new BeginOperationDelegate(this.OnBeginValidateTessituraUser);
            }
            if ((this.onEndValidateTessituraUserDelegate == null)) {
                this.onEndValidateTessituraUserDelegate = new EndOperationDelegate(this.OnEndValidateTessituraUser);
            }
            if ((this.onValidateTessituraUserCompletedDelegate == null)) {
                this.onValidateTessituraUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateTessituraUserCompleted);
            }
            base.InvokeAsync(this.onBeginValidateTessituraUserDelegate, new object[] {
                        sSessionKey,
                        sTessituraUsername,
                        sTessituraPassword}, this.onEndValidateTessituraUserDelegate, this.onValidateTessituraUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx2Response TessituraIntegration.TessituraWebAPI.TessituraSoap.CheckoutEx2(TessituraIntegration.TessituraWebAPI.CheckoutEx2Request request) {
            return base.Channel.CheckoutEx2(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutEx2(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx2Request inValue = new TessituraIntegration.TessituraWebAPI.CheckoutEx2Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            inValue.bAuthorize = bAuthorize;
            inValue.sAuthorizationCode = sAuthorizationCode;
            inValue.sEciIndType = sEciIndType;
            inValue.sSecureTransID = sSecureTransID;
            inValue.sSecureTransSecurity = sSecureTransSecurity;
            inValue.sVerAuthValue = sVerAuthValue;
            inValue.sVerCertSerialCardholder = sVerCertSerialCardholder;
            inValue.sVerCertSerialCardAcceptor = sVerCertSerialCardAcceptor;
            inValue.sVerHashResult = sVerHashResult;
            TessituraIntegration.TessituraWebAPI.CheckoutEx2Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).CheckoutEx2(inValue);
            return retVal.CheckoutStatusHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginCheckoutEx2(TessituraIntegration.TessituraWebAPI.CheckoutEx2Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckoutEx2(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckoutEx2(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx2Request inValue = new TessituraIntegration.TessituraWebAPI.CheckoutEx2Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            inValue.bAuthorize = bAuthorize;
            inValue.sAuthorizationCode = sAuthorizationCode;
            inValue.sEciIndType = sEciIndType;
            inValue.sSecureTransID = sSecureTransID;
            inValue.sSecureTransSecurity = sSecureTransSecurity;
            inValue.sVerAuthValue = sVerAuthValue;
            inValue.sVerCertSerialCardholder = sVerCertSerialCardholder;
            inValue.sVerCertSerialCardAcceptor = sVerCertSerialCardAcceptor;
            inValue.sVerHashResult = sVerHashResult;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginCheckoutEx2(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx2Response TessituraIntegration.TessituraWebAPI.TessituraSoap.EndCheckoutEx2(System.IAsyncResult result) {
            return base.Channel.EndCheckoutEx2(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader EndCheckoutEx2(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx2Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndCheckoutEx2(result);
            return retVal.CheckoutStatusHeader;
        }
        
        private System.IAsyncResult OnBeginCheckoutEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sCCOwner = ((string)(inValues[1]));
            string sCCNumber = ((string)(inValues[2]));
            int iCCType = ((int)(inValues[3]));
            int iCCMonth = ((int)(inValues[4]));
            int iCCYear = ((int)(inValues[5]));
            decimal dAmount = ((decimal)(inValues[6]));
            bool bAllowUnderPayment = ((bool)(inValues[7]));
            string sCardAuthenticationCode = ((string)(inValues[8]));
            int iCCIssueNumber = ((int)(inValues[9]));
            int iCCStartMonth = ((int)(inValues[10]));
            int iCCStartYear = ((int)(inValues[11]));
            bool bAuthorize = ((bool)(inValues[12]));
            string sAuthorizationCode = ((string)(inValues[13]));
            string sEciIndType = ((string)(inValues[14]));
            string sSecureTransID = ((string)(inValues[15]));
            string sSecureTransSecurity = ((string)(inValues[16]));
            string sVerAuthValue = ((string)(inValues[17]));
            string sVerCertSerialCardholder = ((string)(inValues[18]));
            string sVerCertSerialCardAcceptor = ((string)(inValues[19]));
            string sVerHashResult = ((string)(inValues[20]));
            return this.BeginCheckoutEx2(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, sEciIndType, sSecureTransID, sSecureTransSecurity, sVerAuthValue, sVerCertSerialCardholder, sVerCertSerialCardAcceptor, sVerHashResult, callback, asyncState);
        }
        
        private object[] OnEndCheckoutEx2(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader retVal = this.EndCheckoutEx2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckoutEx2Completed(object state) {
            if ((this.CheckoutEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckoutEx2Completed(this, new CheckoutEx2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckoutEx2Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult) {
            this.CheckoutEx2Async(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, sEciIndType, sSecureTransID, sSecureTransSecurity, sVerAuthValue, sVerCertSerialCardholder, sVerCertSerialCardAcceptor, sVerHashResult, null);
        }
        
        public void CheckoutEx2Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult, 
                    object userState) {
            if ((this.onBeginCheckoutEx2Delegate == null)) {
                this.onBeginCheckoutEx2Delegate = new BeginOperationDelegate(this.OnBeginCheckoutEx2);
            }
            if ((this.onEndCheckoutEx2Delegate == null)) {
                this.onEndCheckoutEx2Delegate = new EndOperationDelegate(this.OnEndCheckoutEx2);
            }
            if ((this.onCheckoutEx2CompletedDelegate == null)) {
                this.onCheckoutEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckoutEx2Completed);
            }
            base.InvokeAsync(this.onBeginCheckoutEx2Delegate, new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        bAuthorize,
                        sAuthorizationCode,
                        sEciIndType,
                        sSecureTransID,
                        sSecureTransSecurity,
                        sVerAuthValue,
                        sVerCertSerialCardholder,
                        sVerCertSerialCardAcceptor,
                        sVerHashResult}, this.onEndCheckoutEx2Delegate, this.onCheckoutEx2CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformanceDetailSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale) {
            return base.Channel.GetPerformanceDetailSYOSDataSet(SessionKey, iPerf_no, iModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailSYOSDataSet(SessionKey, iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformanceDetailSYOSDataSet(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailSYOSDataSet(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailSYOSDataSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            short iModeOfSale = ((short)(inValues[2]));
            return this.BeginGetPerformanceDetailSYOSDataSet(SessionKey, iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailSYOSDataSet(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformanceDetailSYOSDataSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailSYOSDataSetCompleted(object state) {
            if ((this.GetPerformanceDetailSYOSDataSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailSYOSDataSetCompleted(this, new GetPerformanceDetailSYOSDataSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailSYOSDataSetAsync(SessionKey, iPerf_no, iModeOfSale, null);
        }
        
        public void GetPerformanceDetailSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale, object userState) {
            if ((this.onBeginGetPerformanceDetailSYOSDataSetDelegate == null)) {
                this.onBeginGetPerformanceDetailSYOSDataSetDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailSYOSDataSet);
            }
            if ((this.onEndGetPerformanceDetailSYOSDataSetDelegate == null)) {
                this.onEndGetPerformanceDetailSYOSDataSetDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailSYOSDataSet);
            }
            if ((this.onGetPerformanceDetailSYOSDataSetCompletedDelegate == null)) {
                this.onGetPerformanceDetailSYOSDataSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailSYOSDataSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailSYOSDataSetDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale}, this.onEndGetPerformanceDetailSYOSDataSetDelegate, this.onGetPerformanceDetailSYOSDataSetCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdatePhone(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd) {
            return base.Channel.UpdatePhone(sSessionKey, iPhoneNo, iAddressNo, sPhoneNumber, iPhoneType, sDayInd, sTeleInd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePhone(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePhone(sSessionKey, iPhoneNo, iAddressNo, sPhoneNumber, iPhoneType, sDayInd, sTeleInd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdatePhone(System.IAsyncResult result) {
            return base.Channel.EndUpdatePhone(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePhone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPhoneNo = ((int)(inValues[1]));
            int iAddressNo = ((int)(inValues[2]));
            string sPhoneNumber = ((string)(inValues[3]));
            int iPhoneType = ((int)(inValues[4]));
            string sDayInd = ((string)(inValues[5]));
            string sTeleInd = ((string)(inValues[6]));
            return this.BeginUpdatePhone(sSessionKey, iPhoneNo, iAddressNo, sPhoneNumber, iPhoneType, sDayInd, sTeleInd, callback, asyncState);
        }
        
        private object[] OnEndUpdatePhone(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdatePhone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePhoneCompleted(object state) {
            if ((this.UpdatePhoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePhoneCompleted(this, new UpdatePhoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePhoneAsync(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd) {
            this.UpdatePhoneAsync(sSessionKey, iPhoneNo, iAddressNo, sPhoneNumber, iPhoneType, sDayInd, sTeleInd, null);
        }
        
        public void UpdatePhoneAsync(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd, object userState) {
            if ((this.onBeginUpdatePhoneDelegate == null)) {
                this.onBeginUpdatePhoneDelegate = new BeginOperationDelegate(this.OnBeginUpdatePhone);
            }
            if ((this.onEndUpdatePhoneDelegate == null)) {
                this.onEndUpdatePhoneDelegate = new EndOperationDelegate(this.OnEndUpdatePhone);
            }
            if ((this.onUpdatePhoneCompletedDelegate == null)) {
                this.onUpdatePhoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePhoneCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePhoneDelegate, new object[] {
                        sSessionKey,
                        iPhoneNo,
                        iAddressNo,
                        sPhoneNumber,
                        iPhoneType,
                        sDayInd,
                        sTeleInd}, this.onEndUpdatePhoneDelegate, this.onUpdatePhoneCompletedDelegate, userState);
        }
        
        public void RemovePhone(string sSessionKey, int iPhoneNo) {
            base.Channel.RemovePhone(sSessionKey, iPhoneNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemovePhone(string sSessionKey, int iPhoneNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemovePhone(sSessionKey, iPhoneNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemovePhone(System.IAsyncResult result) {
            base.Channel.EndRemovePhone(result);
        }
        
        private System.IAsyncResult OnBeginRemovePhone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPhoneNo = ((int)(inValues[1]));
            return this.BeginRemovePhone(sSessionKey, iPhoneNo, callback, asyncState);
        }
        
        private object[] OnEndRemovePhone(System.IAsyncResult result) {
            this.EndRemovePhone(result);
            return null;
        }
        
        private void OnRemovePhoneCompleted(object state) {
            if ((this.RemovePhoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemovePhoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemovePhoneAsync(string sSessionKey, int iPhoneNo) {
            this.RemovePhoneAsync(sSessionKey, iPhoneNo, null);
        }
        
        public void RemovePhoneAsync(string sSessionKey, int iPhoneNo, object userState) {
            if ((this.onBeginRemovePhoneDelegate == null)) {
                this.onBeginRemovePhoneDelegate = new BeginOperationDelegate(this.OnBeginRemovePhone);
            }
            if ((this.onEndRemovePhoneDelegate == null)) {
                this.onEndRemovePhoneDelegate = new EndOperationDelegate(this.OnEndRemovePhone);
            }
            if ((this.onRemovePhoneCompletedDelegate == null)) {
                this.onRemovePhoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemovePhoneCompleted);
            }
            base.InvokeAsync(this.onBeginRemovePhoneDelegate, new object[] {
                        sSessionKey,
                        iPhoneNo}, this.onEndRemovePhoneDelegate, this.onRemovePhoneCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateSpecialActivity(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId) {
            return base.Channel.UpdateSpecialActivity(sSessionKey, iSpecialActivityNo, dtDate, sSolicitor, sPerformance, iStatusID, sNotes, iNumberOfAttendees, iSpecialActivityTypeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSpecialActivity(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSpecialActivity(sSessionKey, iSpecialActivityNo, dtDate, sSolicitor, sPerformance, iStatusID, sNotes, iNumberOfAttendees, iSpecialActivityTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateSpecialActivity(System.IAsyncResult result) {
            return base.Channel.EndUpdateSpecialActivity(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSpecialActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iSpecialActivityNo = ((int)(inValues[1]));
            System.DateTime dtDate = ((System.DateTime)(inValues[2]));
            string sSolicitor = ((string)(inValues[3]));
            string sPerformance = ((string)(inValues[4]));
            int iStatusID = ((int)(inValues[5]));
            string sNotes = ((string)(inValues[6]));
            int iNumberOfAttendees = ((int)(inValues[7]));
            int iSpecialActivityTypeId = ((int)(inValues[8]));
            return this.BeginUpdateSpecialActivity(sSessionKey, iSpecialActivityNo, dtDate, sSolicitor, sPerformance, iStatusID, sNotes, iNumberOfAttendees, iSpecialActivityTypeId, callback, asyncState);
        }
        
        private object[] OnEndUpdateSpecialActivity(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateSpecialActivity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSpecialActivityCompleted(object state) {
            if ((this.UpdateSpecialActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSpecialActivityCompleted(this, new UpdateSpecialActivityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSpecialActivityAsync(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId) {
            this.UpdateSpecialActivityAsync(sSessionKey, iSpecialActivityNo, dtDate, sSolicitor, sPerformance, iStatusID, sNotes, iNumberOfAttendees, iSpecialActivityTypeId, null);
        }
        
        public void UpdateSpecialActivityAsync(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId, object userState) {
            if ((this.onBeginUpdateSpecialActivityDelegate == null)) {
                this.onBeginUpdateSpecialActivityDelegate = new BeginOperationDelegate(this.OnBeginUpdateSpecialActivity);
            }
            if ((this.onEndUpdateSpecialActivityDelegate == null)) {
                this.onEndUpdateSpecialActivityDelegate = new EndOperationDelegate(this.OnEndUpdateSpecialActivity);
            }
            if ((this.onUpdateSpecialActivityCompletedDelegate == null)) {
                this.onUpdateSpecialActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSpecialActivityCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSpecialActivityDelegate, new object[] {
                        sSessionKey,
                        iSpecialActivityNo,
                        dtDate,
                        sSolicitor,
                        sPerformance,
                        iStatusID,
                        sNotes,
                        iNumberOfAttendees,
                        iSpecialActivityTypeId}, this.onEndUpdateSpecialActivityDelegate, this.onUpdateSpecialActivityCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSpecialActivities(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId) {
            return base.Channel.GetSpecialActivities(sSessionKey, sStartDate, sEndDate, iStatusId, iSpecialActivityTypeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSpecialActivities(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSpecialActivities(sSessionKey, sStartDate, sEndDate, iStatusId, iSpecialActivityTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSpecialActivities(System.IAsyncResult result) {
            return base.Channel.EndGetSpecialActivities(result);
        }
        
        private System.IAsyncResult OnBeginGetSpecialActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            int iStatusId = ((int)(inValues[3]));
            int iSpecialActivityTypeId = ((int)(inValues[4]));
            return this.BeginGetSpecialActivities(sSessionKey, sStartDate, sEndDate, iStatusId, iSpecialActivityTypeId, callback, asyncState);
        }
        
        private object[] OnEndGetSpecialActivities(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSpecialActivities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSpecialActivitiesCompleted(object state) {
            if ((this.GetSpecialActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSpecialActivitiesCompleted(this, new GetSpecialActivitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSpecialActivitiesAsync(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId) {
            this.GetSpecialActivitiesAsync(sSessionKey, sStartDate, sEndDate, iStatusId, iSpecialActivityTypeId, null);
        }
        
        public void GetSpecialActivitiesAsync(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId, object userState) {
            if ((this.onBeginGetSpecialActivitiesDelegate == null)) {
                this.onBeginGetSpecialActivitiesDelegate = new BeginOperationDelegate(this.OnBeginGetSpecialActivities);
            }
            if ((this.onEndGetSpecialActivitiesDelegate == null)) {
                this.onEndGetSpecialActivitiesDelegate = new EndOperationDelegate(this.OnEndGetSpecialActivities);
            }
            if ((this.onGetSpecialActivitiesCompletedDelegate == null)) {
                this.onGetSpecialActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSpecialActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSpecialActivitiesDelegate, new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        iStatusId,
                        iSpecialActivityTypeId}, this.onEndGetSpecialActivitiesDelegate, this.onGetSpecialActivitiesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateConstituency(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action) {
            return base.Channel.UpdateConstituency(sSessionKey, iConstituencyNo, iN1N2Ind, action);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateConstituency(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateConstituency(sSessionKey, iConstituencyNo, iN1N2Ind, action, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateConstituency(System.IAsyncResult result) {
            return base.Channel.EndUpdateConstituency(result);
        }
        
        private System.IAsyncResult OnBeginUpdateConstituency(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iConstituencyNo = ((int)(inValues[1]));
            int iN1N2Ind = ((int)(inValues[2]));
            char action = ((char)(inValues[3]));
            return this.BeginUpdateConstituency(sSessionKey, iConstituencyNo, iN1N2Ind, action, callback, asyncState);
        }
        
        private object[] OnEndUpdateConstituency(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateConstituency(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateConstituencyCompleted(object state) {
            if ((this.UpdateConstituencyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateConstituencyCompleted(this, new UpdateConstituencyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateConstituencyAsync(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action) {
            this.UpdateConstituencyAsync(sSessionKey, iConstituencyNo, iN1N2Ind, action, null);
        }
        
        public void UpdateConstituencyAsync(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action, object userState) {
            if ((this.onBeginUpdateConstituencyDelegate == null)) {
                this.onBeginUpdateConstituencyDelegate = new BeginOperationDelegate(this.OnBeginUpdateConstituency);
            }
            if ((this.onEndUpdateConstituencyDelegate == null)) {
                this.onEndUpdateConstituencyDelegate = new EndOperationDelegate(this.OnEndUpdateConstituency);
            }
            if ((this.onUpdateConstituencyCompletedDelegate == null)) {
                this.onUpdateConstituencyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateConstituencyCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateConstituencyDelegate, new object[] {
                        sSessionKey,
                        iConstituencyNo,
                        iN1N2Ind,
                        action}, this.onEndUpdateConstituencyDelegate, this.onUpdateConstituencyCompletedDelegate, userState);
        }
        
        public void RemoveConstituency(string sSessionKey, int iConstituencyNo) {
            base.Channel.RemoveConstituency(sSessionKey, iConstituencyNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveConstituency(string sSessionKey, int iConstituencyNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveConstituency(sSessionKey, iConstituencyNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveConstituency(System.IAsyncResult result) {
            base.Channel.EndRemoveConstituency(result);
        }
        
        private System.IAsyncResult OnBeginRemoveConstituency(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iConstituencyNo = ((int)(inValues[1]));
            return this.BeginRemoveConstituency(sSessionKey, iConstituencyNo, callback, asyncState);
        }
        
        private object[] OnEndRemoveConstituency(System.IAsyncResult result) {
            this.EndRemoveConstituency(result);
            return null;
        }
        
        private void OnRemoveConstituencyCompleted(object state) {
            if ((this.RemoveConstituencyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveConstituencyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveConstituencyAsync(string sSessionKey, int iConstituencyNo) {
            this.RemoveConstituencyAsync(sSessionKey, iConstituencyNo, null);
        }
        
        public void RemoveConstituencyAsync(string sSessionKey, int iConstituencyNo, object userState) {
            if ((this.onBeginRemoveConstituencyDelegate == null)) {
                this.onBeginRemoveConstituencyDelegate = new BeginOperationDelegate(this.OnBeginRemoveConstituency);
            }
            if ((this.onEndRemoveConstituencyDelegate == null)) {
                this.onEndRemoveConstituencyDelegate = new EndOperationDelegate(this.OnEndRemoveConstituency);
            }
            if ((this.onRemoveConstituencyCompletedDelegate == null)) {
                this.onRemoveConstituencyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveConstituencyCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveConstituencyDelegate, new object[] {
                        sSessionKey,
                        iConstituencyNo}, this.onEndRemoveConstituencyDelegate, this.onRemoveConstituencyCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetHoldCodes(string sSessionKey, string sTessUID, string sTessPWD) {
            return base.Channel.GetHoldCodes(sSessionKey, sTessUID, sTessPWD);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHoldCodes(string sSessionKey, string sTessUID, string sTessPWD, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHoldCodes(sSessionKey, sTessUID, sTessPWD, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetHoldCodes(System.IAsyncResult result) {
            return base.Channel.EndGetHoldCodes(result);
        }
        
        private System.IAsyncResult OnBeginGetHoldCodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sTessUID = ((string)(inValues[1]));
            string sTessPWD = ((string)(inValues[2]));
            return this.BeginGetHoldCodes(sSessionKey, sTessUID, sTessPWD, callback, asyncState);
        }
        
        private object[] OnEndGetHoldCodes(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetHoldCodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHoldCodesCompleted(object state) {
            if ((this.GetHoldCodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHoldCodesCompleted(this, new GetHoldCodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHoldCodesAsync(string sSessionKey, string sTessUID, string sTessPWD) {
            this.GetHoldCodesAsync(sSessionKey, sTessUID, sTessPWD, null);
        }
        
        public void GetHoldCodesAsync(string sSessionKey, string sTessUID, string sTessPWD, object userState) {
            if ((this.onBeginGetHoldCodesDelegate == null)) {
                this.onBeginGetHoldCodesDelegate = new BeginOperationDelegate(this.OnBeginGetHoldCodes);
            }
            if ((this.onEndGetHoldCodesDelegate == null)) {
                this.onEndGetHoldCodesDelegate = new EndOperationDelegate(this.OnEndGetHoldCodes);
            }
            if ((this.onGetHoldCodesCompletedDelegate == null)) {
                this.onGetHoldCodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHoldCodesCompleted);
            }
            base.InvokeAsync(this.onBeginGetHoldCodesDelegate, new object[] {
                        sSessionKey,
                        sTessUID,
                        sTessPWD}, this.onEndGetHoldCodesDelegate, this.onGetHoldCodesCompletedDelegate, userState);
        }
        
        public void UpdateHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD) {
            base.Channel.UpdateHoldCode(sSessionKey, iPerfNo, sSeatNoList, iHcNo, sHoldUntilDate, sOnlyAffectAvailable, iReplaceMode, sTessUID, sTessPWD);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateHoldCode(sSessionKey, iPerfNo, sSeatNoList, iHcNo, sHoldUntilDate, sOnlyAffectAvailable, iReplaceMode, sTessUID, sTessPWD, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateHoldCode(System.IAsyncResult result) {
            base.Channel.EndUpdateHoldCode(result);
        }
        
        private System.IAsyncResult OnBeginUpdateHoldCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPerfNo = ((int)(inValues[1]));
            string sSeatNoList = ((string)(inValues[2]));
            int iHcNo = ((int)(inValues[3]));
            string sHoldUntilDate = ((string)(inValues[4]));
            string sOnlyAffectAvailable = ((string)(inValues[5]));
            int iReplaceMode = ((int)(inValues[6]));
            string sTessUID = ((string)(inValues[7]));
            string sTessPWD = ((string)(inValues[8]));
            return this.BeginUpdateHoldCode(sSessionKey, iPerfNo, sSeatNoList, iHcNo, sHoldUntilDate, sOnlyAffectAvailable, iReplaceMode, sTessUID, sTessPWD, callback, asyncState);
        }
        
        private object[] OnEndUpdateHoldCode(System.IAsyncResult result) {
            this.EndUpdateHoldCode(result);
            return null;
        }
        
        private void OnUpdateHoldCodeCompleted(object state) {
            if ((this.UpdateHoldCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateHoldCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD) {
            this.UpdateHoldCodeAsync(sSessionKey, iPerfNo, sSeatNoList, iHcNo, sHoldUntilDate, sOnlyAffectAvailable, iReplaceMode, sTessUID, sTessPWD, null);
        }
        
        public void UpdateHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD, object userState) {
            if ((this.onBeginUpdateHoldCodeDelegate == null)) {
                this.onBeginUpdateHoldCodeDelegate = new BeginOperationDelegate(this.OnBeginUpdateHoldCode);
            }
            if ((this.onEndUpdateHoldCodeDelegate == null)) {
                this.onEndUpdateHoldCodeDelegate = new EndOperationDelegate(this.OnEndUpdateHoldCode);
            }
            if ((this.onUpdateHoldCodeCompletedDelegate == null)) {
                this.onUpdateHoldCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateHoldCodeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateHoldCodeDelegate, new object[] {
                        sSessionKey,
                        iPerfNo,
                        sSeatNoList,
                        iHcNo,
                        sHoldUntilDate,
                        sOnlyAffectAvailable,
                        iReplaceMode,
                        sTessUID,
                        sTessPWD}, this.onEndUpdateHoldCodeDelegate, this.onUpdateHoldCodeCompletedDelegate, userState);
        }
        
        public void RemoveHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD) {
            base.Channel.RemoveHoldCode(sSessionKey, iPerfNo, sSeatNoList, sReleaseDate, sTessUID, sTessPWD);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveHoldCode(sSessionKey, iPerfNo, sSeatNoList, sReleaseDate, sTessUID, sTessPWD, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveHoldCode(System.IAsyncResult result) {
            base.Channel.EndRemoveHoldCode(result);
        }
        
        private System.IAsyncResult OnBeginRemoveHoldCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iPerfNo = ((int)(inValues[1]));
            string sSeatNoList = ((string)(inValues[2]));
            string sReleaseDate = ((string)(inValues[3]));
            string sTessUID = ((string)(inValues[4]));
            string sTessPWD = ((string)(inValues[5]));
            return this.BeginRemoveHoldCode(sSessionKey, iPerfNo, sSeatNoList, sReleaseDate, sTessUID, sTessPWD, callback, asyncState);
        }
        
        private object[] OnEndRemoveHoldCode(System.IAsyncResult result) {
            this.EndRemoveHoldCode(result);
            return null;
        }
        
        private void OnRemoveHoldCodeCompleted(object state) {
            if ((this.RemoveHoldCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveHoldCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD) {
            this.RemoveHoldCodeAsync(sSessionKey, iPerfNo, sSeatNoList, sReleaseDate, sTessUID, sTessPWD, null);
        }
        
        public void RemoveHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD, object userState) {
            if ((this.onBeginRemoveHoldCodeDelegate == null)) {
                this.onBeginRemoveHoldCodeDelegate = new BeginOperationDelegate(this.OnBeginRemoveHoldCode);
            }
            if ((this.onEndRemoveHoldCodeDelegate == null)) {
                this.onEndRemoveHoldCodeDelegate = new EndOperationDelegate(this.OnEndRemoveHoldCode);
            }
            if ((this.onRemoveHoldCodeCompletedDelegate == null)) {
                this.onRemoveHoldCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveHoldCodeCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveHoldCodeDelegate, new object[] {
                        sSessionKey,
                        iPerfNo,
                        sSeatNoList,
                        sReleaseDate,
                        sTessUID,
                        sTessPWD}, this.onEndRemoveHoldCodeDelegate, this.onRemoveHoldCodeCompletedDelegate, userState);
        }
        
        public TessituraIntegration.TessituraWebAPI.Email GetOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo) {
            return base.Channel.GetOrderConfirmationEmail(sSessionKey, iTemplateNo, iOrderNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrderConfirmationEmail(sSessionKey, iTemplateNo, iOrderNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.Email EndGetOrderConfirmationEmail(System.IAsyncResult result) {
            return base.Channel.EndGetOrderConfirmationEmail(result);
        }
        
        private System.IAsyncResult OnBeginGetOrderConfirmationEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iTemplateNo = ((int)(inValues[1]));
            int iOrderNo = ((int)(inValues[2]));
            return this.BeginGetOrderConfirmationEmail(sSessionKey, iTemplateNo, iOrderNo, callback, asyncState);
        }
        
        private object[] OnEndGetOrderConfirmationEmail(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.Email retVal = this.EndGetOrderConfirmationEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrderConfirmationEmailCompleted(object state) {
            if ((this.GetOrderConfirmationEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrderConfirmationEmailCompleted(this, new GetOrderConfirmationEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo) {
            this.GetOrderConfirmationEmailAsync(sSessionKey, iTemplateNo, iOrderNo, null);
        }
        
        public void GetOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo, object userState) {
            if ((this.onBeginGetOrderConfirmationEmailDelegate == null)) {
                this.onBeginGetOrderConfirmationEmailDelegate = new BeginOperationDelegate(this.OnBeginGetOrderConfirmationEmail);
            }
            if ((this.onEndGetOrderConfirmationEmailDelegate == null)) {
                this.onEndGetOrderConfirmationEmailDelegate = new EndOperationDelegate(this.OnEndGetOrderConfirmationEmail);
            }
            if ((this.onGetOrderConfirmationEmailCompletedDelegate == null)) {
                this.onGetOrderConfirmationEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrderConfirmationEmailCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrderConfirmationEmailDelegate, new object[] {
                        sSessionKey,
                        iTemplateNo,
                        iOrderNo}, this.onEndGetOrderConfirmationEmailDelegate, this.onGetOrderConfirmationEmailCompletedDelegate, userState);
        }
        
        public bool SendOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject) {
            return base.Channel.SendOrderConfirmationEmail(sSessionKey, iTemplateNo, iOrderNo, sSubject);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendOrderConfirmationEmail(sSessionKey, iTemplateNo, iOrderNo, sSubject, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendOrderConfirmationEmail(System.IAsyncResult result) {
            return base.Channel.EndSendOrderConfirmationEmail(result);
        }
        
        private System.IAsyncResult OnBeginSendOrderConfirmationEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iTemplateNo = ((int)(inValues[1]));
            int iOrderNo = ((int)(inValues[2]));
            string sSubject = ((string)(inValues[3]));
            return this.BeginSendOrderConfirmationEmail(sSessionKey, iTemplateNo, iOrderNo, sSubject, callback, asyncState);
        }
        
        private object[] OnEndSendOrderConfirmationEmail(System.IAsyncResult result) {
            bool retVal = this.EndSendOrderConfirmationEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendOrderConfirmationEmailCompleted(object state) {
            if ((this.SendOrderConfirmationEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendOrderConfirmationEmailCompleted(this, new SendOrderConfirmationEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject) {
            this.SendOrderConfirmationEmailAsync(sSessionKey, iTemplateNo, iOrderNo, sSubject, null);
        }
        
        public void SendOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject, object userState) {
            if ((this.onBeginSendOrderConfirmationEmailDelegate == null)) {
                this.onBeginSendOrderConfirmationEmailDelegate = new BeginOperationDelegate(this.OnBeginSendOrderConfirmationEmail);
            }
            if ((this.onEndSendOrderConfirmationEmailDelegate == null)) {
                this.onEndSendOrderConfirmationEmailDelegate = new EndOperationDelegate(this.OnEndSendOrderConfirmationEmail);
            }
            if ((this.onSendOrderConfirmationEmailCompletedDelegate == null)) {
                this.onSendOrderConfirmationEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendOrderConfirmationEmailCompleted);
            }
            base.InvokeAsync(this.onBeginSendOrderConfirmationEmailDelegate, new object[] {
                        sSessionKey,
                        iTemplateNo,
                        iOrderNo,
                        sSubject}, this.onEndSendOrderConfirmationEmailDelegate, this.onSendOrderConfirmationEmailCompletedDelegate, userState);
        }
        
        public bool TestOrderConfirmationEmail(string sEmailAddress, int iTemplateNo, int iOrganizationId) {
            return base.Channel.TestOrderConfirmationEmail(sEmailAddress, iTemplateNo, iOrganizationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestOrderConfirmationEmail(string sEmailAddress, int iTemplateNo, int iOrganizationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestOrderConfirmationEmail(sEmailAddress, iTemplateNo, iOrganizationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndTestOrderConfirmationEmail(System.IAsyncResult result) {
            return base.Channel.EndTestOrderConfirmationEmail(result);
        }
        
        private System.IAsyncResult OnBeginTestOrderConfirmationEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sEmailAddress = ((string)(inValues[0]));
            int iTemplateNo = ((int)(inValues[1]));
            int iOrganizationId = ((int)(inValues[2]));
            return this.BeginTestOrderConfirmationEmail(sEmailAddress, iTemplateNo, iOrganizationId, callback, asyncState);
        }
        
        private object[] OnEndTestOrderConfirmationEmail(System.IAsyncResult result) {
            bool retVal = this.EndTestOrderConfirmationEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestOrderConfirmationEmailCompleted(object state) {
            if ((this.TestOrderConfirmationEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestOrderConfirmationEmailCompleted(this, new TestOrderConfirmationEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestOrderConfirmationEmailAsync(string sEmailAddress, int iTemplateNo, int iOrganizationId) {
            this.TestOrderConfirmationEmailAsync(sEmailAddress, iTemplateNo, iOrganizationId, null);
        }
        
        public void TestOrderConfirmationEmailAsync(string sEmailAddress, int iTemplateNo, int iOrganizationId, object userState) {
            if ((this.onBeginTestOrderConfirmationEmailDelegate == null)) {
                this.onBeginTestOrderConfirmationEmailDelegate = new BeginOperationDelegate(this.OnBeginTestOrderConfirmationEmail);
            }
            if ((this.onEndTestOrderConfirmationEmailDelegate == null)) {
                this.onEndTestOrderConfirmationEmailDelegate = new EndOperationDelegate(this.OnEndTestOrderConfirmationEmail);
            }
            if ((this.onTestOrderConfirmationEmailCompletedDelegate == null)) {
                this.onTestOrderConfirmationEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestOrderConfirmationEmailCompleted);
            }
            base.InvokeAsync(this.onBeginTestOrderConfirmationEmailDelegate, new object[] {
                        sEmailAddress,
                        iTemplateNo,
                        iOrganizationId}, this.onEndTestOrderConfirmationEmailDelegate, this.onTestOrderConfirmationEmailCompletedDelegate, userState);
        }
        
        public System.DateTime AlterTicketExpiration(string sSessionKey, string sExpirationTime, int iOffsetSeconds) {
            return base.Channel.AlterTicketExpiration(sSessionKey, sExpirationTime, iOffsetSeconds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAlterTicketExpiration(string sSessionKey, string sExpirationTime, int iOffsetSeconds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAlterTicketExpiration(sSessionKey, sExpirationTime, iOffsetSeconds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndAlterTicketExpiration(System.IAsyncResult result) {
            return base.Channel.EndAlterTicketExpiration(result);
        }
        
        private System.IAsyncResult OnBeginAlterTicketExpiration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sExpirationTime = ((string)(inValues[1]));
            int iOffsetSeconds = ((int)(inValues[2]));
            return this.BeginAlterTicketExpiration(sSessionKey, sExpirationTime, iOffsetSeconds, callback, asyncState);
        }
        
        private object[] OnEndAlterTicketExpiration(System.IAsyncResult result) {
            System.DateTime retVal = this.EndAlterTicketExpiration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAlterTicketExpirationCompleted(object state) {
            if ((this.AlterTicketExpirationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AlterTicketExpirationCompleted(this, new AlterTicketExpirationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AlterTicketExpirationAsync(string sSessionKey, string sExpirationTime, int iOffsetSeconds) {
            this.AlterTicketExpirationAsync(sSessionKey, sExpirationTime, iOffsetSeconds, null);
        }
        
        public void AlterTicketExpirationAsync(string sSessionKey, string sExpirationTime, int iOffsetSeconds, object userState) {
            if ((this.onBeginAlterTicketExpirationDelegate == null)) {
                this.onBeginAlterTicketExpirationDelegate = new BeginOperationDelegate(this.OnBeginAlterTicketExpiration);
            }
            if ((this.onEndAlterTicketExpirationDelegate == null)) {
                this.onEndAlterTicketExpirationDelegate = new EndOperationDelegate(this.OnEndAlterTicketExpiration);
            }
            if ((this.onAlterTicketExpirationCompletedDelegate == null)) {
                this.onAlterTicketExpirationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAlterTicketExpirationCompleted);
            }
            base.InvokeAsync(this.onBeginAlterTicketExpirationDelegate, new object[] {
                        sSessionKey,
                        sExpirationTime,
                        iOffsetSeconds}, this.onEndAlterTicketExpirationDelegate, this.onAlterTicketExpirationCompletedDelegate, userState);
        }
        
        public System.DateTime GetTicketExpiration(string sSessionKey) {
            return base.Channel.GetTicketExpiration(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTicketExpiration(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTicketExpiration(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetTicketExpiration(System.IAsyncResult result) {
            return base.Channel.EndGetTicketExpiration(result);
        }
        
        private System.IAsyncResult OnBeginGetTicketExpiration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginGetTicketExpiration(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetTicketExpiration(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetTicketExpiration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTicketExpirationCompleted(object state) {
            if ((this.GetTicketExpirationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTicketExpirationCompleted(this, new GetTicketExpirationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTicketExpirationAsync(string sSessionKey) {
            this.GetTicketExpirationAsync(sSessionKey, null);
        }
        
        public void GetTicketExpirationAsync(string sSessionKey, object userState) {
            if ((this.onBeginGetTicketExpirationDelegate == null)) {
                this.onBeginGetTicketExpirationDelegate = new BeginOperationDelegate(this.OnBeginGetTicketExpiration);
            }
            if ((this.onEndGetTicketExpirationDelegate == null)) {
                this.onEndGetTicketExpirationDelegate = new EndOperationDelegate(this.OnEndGetTicketExpiration);
            }
            if ((this.onGetTicketExpirationCompletedDelegate == null)) {
                this.onGetTicketExpirationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTicketExpirationCompleted);
            }
            base.InvokeAsync(this.onBeginGetTicketExpirationDelegate, new object[] {
                        sSessionKey}, this.onEndGetTicketExpirationDelegate, this.onGetTicketExpirationCompletedDelegate, userState);
        }
        
        public int GetMaxTicketAmount() {
            return base.Channel.GetMaxTicketAmount();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMaxTicketAmount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMaxTicketAmount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetMaxTicketAmount(System.IAsyncResult result) {
            return base.Channel.EndGetMaxTicketAmount(result);
        }
        
        private System.IAsyncResult OnBeginGetMaxTicketAmount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetMaxTicketAmount(callback, asyncState);
        }
        
        private object[] OnEndGetMaxTicketAmount(System.IAsyncResult result) {
            int retVal = this.EndGetMaxTicketAmount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMaxTicketAmountCompleted(object state) {
            if ((this.GetMaxTicketAmountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMaxTicketAmountCompleted(this, new GetMaxTicketAmountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMaxTicketAmountAsync() {
            this.GetMaxTicketAmountAsync(null);
        }
        
        public void GetMaxTicketAmountAsync(object userState) {
            if ((this.onBeginGetMaxTicketAmountDelegate == null)) {
                this.onBeginGetMaxTicketAmountDelegate = new BeginOperationDelegate(this.OnBeginGetMaxTicketAmount);
            }
            if ((this.onEndGetMaxTicketAmountDelegate == null)) {
                this.onEndGetMaxTicketAmountDelegate = new EndOperationDelegate(this.OnEndGetMaxTicketAmount);
            }
            if ((this.onGetMaxTicketAmountCompletedDelegate == null)) {
                this.onGetMaxTicketAmountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMaxTicketAmountCompleted);
            }
            base.InvokeAsync(this.onBeginGetMaxTicketAmountDelegate, null, this.onEndGetMaxTicketAmountDelegate, this.onGetMaxTicketAmountCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetLocalDataEx(string SessionKey, int LocalDataTableIndex, string RetrievalKey) {
            return base.Channel.GetLocalDataEx(SessionKey, LocalDataTableIndex, RetrievalKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLocalDataEx(string SessionKey, int LocalDataTableIndex, string RetrievalKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocalDataEx(SessionKey, LocalDataTableIndex, RetrievalKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetLocalDataEx(System.IAsyncResult result) {
            return base.Channel.EndGetLocalDataEx(result);
        }
        
        private System.IAsyncResult OnBeginGetLocalDataEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int LocalDataTableIndex = ((int)(inValues[1]));
            string RetrievalKey = ((string)(inValues[2]));
            return this.BeginGetLocalDataEx(SessionKey, LocalDataTableIndex, RetrievalKey, callback, asyncState);
        }
        
        private object[] OnEndGetLocalDataEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetLocalDataEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocalDataExCompleted(object state) {
            if ((this.GetLocalDataExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocalDataExCompleted(this, new GetLocalDataExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocalDataExAsync(string SessionKey, int LocalDataTableIndex, string RetrievalKey) {
            this.GetLocalDataExAsync(SessionKey, LocalDataTableIndex, RetrievalKey, null);
        }
        
        public void GetLocalDataExAsync(string SessionKey, int LocalDataTableIndex, string RetrievalKey, object userState) {
            if ((this.onBeginGetLocalDataExDelegate == null)) {
                this.onBeginGetLocalDataExDelegate = new BeginOperationDelegate(this.OnBeginGetLocalDataEx);
            }
            if ((this.onEndGetLocalDataExDelegate == null)) {
                this.onEndGetLocalDataExDelegate = new EndOperationDelegate(this.OnEndGetLocalDataEx);
            }
            if ((this.onGetLocalDataExCompletedDelegate == null)) {
                this.onGetLocalDataExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocalDataExCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocalDataExDelegate, new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        RetrievalKey}, this.onEndGetLocalDataExDelegate, this.onGetLocalDataExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformancesEx2(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType) {
            return base.Channel.GetPerformancesEx2(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformancesEx2(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformancesEx2(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformancesEx2(System.IAsyncResult result) {
            return base.Channel.EndGetPerformancesEx2(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformancesEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            short iVenueID = ((short)(inValues[3]));
            short iModeOfSale = ((short)(inValues[4]));
            int iBusinessUnit = ((int)(inValues[5]));
            string sSortString = ((string)(inValues[6]));
            string sKeywords = ((string)(inValues[7]));
            string cKeywordAndOrStatement = ((string)(inValues[8]));
            string sArtistLastName = ((string)(inValues[9]));
            string sFullText = ((string)(inValues[10]));
            string sFullTextType = ((string)(inValues[11]));
            string sContentType = ((string)(inValues[12]));
            return this.BeginGetPerformancesEx2(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, callback, asyncState);
        }
        
        private object[] OnEndGetPerformancesEx2(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformancesEx2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformancesEx2Completed(object state) {
            if ((this.GetPerformancesEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformancesEx2Completed(this, new GetPerformancesEx2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformancesEx2Async(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType) {
            this.GetPerformancesEx2Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, null);
        }
        
        public void GetPerformancesEx2Async(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, object userState) {
            if ((this.onBeginGetPerformancesEx2Delegate == null)) {
                this.onBeginGetPerformancesEx2Delegate = new BeginOperationDelegate(this.OnBeginGetPerformancesEx2);
            }
            if ((this.onEndGetPerformancesEx2Delegate == null)) {
                this.onEndGetPerformancesEx2Delegate = new EndOperationDelegate(this.OnEndGetPerformancesEx2);
            }
            if ((this.onGetPerformancesEx2CompletedDelegate == null)) {
                this.onGetPerformancesEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformancesEx2Completed);
            }
            base.InvokeAsync(this.onBeginGetPerformancesEx2Delegate, new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType}, this.onEndGetPerformancesEx2Delegate, this.onGetPerformancesEx2CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionsEx2(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement) {
            return base.Channel.GetProductionsEx2(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionsEx2(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductionsEx2(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionsEx2(System.IAsyncResult result) {
            return base.Channel.EndGetProductionsEx2(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionsEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            string sPerfType = ((string)(inValues[3]));
            string sArtist = ((string)(inValues[4]));
            short iVenueID = ((short)(inValues[5]));
            string sKeywords = ((string)(inValues[6]));
            short iModeOfSale = ((short)(inValues[7]));
            int iBusinessUnit = ((int)(inValues[8]));
            string sFullText = ((string)(inValues[9]));
            string sFullTextType = ((string)(inValues[10]));
            string sContentType = ((string)(inValues[11]));
            int iKeywordAndOrStatement = ((int)(inValues[12]));
            return this.BeginGetProductionsEx2(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, callback, asyncState);
        }
        
        private object[] OnEndGetProductionsEx2(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionsEx2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionsEx2Completed(object state) {
            if ((this.GetProductionsEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionsEx2Completed(this, new GetProductionsEx2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionsEx2Async(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement) {
            this.GetProductionsEx2Async(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, null);
        }
        
        public void GetProductionsEx2Async(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement, object userState) {
            if ((this.onBeginGetProductionsEx2Delegate == null)) {
                this.onBeginGetProductionsEx2Delegate = new BeginOperationDelegate(this.OnBeginGetProductionsEx2);
            }
            if ((this.onEndGetProductionsEx2Delegate == null)) {
                this.onEndGetProductionsEx2Delegate = new EndOperationDelegate(this.OnEndGetProductionsEx2);
            }
            if ((this.onGetProductionsEx2CompletedDelegate == null)) {
                this.onGetProductionsEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionsEx2Completed);
            }
            base.InvokeAsync(this.onBeginGetProductionsEx2Delegate, new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        iKeywordAndOrStatement}, this.onEndGetProductionsEx2Delegate, this.onGetProductionsEx2CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackagesEx2(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType) {
            return base.Channel.GetPackagesEx2(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackagesEx2(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginGetPackagesEx2(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackagesEx2(System.IAsyncResult result) {
            return base.Channel.EndGetPackagesEx2(result);
        }
        
        private System.IAsyncResult OnBeginGetPackagesEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            short iVenueID = ((short)(inValues[3]));
            short iModeOfSale = ((short)(inValues[4]));
            int iBusinessUnit = ((int)(inValues[5]));
            string sSortString = ((string)(inValues[6]));
            string sKeywords = ((string)(inValues[7]));
            string cKeywordAndOrStatement = ((string)(inValues[8]));
            string sArtistLastName = ((string)(inValues[9]));
            int iSeason = ((int)(inValues[10]));
            int iPackageType = ((int)(inValues[11]));
            bool bMatchAllPerformances = ((bool)(inValues[12]));
            string sFullText = ((string)(inValues[13]));
            string sFullTextType = ((string)(inValues[14]));
            string sContentType = ((string)(inValues[15]));
            return this.BeginGetPackagesEx2(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, callback, asyncState);
        }
        
        private object[] OnEndGetPackagesEx2(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackagesEx2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackagesEx2Completed(object state) {
            if ((this.GetPackagesEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackagesEx2Completed(this, new GetPackagesEx2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackagesEx2Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType) {
            this.GetPackagesEx2Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, null);
        }
        
        public void GetPackagesEx2Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    object userState) {
            if ((this.onBeginGetPackagesEx2Delegate == null)) {
                this.onBeginGetPackagesEx2Delegate = new BeginOperationDelegate(this.OnBeginGetPackagesEx2);
            }
            if ((this.onEndGetPackagesEx2Delegate == null)) {
                this.onEndGetPackagesEx2Delegate = new EndOperationDelegate(this.OnEndGetPackagesEx2);
            }
            if ((this.onGetPackagesEx2CompletedDelegate == null)) {
                this.onGetPackagesEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackagesEx2Completed);
            }
            base.InvokeAsync(this.onBeginGetPackagesEx2Delegate, new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances,
                        sFullText,
                        sFullTextType,
                        sContentType}, this.onEndGetPackagesEx2Delegate, this.onGetPackagesEx2CompletedDelegate, userState);
        }
        
        public System.Data.DataSet ExecuteLocalProcedure(string SessionKey, int LocalProcedureId, string LocalProcedureValues) {
            return base.Channel.ExecuteLocalProcedure(SessionKey, LocalProcedureId, LocalProcedureValues);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExecuteLocalProcedure(string SessionKey, int LocalProcedureId, string LocalProcedureValues, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteLocalProcedure(SessionKey, LocalProcedureId, LocalProcedureValues, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndExecuteLocalProcedure(System.IAsyncResult result) {
            return base.Channel.EndExecuteLocalProcedure(result);
        }
        
        private System.IAsyncResult OnBeginExecuteLocalProcedure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int LocalProcedureId = ((int)(inValues[1]));
            string LocalProcedureValues = ((string)(inValues[2]));
            return this.BeginExecuteLocalProcedure(SessionKey, LocalProcedureId, LocalProcedureValues, callback, asyncState);
        }
        
        private object[] OnEndExecuteLocalProcedure(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndExecuteLocalProcedure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteLocalProcedureCompleted(object state) {
            if ((this.ExecuteLocalProcedureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteLocalProcedureCompleted(this, new ExecuteLocalProcedureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteLocalProcedureAsync(string SessionKey, int LocalProcedureId, string LocalProcedureValues) {
            this.ExecuteLocalProcedureAsync(SessionKey, LocalProcedureId, LocalProcedureValues, null);
        }
        
        public void ExecuteLocalProcedureAsync(string SessionKey, int LocalProcedureId, string LocalProcedureValues, object userState) {
            if ((this.onBeginExecuteLocalProcedureDelegate == null)) {
                this.onBeginExecuteLocalProcedureDelegate = new BeginOperationDelegate(this.OnBeginExecuteLocalProcedure);
            }
            if ((this.onEndExecuteLocalProcedureDelegate == null)) {
                this.onEndExecuteLocalProcedureDelegate = new EndOperationDelegate(this.OnEndExecuteLocalProcedure);
            }
            if ((this.onExecuteLocalProcedureCompletedDelegate == null)) {
                this.onExecuteLocalProcedureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteLocalProcedureCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteLocalProcedureDelegate, new object[] {
                        SessionKey,
                        LocalProcedureId,
                        LocalProcedureValues}, this.onEndExecuteLocalProcedureDelegate, this.onExecuteLocalProcedureCompletedDelegate, userState);
        }
        
        public bool SendCredentials(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID) {
            return base.Channel.SendCredentials(sSessionKey, sEmail, iLoginType, bResetTempFlag, bUseToken, bGenerateNewPassword, iTemplateID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendCredentials(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendCredentials(sSessionKey, sEmail, iLoginType, bResetTempFlag, bUseToken, bGenerateNewPassword, iTemplateID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendCredentials(System.IAsyncResult result) {
            return base.Channel.EndSendCredentials(result);
        }
        
        private System.IAsyncResult OnBeginSendCredentials(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sEmail = ((string)(inValues[1]));
            int iLoginType = ((int)(inValues[2]));
            bool bResetTempFlag = ((bool)(inValues[3]));
            bool bUseToken = ((bool)(inValues[4]));
            bool bGenerateNewPassword = ((bool)(inValues[5]));
            int iTemplateID = ((int)(inValues[6]));
            return this.BeginSendCredentials(sSessionKey, sEmail, iLoginType, bResetTempFlag, bUseToken, bGenerateNewPassword, iTemplateID, callback, asyncState);
        }
        
        private object[] OnEndSendCredentials(System.IAsyncResult result) {
            bool retVal = this.EndSendCredentials(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendCredentialsCompleted(object state) {
            if ((this.SendCredentialsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendCredentialsCompleted(this, new SendCredentialsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendCredentialsAsync(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID) {
            this.SendCredentialsAsync(sSessionKey, sEmail, iLoginType, bResetTempFlag, bUseToken, bGenerateNewPassword, iTemplateID, null);
        }
        
        public void SendCredentialsAsync(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID, object userState) {
            if ((this.onBeginSendCredentialsDelegate == null)) {
                this.onBeginSendCredentialsDelegate = new BeginOperationDelegate(this.OnBeginSendCredentials);
            }
            if ((this.onEndSendCredentialsDelegate == null)) {
                this.onEndSendCredentialsDelegate = new EndOperationDelegate(this.OnEndSendCredentials);
            }
            if ((this.onSendCredentialsCompletedDelegate == null)) {
                this.onSendCredentialsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendCredentialsCompleted);
            }
            base.InvokeAsync(this.onBeginSendCredentialsDelegate, new object[] {
                        sSessionKey,
                        sEmail,
                        iLoginType,
                        bResetTempFlag,
                        bUseToken,
                        bGenerateNewPassword,
                        iTemplateID}, this.onEndSendCredentialsDelegate, this.onSendCredentialsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginEx2Response TessituraIntegration.TessituraWebAPI.TessituraSoap.LoginEx2(TessituraIntegration.TessituraWebAPI.LoginEx2Request request) {
            return base.Channel.LoginEx2(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginEx2(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, out bool LoginEx2Result) {
            TessituraIntegration.TessituraWebAPI.LoginEx2Request inValue = new TessituraIntegration.TessituraWebAPI.LoginEx2Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            inValue.sEmail = sEmail;
            inValue.sPhone = sPhone;
            inValue.sPostalCode = sPostalCode;
            inValue.iCustomerNo = iCustomerNo;
            inValue.iN1N2 = iN1N2;
            inValue.sForgotLoginToken = sForgotLoginToken;
            TessituraIntegration.TessituraWebAPI.LoginEx2Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).LoginEx2(inValue);
            LoginEx2Result = retVal.LoginEx2Result;
            return retVal.LoginAttemptHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginLoginEx2(TessituraIntegration.TessituraWebAPI.LoginEx2Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginEx2(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginEx2(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.LoginEx2Request inValue = new TessituraIntegration.TessituraWebAPI.LoginEx2Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            inValue.sEmail = sEmail;
            inValue.sPhone = sPhone;
            inValue.sPostalCode = sPostalCode;
            inValue.iCustomerNo = iCustomerNo;
            inValue.iN1N2 = iN1N2;
            inValue.sForgotLoginToken = sForgotLoginToken;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginLoginEx2(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginEx2Response TessituraIntegration.TessituraWebAPI.TessituraSoap.EndLoginEx2(System.IAsyncResult result) {
            return base.Channel.EndLoginEx2(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader EndLoginEx2(System.IAsyncResult result, out bool LoginEx2Result) {
            TessituraIntegration.TessituraWebAPI.LoginEx2Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndLoginEx2(result);
            LoginEx2Result = retVal.LoginEx2Result;
            return retVal.LoginAttemptHeader;
        }
        
        private System.IAsyncResult OnBeginLoginEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            int iPromotionCode = ((int)(inValues[4]));
            string sEmail = ((string)(inValues[5]));
            string sPhone = ((string)(inValues[6]));
            string sPostalCode = ((string)(inValues[7]));
            int iCustomerNo = ((int)(inValues[8]));
            int iN1N2 = ((int)(inValues[9]));
            string sForgotLoginToken = ((string)(inValues[10]));
            return this.BeginLoginEx2(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, sForgotLoginToken, callback, asyncState);
        }
        
        private object[] OnEndLoginEx2(System.IAsyncResult result) {
            bool LoginEx2Result = this.GetDefaultValueForInitialization<bool>();
            TessituraIntegration.TessituraWebAPI.LoginAttemptHeader retVal = this.EndLoginEx2(result, out LoginEx2Result);
            return new object[] {
                    LoginEx2Result,
                    retVal};
        }
        
        private void OnLoginEx2Completed(object state) {
            if ((this.LoginEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginEx2Completed(this, new LoginEx2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginEx2Async(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken) {
            this.LoginEx2Async(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, sForgotLoginToken, null);
        }
        
        public void LoginEx2Async(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, object userState) {
            if ((this.onBeginLoginEx2Delegate == null)) {
                this.onBeginLoginEx2Delegate = new BeginOperationDelegate(this.OnBeginLoginEx2);
            }
            if ((this.onEndLoginEx2Delegate == null)) {
                this.onEndLoginEx2Delegate = new EndOperationDelegate(this.OnEndLoginEx2);
            }
            if ((this.onLoginEx2CompletedDelegate == null)) {
                this.onLoginEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginEx2Completed);
            }
            base.InvokeAsync(this.onBeginLoginEx2Delegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode,
                        sEmail,
                        sPhone,
                        sPostalCode,
                        iCustomerNo,
                        iN1N2,
                        sForgotLoginToken}, this.onEndLoginEx2Delegate, this.onLoginEx2CompletedDelegate, userState);
        }
        
        public int ChangeModeOfSaleEx(string SessionKey, int NewModeOfSale) {
            return base.Channel.ChangeModeOfSaleEx(SessionKey, NewModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeModeOfSaleEx(string SessionKey, int NewModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeModeOfSaleEx(SessionKey, NewModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndChangeModeOfSaleEx(System.IAsyncResult result) {
            return base.Channel.EndChangeModeOfSaleEx(result);
        }
        
        private System.IAsyncResult OnBeginChangeModeOfSaleEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int NewModeOfSale = ((int)(inValues[1]));
            return this.BeginChangeModeOfSaleEx(SessionKey, NewModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndChangeModeOfSaleEx(System.IAsyncResult result) {
            int retVal = this.EndChangeModeOfSaleEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeModeOfSaleExCompleted(object state) {
            if ((this.ChangeModeOfSaleExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeModeOfSaleExCompleted(this, new ChangeModeOfSaleExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeModeOfSaleExAsync(string SessionKey, int NewModeOfSale) {
            this.ChangeModeOfSaleExAsync(SessionKey, NewModeOfSale, null);
        }
        
        public void ChangeModeOfSaleExAsync(string SessionKey, int NewModeOfSale, object userState) {
            if ((this.onBeginChangeModeOfSaleExDelegate == null)) {
                this.onBeginChangeModeOfSaleExDelegate = new BeginOperationDelegate(this.OnBeginChangeModeOfSaleEx);
            }
            if ((this.onEndChangeModeOfSaleExDelegate == null)) {
                this.onEndChangeModeOfSaleExDelegate = new EndOperationDelegate(this.OnEndChangeModeOfSaleEx);
            }
            if ((this.onChangeModeOfSaleExCompletedDelegate == null)) {
                this.onChangeModeOfSaleExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeModeOfSaleExCompleted);
            }
            base.InvokeAsync(this.onBeginChangeModeOfSaleExDelegate, new object[] {
                        SessionKey,
                        NewModeOfSale}, this.onEndChangeModeOfSaleExDelegate, this.onChangeModeOfSaleExCompletedDelegate, userState);
        }
        
        public void UpdateSourceCode(string SessionKey, int NewPromoCode) {
            base.Channel.UpdateSourceCode(SessionKey, NewPromoCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSourceCode(string SessionKey, int NewPromoCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSourceCode(SessionKey, NewPromoCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSourceCode(System.IAsyncResult result) {
            base.Channel.EndUpdateSourceCode(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSourceCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int NewPromoCode = ((int)(inValues[1]));
            return this.BeginUpdateSourceCode(SessionKey, NewPromoCode, callback, asyncState);
        }
        
        private object[] OnEndUpdateSourceCode(System.IAsyncResult result) {
            this.EndUpdateSourceCode(result);
            return null;
        }
        
        private void OnUpdateSourceCodeCompleted(object state) {
            if ((this.UpdateSourceCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSourceCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSourceCodeAsync(string SessionKey, int NewPromoCode) {
            this.UpdateSourceCodeAsync(SessionKey, NewPromoCode, null);
        }
        
        public void UpdateSourceCodeAsync(string SessionKey, int NewPromoCode, object userState) {
            if ((this.onBeginUpdateSourceCodeDelegate == null)) {
                this.onBeginUpdateSourceCodeDelegate = new BeginOperationDelegate(this.OnBeginUpdateSourceCode);
            }
            if ((this.onEndUpdateSourceCodeDelegate == null)) {
                this.onEndUpdateSourceCodeDelegate = new EndOperationDelegate(this.OnEndUpdateSourceCode);
            }
            if ((this.onUpdateSourceCodeCompletedDelegate == null)) {
                this.onUpdateSourceCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSourceCodeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSourceCodeDelegate, new object[] {
                        SessionKey,
                        NewPromoCode}, this.onEndUpdateSourceCodeDelegate, this.onUpdateSourceCodeCompletedDelegate, userState);
        }
        
        public System.Data.DataSet CreatePaymentPlan(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments) {
            return base.Channel.CreatePaymentPlan(sSessionKey, sStartDate, sEndDate, iBillingScheduleId, iNumberOfPayments);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreatePaymentPlan(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePaymentPlan(sSessionKey, sStartDate, sEndDate, iBillingScheduleId, iNumberOfPayments, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndCreatePaymentPlan(System.IAsyncResult result) {
            return base.Channel.EndCreatePaymentPlan(result);
        }
        
        private System.IAsyncResult OnBeginCreatePaymentPlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            int iBillingScheduleId = ((int)(inValues[3]));
            int iNumberOfPayments = ((int)(inValues[4]));
            return this.BeginCreatePaymentPlan(sSessionKey, sStartDate, sEndDate, iBillingScheduleId, iNumberOfPayments, callback, asyncState);
        }
        
        private object[] OnEndCreatePaymentPlan(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndCreatePaymentPlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePaymentPlanCompleted(object state) {
            if ((this.CreatePaymentPlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePaymentPlanCompleted(this, new CreatePaymentPlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePaymentPlanAsync(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments) {
            this.CreatePaymentPlanAsync(sSessionKey, sStartDate, sEndDate, iBillingScheduleId, iNumberOfPayments, null);
        }
        
        public void CreatePaymentPlanAsync(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments, object userState) {
            if ((this.onBeginCreatePaymentPlanDelegate == null)) {
                this.onBeginCreatePaymentPlanDelegate = new BeginOperationDelegate(this.OnBeginCreatePaymentPlan);
            }
            if ((this.onEndCreatePaymentPlanDelegate == null)) {
                this.onEndCreatePaymentPlanDelegate = new EndOperationDelegate(this.OnEndCreatePaymentPlan);
            }
            if ((this.onCreatePaymentPlanCompletedDelegate == null)) {
                this.onCreatePaymentPlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePaymentPlanCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePaymentPlanDelegate, new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        iBillingScheduleId,
                        iNumberOfPayments}, this.onEndCreatePaymentPlanDelegate, this.onCreatePaymentPlanCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ValidateTessituraUserEx(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            return base.Channel.ValidateTessituraUserEx(sSessionKey, sTessituraUsername, sTessituraPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateTessituraUserEx(string sSessionKey, string sTessituraUsername, string sTessituraPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateTessituraUserEx(sSessionKey, sTessituraUsername, sTessituraPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndValidateTessituraUserEx(System.IAsyncResult result) {
            return base.Channel.EndValidateTessituraUserEx(result);
        }
        
        private System.IAsyncResult OnBeginValidateTessituraUserEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sTessituraUsername = ((string)(inValues[1]));
            string sTessituraPassword = ((string)(inValues[2]));
            return this.BeginValidateTessituraUserEx(sSessionKey, sTessituraUsername, sTessituraPassword, callback, asyncState);
        }
        
        private object[] OnEndValidateTessituraUserEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndValidateTessituraUserEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateTessituraUserExCompleted(object state) {
            if ((this.ValidateTessituraUserExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateTessituraUserExCompleted(this, new ValidateTessituraUserExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateTessituraUserExAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            this.ValidateTessituraUserExAsync(sSessionKey, sTessituraUsername, sTessituraPassword, null);
        }
        
        public void ValidateTessituraUserExAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword, object userState) {
            if ((this.onBeginValidateTessituraUserExDelegate == null)) {
                this.onBeginValidateTessituraUserExDelegate = new BeginOperationDelegate(this.OnBeginValidateTessituraUserEx);
            }
            if ((this.onEndValidateTessituraUserExDelegate == null)) {
                this.onEndValidateTessituraUserExDelegate = new EndOperationDelegate(this.OnEndValidateTessituraUserEx);
            }
            if ((this.onValidateTessituraUserExCompletedDelegate == null)) {
                this.onValidateTessituraUserExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateTessituraUserExCompleted);
            }
            base.InvokeAsync(this.onBeginValidateTessituraUserExDelegate, new object[] {
                        sSessionKey,
                        sTessituraUsername,
                        sTessituraPassword}, this.onEndValidateTessituraUserExDelegate, this.onValidateTessituraUserExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPermissions(string sSessionKey, string sUserGroupId, int iSecurityObjectId) {
            return base.Channel.GetPermissions(sSessionKey, sUserGroupId, iSecurityObjectId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPermissions(string sSessionKey, string sUserGroupId, int iSecurityObjectId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPermissions(sSessionKey, sUserGroupId, iSecurityObjectId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPermissions(System.IAsyncResult result) {
            return base.Channel.EndGetPermissions(result);
        }
        
        private System.IAsyncResult OnBeginGetPermissions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUserGroupId = ((string)(inValues[1]));
            int iSecurityObjectId = ((int)(inValues[2]));
            return this.BeginGetPermissions(sSessionKey, sUserGroupId, iSecurityObjectId, callback, asyncState);
        }
        
        private object[] OnEndGetPermissions(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPermissions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPermissionsCompleted(object state) {
            if ((this.GetPermissionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPermissionsCompleted(this, new GetPermissionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPermissionsAsync(string sSessionKey, string sUserGroupId, int iSecurityObjectId) {
            this.GetPermissionsAsync(sSessionKey, sUserGroupId, iSecurityObjectId, null);
        }
        
        public void GetPermissionsAsync(string sSessionKey, string sUserGroupId, int iSecurityObjectId, object userState) {
            if ((this.onBeginGetPermissionsDelegate == null)) {
                this.onBeginGetPermissionsDelegate = new BeginOperationDelegate(this.OnBeginGetPermissions);
            }
            if ((this.onEndGetPermissionsDelegate == null)) {
                this.onEndGetPermissionsDelegate = new EndOperationDelegate(this.OnEndGetPermissions);
            }
            if ((this.onGetPermissionsCompletedDelegate == null)) {
                this.onGetPermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPermissionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPermissionsDelegate, new object[] {
                        sSessionKey,
                        sUserGroupId,
                        iSecurityObjectId}, this.onEndGetPermissionsDelegate, this.onGetPermissionsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatSummary(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation) {
            return base.Channel.GetSeatSummary(sSessionKey, sSections, sZones, sScreens, iPerformanceNumber, iPackageNumber, sCalcPackageAllocation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatSummary(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatSummary(sSessionKey, sSections, sZones, sScreens, iPerformanceNumber, iPackageNumber, sCalcPackageAllocation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatSummary(System.IAsyncResult result) {
            return base.Channel.EndGetSeatSummary(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sSections = ((string)(inValues[1]));
            string sZones = ((string)(inValues[2]));
            string sScreens = ((string)(inValues[3]));
            int iPerformanceNumber = ((int)(inValues[4]));
            int iPackageNumber = ((int)(inValues[5]));
            string sCalcPackageAllocation = ((string)(inValues[6]));
            return this.BeginGetSeatSummary(sSessionKey, sSections, sZones, sScreens, iPerformanceNumber, iPackageNumber, sCalcPackageAllocation, callback, asyncState);
        }
        
        private object[] OnEndGetSeatSummary(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatSummaryCompleted(object state) {
            if ((this.GetSeatSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatSummaryCompleted(this, new GetSeatSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatSummaryAsync(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation) {
            this.GetSeatSummaryAsync(sSessionKey, sSections, sZones, sScreens, iPerformanceNumber, iPackageNumber, sCalcPackageAllocation, null);
        }
        
        public void GetSeatSummaryAsync(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation, object userState) {
            if ((this.onBeginGetSeatSummaryDelegate == null)) {
                this.onBeginGetSeatSummaryDelegate = new BeginOperationDelegate(this.OnBeginGetSeatSummary);
            }
            if ((this.onEndGetSeatSummaryDelegate == null)) {
                this.onEndGetSeatSummaryDelegate = new EndOperationDelegate(this.OnEndGetSeatSummary);
            }
            if ((this.onGetSeatSummaryCompletedDelegate == null)) {
                this.onGetSeatSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatSummaryDelegate, new object[] {
                        sSessionKey,
                        sSections,
                        sZones,
                        sScreens,
                        iPerformanceNumber,
                        iPackageNumber,
                        sCalcPackageAllocation}, this.onEndGetSeatSummaryDelegate, this.onGetSeatSummaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx3Response TessituraIntegration.TessituraWebAPI.TessituraSoap.CheckoutEx3(TessituraIntegration.TessituraWebAPI.CheckoutEx3Request request) {
            return base.Channel.CheckoutEx3(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutEx3(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, bool bAuthorize, string sAuthorizationCode, string s3DSecureValues) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx3Request inValue = new TessituraIntegration.TessituraWebAPI.CheckoutEx3Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            inValue.bAuthorize = bAuthorize;
            inValue.sAuthorizationCode = sAuthorizationCode;
            inValue.s3DSecureValues = s3DSecureValues;
            TessituraIntegration.TessituraWebAPI.CheckoutEx3Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).CheckoutEx3(inValue);
            return retVal.CheckoutStatusHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginCheckoutEx3(TessituraIntegration.TessituraWebAPI.CheckoutEx3Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckoutEx3(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckoutEx3(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx3Request inValue = new TessituraIntegration.TessituraWebAPI.CheckoutEx3Request();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            inValue.bAuthorize = bAuthorize;
            inValue.sAuthorizationCode = sAuthorizationCode;
            inValue.s3DSecureValues = s3DSecureValues;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginCheckoutEx3(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutEx3Response TessituraIntegration.TessituraWebAPI.TessituraSoap.EndCheckoutEx3(System.IAsyncResult result) {
            return base.Channel.EndCheckoutEx3(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader EndCheckoutEx3(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutEx3Response retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndCheckoutEx3(result);
            return retVal.CheckoutStatusHeader;
        }
        
        private System.IAsyncResult OnBeginCheckoutEx3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sCCOwner = ((string)(inValues[1]));
            string sCCNumber = ((string)(inValues[2]));
            int iCCType = ((int)(inValues[3]));
            int iCCMonth = ((int)(inValues[4]));
            int iCCYear = ((int)(inValues[5]));
            decimal dAmount = ((decimal)(inValues[6]));
            bool bAllowUnderPayment = ((bool)(inValues[7]));
            string sCardAuthenticationCode = ((string)(inValues[8]));
            int iCCIssueNumber = ((int)(inValues[9]));
            int iCCStartMonth = ((int)(inValues[10]));
            int iCCStartYear = ((int)(inValues[11]));
            bool bAuthorize = ((bool)(inValues[12]));
            string sAuthorizationCode = ((string)(inValues[13]));
            string s3DSecureValues = ((string)(inValues[14]));
            return this.BeginCheckoutEx3(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, s3DSecureValues, callback, asyncState);
        }
        
        private object[] OnEndCheckoutEx3(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader retVal = this.EndCheckoutEx3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckoutEx3Completed(object state) {
            if ((this.CheckoutEx3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckoutEx3Completed(this, new CheckoutEx3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckoutEx3Async(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, bool bAuthorize, string sAuthorizationCode, string s3DSecureValues) {
            this.CheckoutEx3Async(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, s3DSecureValues, null);
        }
        
        public void CheckoutEx3Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    object userState) {
            if ((this.onBeginCheckoutEx3Delegate == null)) {
                this.onBeginCheckoutEx3Delegate = new BeginOperationDelegate(this.OnBeginCheckoutEx3);
            }
            if ((this.onEndCheckoutEx3Delegate == null)) {
                this.onEndCheckoutEx3Delegate = new EndOperationDelegate(this.OnEndCheckoutEx3);
            }
            if ((this.onCheckoutEx3CompletedDelegate == null)) {
                this.onCheckoutEx3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckoutEx3Completed);
            }
            base.InvokeAsync(this.onBeginCheckoutEx3Delegate, new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        bAuthorize,
                        sAuthorizationCode,
                        s3DSecureValues}, this.onEndCheckoutEx3Delegate, this.onCheckoutEx3CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPrintAtHomeSettings() {
            return base.Channel.GetPrintAtHomeSettings();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPrintAtHomeSettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrintAtHomeSettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPrintAtHomeSettings(System.IAsyncResult result) {
            return base.Channel.EndGetPrintAtHomeSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetPrintAtHomeSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPrintAtHomeSettings(callback, asyncState);
        }
        
        private object[] OnEndGetPrintAtHomeSettings(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPrintAtHomeSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPrintAtHomeSettingsCompleted(object state) {
            if ((this.GetPrintAtHomeSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrintAtHomeSettingsCompleted(this, new GetPrintAtHomeSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrintAtHomeSettingsAsync() {
            this.GetPrintAtHomeSettingsAsync(null);
        }
        
        public void GetPrintAtHomeSettingsAsync(object userState) {
            if ((this.onBeginGetPrintAtHomeSettingsDelegate == null)) {
                this.onBeginGetPrintAtHomeSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetPrintAtHomeSettings);
            }
            if ((this.onEndGetPrintAtHomeSettingsDelegate == null)) {
                this.onEndGetPrintAtHomeSettingsDelegate = new EndOperationDelegate(this.OnEndGetPrintAtHomeSettings);
            }
            if ((this.onGetPrintAtHomeSettingsCompletedDelegate == null)) {
                this.onGetPrintAtHomeSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrintAtHomeSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrintAtHomeSettingsDelegate, null, this.onEndGetPrintAtHomeSettingsDelegate, this.onGetPrintAtHomeSettingsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetConstituentInfoEx(string SessionKey, string TableListTokens) {
            return base.Channel.GetConstituentInfoEx(SessionKey, TableListTokens);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConstituentInfoEx(string SessionKey, string TableListTokens, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConstituentInfoEx(SessionKey, TableListTokens, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetConstituentInfoEx(System.IAsyncResult result) {
            return base.Channel.EndGetConstituentInfoEx(result);
        }
        
        private System.IAsyncResult OnBeginGetConstituentInfoEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string TableListTokens = ((string)(inValues[1]));
            return this.BeginGetConstituentInfoEx(SessionKey, TableListTokens, callback, asyncState);
        }
        
        private object[] OnEndGetConstituentInfoEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetConstituentInfoEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConstituentInfoExCompleted(object state) {
            if ((this.GetConstituentInfoExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConstituentInfoExCompleted(this, new GetConstituentInfoExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConstituentInfoExAsync(string SessionKey, string TableListTokens) {
            this.GetConstituentInfoExAsync(SessionKey, TableListTokens, null);
        }
        
        public void GetConstituentInfoExAsync(string SessionKey, string TableListTokens, object userState) {
            if ((this.onBeginGetConstituentInfoExDelegate == null)) {
                this.onBeginGetConstituentInfoExDelegate = new BeginOperationDelegate(this.OnBeginGetConstituentInfoEx);
            }
            if ((this.onEndGetConstituentInfoExDelegate == null)) {
                this.onEndGetConstituentInfoExDelegate = new EndOperationDelegate(this.OnEndGetConstituentInfoEx);
            }
            if ((this.onGetConstituentInfoExCompletedDelegate == null)) {
                this.onGetConstituentInfoExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConstituentInfoExCompleted);
            }
            base.InvokeAsync(this.onBeginGetConstituentInfoExDelegate, new object[] {
                        SessionKey,
                        TableListTokens}, this.onEndGetConstituentInfoExDelegate, this.onGetConstituentInfoExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformancesEx3(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, string sPerformanceIds, string sSeasonIds) {
            return base.Channel.GetPerformancesEx3(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformancesEx3(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginGetPerformancesEx3(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformancesEx3(System.IAsyncResult result) {
            return base.Channel.EndGetPerformancesEx3(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformancesEx3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            short iVenueID = ((short)(inValues[3]));
            short iModeOfSale = ((short)(inValues[4]));
            int iBusinessUnit = ((int)(inValues[5]));
            string sSortString = ((string)(inValues[6]));
            string sKeywords = ((string)(inValues[7]));
            string cKeywordAndOrStatement = ((string)(inValues[8]));
            string sArtistLastName = ((string)(inValues[9]));
            string sFullText = ((string)(inValues[10]));
            string sFullTextType = ((string)(inValues[11]));
            string sContentType = ((string)(inValues[12]));
            string sPerformanceIds = ((string)(inValues[13]));
            string sSeasonIds = ((string)(inValues[14]));
            return this.BeginGetPerformancesEx3(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, callback, asyncState);
        }
        
        private object[] OnEndGetPerformancesEx3(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformancesEx3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformancesEx3Completed(object state) {
            if ((this.GetPerformancesEx3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformancesEx3Completed(this, new GetPerformancesEx3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformancesEx3Async(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, string sPerformanceIds, string sSeasonIds) {
            this.GetPerformancesEx3Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, null);
        }
        
        public void GetPerformancesEx3Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    object userState) {
            if ((this.onBeginGetPerformancesEx3Delegate == null)) {
                this.onBeginGetPerformancesEx3Delegate = new BeginOperationDelegate(this.OnBeginGetPerformancesEx3);
            }
            if ((this.onEndGetPerformancesEx3Delegate == null)) {
                this.onEndGetPerformancesEx3Delegate = new EndOperationDelegate(this.OnEndGetPerformancesEx3);
            }
            if ((this.onGetPerformancesEx3CompletedDelegate == null)) {
                this.onGetPerformancesEx3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformancesEx3Completed);
            }
            base.InvokeAsync(this.onBeginGetPerformancesEx3Delegate, new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPerformanceIds,
                        sSeasonIds}, this.onEndGetPerformancesEx3Delegate, this.onGetPerformancesEx3CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionsEx3(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds) {
            return base.Channel.GetProductionsEx3(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, sPerformanceIds, sSeasonIds, sProductionSeasonIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionsEx3(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginGetProductionsEx3(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, sPerformanceIds, sSeasonIds, sProductionSeasonIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionsEx3(System.IAsyncResult result) {
            return base.Channel.EndGetProductionsEx3(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionsEx3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            string sPerfType = ((string)(inValues[3]));
            string sArtist = ((string)(inValues[4]));
            short iVenueID = ((short)(inValues[5]));
            string sKeywords = ((string)(inValues[6]));
            short iModeOfSale = ((short)(inValues[7]));
            int iBusinessUnit = ((int)(inValues[8]));
            string sFullText = ((string)(inValues[9]));
            string sFullTextType = ((string)(inValues[10]));
            string sContentType = ((string)(inValues[11]));
            int iKeywordAndOrStatement = ((int)(inValues[12]));
            string sPerformanceIds = ((string)(inValues[13]));
            string sSeasonIds = ((string)(inValues[14]));
            string sProductionSeasonIds = ((string)(inValues[15]));
            return this.BeginGetProductionsEx3(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, sPerformanceIds, sSeasonIds, sProductionSeasonIds, callback, asyncState);
        }
        
        private object[] OnEndGetProductionsEx3(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionsEx3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionsEx3Completed(object state) {
            if ((this.GetProductionsEx3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionsEx3Completed(this, new GetProductionsEx3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionsEx3Async(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds) {
            this.GetProductionsEx3Async(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, sPerformanceIds, sSeasonIds, sProductionSeasonIds, null);
        }
        
        public void GetProductionsEx3Async(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds, 
                    object userState) {
            if ((this.onBeginGetProductionsEx3Delegate == null)) {
                this.onBeginGetProductionsEx3Delegate = new BeginOperationDelegate(this.OnBeginGetProductionsEx3);
            }
            if ((this.onEndGetProductionsEx3Delegate == null)) {
                this.onEndGetProductionsEx3Delegate = new EndOperationDelegate(this.OnEndGetProductionsEx3);
            }
            if ((this.onGetProductionsEx3CompletedDelegate == null)) {
                this.onGetProductionsEx3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionsEx3Completed);
            }
            base.InvokeAsync(this.onBeginGetProductionsEx3Delegate, new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        iKeywordAndOrStatement,
                        sPerformanceIds,
                        sSeasonIds,
                        sProductionSeasonIds}, this.onEndGetProductionsEx3Delegate, this.onGetProductionsEx3CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackagesEx3(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers) {
            return base.Channel.GetPackagesEx3(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, sPackageNumbers);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackagesEx3(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginGetPackagesEx3(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, sPackageNumbers, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackagesEx3(System.IAsyncResult result) {
            return base.Channel.EndGetPackagesEx3(result);
        }
        
        private System.IAsyncResult OnBeginGetPackagesEx3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            short iVenueID = ((short)(inValues[3]));
            short iModeOfSale = ((short)(inValues[4]));
            int iBusinessUnit = ((int)(inValues[5]));
            string sSortString = ((string)(inValues[6]));
            string sKeywords = ((string)(inValues[7]));
            string cKeywordAndOrStatement = ((string)(inValues[8]));
            string sArtistLastName = ((string)(inValues[9]));
            int iSeason = ((int)(inValues[10]));
            int iPackageType = ((int)(inValues[11]));
            bool bMatchAllPerformances = ((bool)(inValues[12]));
            string sFullText = ((string)(inValues[13]));
            string sFullTextType = ((string)(inValues[14]));
            string sContentType = ((string)(inValues[15]));
            string sPackageNumbers = ((string)(inValues[16]));
            return this.BeginGetPackagesEx3(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, sPackageNumbers, callback, asyncState);
        }
        
        private object[] OnEndGetPackagesEx3(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackagesEx3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackagesEx3Completed(object state) {
            if ((this.GetPackagesEx3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackagesEx3Completed(this, new GetPackagesEx3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackagesEx3Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers) {
            this.GetPackagesEx3Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, sPackageNumbers, null);
        }
        
        public void GetPackagesEx3Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers, 
                    object userState) {
            if ((this.onBeginGetPackagesEx3Delegate == null)) {
                this.onBeginGetPackagesEx3Delegate = new BeginOperationDelegate(this.OnBeginGetPackagesEx3);
            }
            if ((this.onEndGetPackagesEx3Delegate == null)) {
                this.onEndGetPackagesEx3Delegate = new EndOperationDelegate(this.OnEndGetPackagesEx3);
            }
            if ((this.onGetPackagesEx3CompletedDelegate == null)) {
                this.onGetPackagesEx3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackagesEx3Completed);
            }
            base.InvokeAsync(this.onBeginGetPackagesEx3Delegate, new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPackageNumbers}, this.onEndGetPackagesEx3Delegate, this.onGetPackagesEx3CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformanceDetailEx(int iPerf_no, short iModeOfSale, string sContentType) {
            return base.Channel.GetPerformanceDetailEx(iPerf_no, iModeOfSale, sContentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailEx(int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailEx(iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformanceDetailEx(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iPerf_no = ((int)(inValues[0]));
            short iModeOfSale = ((short)(inValues[1]));
            string sContentType = ((string)(inValues[2]));
            return this.BeginGetPerformanceDetailEx(iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformanceDetailEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailExCompleted(object state) {
            if ((this.GetPerformanceDetailExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailExCompleted(this, new GetPerformanceDetailExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailExAsync(int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailExAsync(iPerf_no, iModeOfSale, sContentType, null);
        }
        
        public void GetPerformanceDetailExAsync(int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.onBeginGetPerformanceDetailExDelegate == null)) {
                this.onBeginGetPerformanceDetailExDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailEx);
            }
            if ((this.onEndGetPerformanceDetailExDelegate == null)) {
                this.onEndGetPerformanceDetailExDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailEx);
            }
            if ((this.onGetPerformanceDetailExCompletedDelegate == null)) {
                this.onGetPerformanceDetailExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailExDelegate, new object[] {
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.onEndGetPerformanceDetailExDelegate, this.onGetPerformanceDetailExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformanceDetailWithDiscountingEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            return base.Channel.GetPerformanceDetailWithDiscountingEx(SessionKey, iPerf_no, iModeOfSale, sContentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailWithDiscountingEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailWithDiscountingEx(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformanceDetailWithDiscountingEx(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailWithDiscountingEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailWithDiscountingEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            short iModeOfSale = ((short)(inValues[2]));
            string sContentType = ((string)(inValues[3]));
            return this.BeginGetPerformanceDetailWithDiscountingEx(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailWithDiscountingEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformanceDetailWithDiscountingEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailWithDiscountingExCompleted(object state) {
            if ((this.GetPerformanceDetailWithDiscountingExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailWithDiscountingExCompleted(this, new GetPerformanceDetailWithDiscountingExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailWithDiscountingExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingExAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        public void GetPerformanceDetailWithDiscountingExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.onBeginGetPerformanceDetailWithDiscountingExDelegate == null)) {
                this.onBeginGetPerformanceDetailWithDiscountingExDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailWithDiscountingEx);
            }
            if ((this.onEndGetPerformanceDetailWithDiscountingExDelegate == null)) {
                this.onEndGetPerformanceDetailWithDiscountingExDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailWithDiscountingEx);
            }
            if ((this.onGetPerformanceDetailWithDiscountingExCompletedDelegate == null)) {
                this.onGetPerformanceDetailWithDiscountingExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailWithDiscountingExDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.onEndGetPerformanceDetailWithDiscountingExDelegate, this.onGetPerformanceDetailWithDiscountingExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetContactOptions(string sSessionKey, string sRestrictionType) {
            return base.Channel.GetContactOptions(sSessionKey, sRestrictionType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetContactOptions(string sSessionKey, string sRestrictionType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactOptions(sSessionKey, sRestrictionType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetContactOptions(System.IAsyncResult result) {
            return base.Channel.EndGetContactOptions(result);
        }
        
        private System.IAsyncResult OnBeginGetContactOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sRestrictionType = ((string)(inValues[1]));
            return this.BeginGetContactOptions(sSessionKey, sRestrictionType, callback, asyncState);
        }
        
        private object[] OnEndGetContactOptions(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetContactOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactOptionsCompleted(object state) {
            if ((this.GetContactOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactOptionsCompleted(this, new GetContactOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactOptionsAsync(string sSessionKey, string sRestrictionType) {
            this.GetContactOptionsAsync(sSessionKey, sRestrictionType, null);
        }
        
        public void GetContactOptionsAsync(string sSessionKey, string sRestrictionType, object userState) {
            if ((this.onBeginGetContactOptionsDelegate == null)) {
                this.onBeginGetContactOptionsDelegate = new BeginOperationDelegate(this.OnBeginGetContactOptions);
            }
            if ((this.onEndGetContactOptionsDelegate == null)) {
                this.onEndGetContactOptionsDelegate = new EndOperationDelegate(this.OnEndGetContactOptions);
            }
            if ((this.onGetContactOptionsCompletedDelegate == null)) {
                this.onGetContactOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactOptionsDelegate, new object[] {
                        sSessionKey,
                        sRestrictionType}, this.onEndGetContactOptionsDelegate, this.onGetContactOptionsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetMailPurposes(string sSessionKey, string sPurposeType) {
            return base.Channel.GetMailPurposes(sSessionKey, sPurposeType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMailPurposes(string sSessionKey, string sPurposeType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMailPurposes(sSessionKey, sPurposeType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetMailPurposes(System.IAsyncResult result) {
            return base.Channel.EndGetMailPurposes(result);
        }
        
        private System.IAsyncResult OnBeginGetMailPurposes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sPurposeType = ((string)(inValues[1]));
            return this.BeginGetMailPurposes(sSessionKey, sPurposeType, callback, asyncState);
        }
        
        private object[] OnEndGetMailPurposes(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetMailPurposes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMailPurposesCompleted(object state) {
            if ((this.GetMailPurposesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMailPurposesCompleted(this, new GetMailPurposesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMailPurposesAsync(string sSessionKey, string sPurposeType) {
            this.GetMailPurposesAsync(sSessionKey, sPurposeType, null);
        }
        
        public void GetMailPurposesAsync(string sSessionKey, string sPurposeType, object userState) {
            if ((this.onBeginGetMailPurposesDelegate == null)) {
                this.onBeginGetMailPurposesDelegate = new BeginOperationDelegate(this.OnBeginGetMailPurposes);
            }
            if ((this.onEndGetMailPurposesDelegate == null)) {
                this.onEndGetMailPurposesDelegate = new EndOperationDelegate(this.OnEndGetMailPurposes);
            }
            if ((this.onGetMailPurposesCompletedDelegate == null)) {
                this.onGetMailPurposesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMailPurposesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMailPurposesDelegate, new object[] {
                        sSessionKey,
                        sPurposeType}, this.onEndGetMailPurposesDelegate, this.onGetMailPurposesCompletedDelegate, userState);
        }
        
        public void UpdateGiftAidDeclaration(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew) {
            base.Channel.UpdateGiftAidDeclaration(sSessionKey, sNotes, iGiftaidType, iN1N2Ind, iContactMethod, iIneligibleReason, iDocumentStatus, dStartDate, dEndDate, cEligibleInd, cCreateNew);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateGiftAidDeclaration(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGiftAidDeclaration(sSessionKey, sNotes, iGiftaidType, iN1N2Ind, iContactMethod, iIneligibleReason, iDocumentStatus, dStartDate, dEndDate, cEligibleInd, cCreateNew, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateGiftAidDeclaration(System.IAsyncResult result) {
            base.Channel.EndUpdateGiftAidDeclaration(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGiftAidDeclaration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sNotes = ((string)(inValues[1]));
            int iGiftaidType = ((int)(inValues[2]));
            int iN1N2Ind = ((int)(inValues[3]));
            int iContactMethod = ((int)(inValues[4]));
            int iIneligibleReason = ((int)(inValues[5]));
            int iDocumentStatus = ((int)(inValues[6]));
            System.DateTime dStartDate = ((System.DateTime)(inValues[7]));
            System.DateTime dEndDate = ((System.DateTime)(inValues[8]));
            char cEligibleInd = ((char)(inValues[9]));
            char cCreateNew = ((char)(inValues[10]));
            return this.BeginUpdateGiftAidDeclaration(sSessionKey, sNotes, iGiftaidType, iN1N2Ind, iContactMethod, iIneligibleReason, iDocumentStatus, dStartDate, dEndDate, cEligibleInd, cCreateNew, callback, asyncState);
        }
        
        private object[] OnEndUpdateGiftAidDeclaration(System.IAsyncResult result) {
            this.EndUpdateGiftAidDeclaration(result);
            return null;
        }
        
        private void OnUpdateGiftAidDeclarationCompleted(object state) {
            if ((this.UpdateGiftAidDeclarationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGiftAidDeclarationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGiftAidDeclarationAsync(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew) {
            this.UpdateGiftAidDeclarationAsync(sSessionKey, sNotes, iGiftaidType, iN1N2Ind, iContactMethod, iIneligibleReason, iDocumentStatus, dStartDate, dEndDate, cEligibleInd, cCreateNew, null);
        }
        
        public void UpdateGiftAidDeclarationAsync(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew, object userState) {
            if ((this.onBeginUpdateGiftAidDeclarationDelegate == null)) {
                this.onBeginUpdateGiftAidDeclarationDelegate = new BeginOperationDelegate(this.OnBeginUpdateGiftAidDeclaration);
            }
            if ((this.onEndUpdateGiftAidDeclarationDelegate == null)) {
                this.onEndUpdateGiftAidDeclarationDelegate = new EndOperationDelegate(this.OnEndUpdateGiftAidDeclaration);
            }
            if ((this.onUpdateGiftAidDeclarationCompletedDelegate == null)) {
                this.onUpdateGiftAidDeclarationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGiftAidDeclarationCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGiftAidDeclarationDelegate, new object[] {
                        sSessionKey,
                        sNotes,
                        iGiftaidType,
                        iN1N2Ind,
                        iContactMethod,
                        iIneligibleReason,
                        iDocumentStatus,
                        dStartDate,
                        dEndDate,
                        cEligibleInd,
                        cCreateNew}, this.onEndUpdateGiftAidDeclarationDelegate, this.onUpdateGiftAidDeclarationCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetBillingSchedules(string sSessionKey) {
            return base.Channel.GetBillingSchedules(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBillingSchedules(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBillingSchedules(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetBillingSchedules(System.IAsyncResult result) {
            return base.Channel.EndGetBillingSchedules(result);
        }
        
        private System.IAsyncResult OnBeginGetBillingSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginGetBillingSchedules(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetBillingSchedules(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetBillingSchedules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBillingSchedulesCompleted(object state) {
            if ((this.GetBillingSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBillingSchedulesCompleted(this, new GetBillingSchedulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBillingSchedulesAsync(string sSessionKey) {
            this.GetBillingSchedulesAsync(sSessionKey, null);
        }
        
        public void GetBillingSchedulesAsync(string sSessionKey, object userState) {
            if ((this.onBeginGetBillingSchedulesDelegate == null)) {
                this.onBeginGetBillingSchedulesDelegate = new BeginOperationDelegate(this.OnBeginGetBillingSchedules);
            }
            if ((this.onEndGetBillingSchedulesDelegate == null)) {
                this.onEndGetBillingSchedulesDelegate = new EndOperationDelegate(this.OnEndGetBillingSchedules);
            }
            if ((this.onGetBillingSchedulesCompletedDelegate == null)) {
                this.onGetBillingSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBillingSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetBillingSchedulesDelegate, new object[] {
                        sSessionKey}, this.onEndGetBillingSchedulesDelegate, this.onGetBillingSchedulesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            return base.Channel.GetPackageDetailEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPackageDetailEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackageDetailEx(System.IAsyncResult result) {
            return base.Channel.EndGetPackageDetailEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPackageDetailEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PackageID = ((int)(inValues[1]));
            int ModeOfSale = ((int)(inValues[2]));
            string sContentTypes = ((string)(inValues[3]));
            string sPerformanceContentTypes = ((string)(inValues[4]));
            return this.BeginGetPackageDetailEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        private object[] OnEndGetPackageDetailEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackageDetailEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackageDetailExCompleted(object state) {
            if ((this.GetPackageDetailExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackageDetailExCompleted(this, new GetPackageDetailExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            this.GetPackageDetailExAsync(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, null);
        }
        
        public void GetPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.onBeginGetPackageDetailExDelegate == null)) {
                this.onBeginGetPackageDetailExDelegate = new BeginOperationDelegate(this.OnBeginGetPackageDetailEx);
            }
            if ((this.onEndGetPackageDetailExDelegate == null)) {
                this.onEndGetPackageDetailExDelegate = new EndOperationDelegate(this.OnEndGetPackageDetailEx);
            }
            if ((this.onGetPackageDetailExCompletedDelegate == null)) {
                this.onGetPackageDetailExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPackageDetailExDelegate, new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes}, this.onEndGetPackageDetailExDelegate, this.onGetPackageDetailExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackageDetailWithDiscountingEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            return base.Channel.GetPackageDetailWithDiscountingEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackageDetailWithDiscountingEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPackageDetailWithDiscountingEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackageDetailWithDiscountingEx(System.IAsyncResult result) {
            return base.Channel.EndGetPackageDetailWithDiscountingEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPackageDetailWithDiscountingEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PackageID = ((int)(inValues[1]));
            int ModeOfSale = ((int)(inValues[2]));
            string sContentTypes = ((string)(inValues[3]));
            string sPerformanceContentTypes = ((string)(inValues[4]));
            return this.BeginGetPackageDetailWithDiscountingEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        private object[] OnEndGetPackageDetailWithDiscountingEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackageDetailWithDiscountingEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackageDetailWithDiscountingExCompleted(object state) {
            if ((this.GetPackageDetailWithDiscountingExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackageDetailWithDiscountingExCompleted(this, new GetPackageDetailWithDiscountingExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackageDetailWithDiscountingExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            this.GetPackageDetailWithDiscountingExAsync(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, null);
        }
        
        public void GetPackageDetailWithDiscountingExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.onBeginGetPackageDetailWithDiscountingExDelegate == null)) {
                this.onBeginGetPackageDetailWithDiscountingExDelegate = new BeginOperationDelegate(this.OnBeginGetPackageDetailWithDiscountingEx);
            }
            if ((this.onEndGetPackageDetailWithDiscountingExDelegate == null)) {
                this.onEndGetPackageDetailWithDiscountingExDelegate = new EndOperationDelegate(this.OnEndGetPackageDetailWithDiscountingEx);
            }
            if ((this.onGetPackageDetailWithDiscountingExCompletedDelegate == null)) {
                this.onGetPackageDetailWithDiscountingExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailWithDiscountingExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPackageDetailWithDiscountingExDelegate, new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes}, this.onEndGetPackageDetailWithDiscountingExDelegate, this.onGetPackageDetailWithDiscountingExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetNFSPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            return base.Channel.GetNFSPackageDetailEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNFSPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNFSPackageDetailEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetNFSPackageDetailEx(System.IAsyncResult result) {
            return base.Channel.EndGetNFSPackageDetailEx(result);
        }
        
        private System.IAsyncResult OnBeginGetNFSPackageDetailEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PackageID = ((int)(inValues[1]));
            int ModeOfSale = ((int)(inValues[2]));
            string sContentTypes = ((string)(inValues[3]));
            string sPerformanceContentTypes = ((string)(inValues[4]));
            return this.BeginGetNFSPackageDetailEx(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        private object[] OnEndGetNFSPackageDetailEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetNFSPackageDetailEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNFSPackageDetailExCompleted(object state) {
            if ((this.GetNFSPackageDetailExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNFSPackageDetailExCompleted(this, new GetNFSPackageDetailExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNFSPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            this.GetNFSPackageDetailExAsync(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, null);
        }
        
        public void GetNFSPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.onBeginGetNFSPackageDetailExDelegate == null)) {
                this.onBeginGetNFSPackageDetailExDelegate = new BeginOperationDelegate(this.OnBeginGetNFSPackageDetailEx);
            }
            if ((this.onEndGetNFSPackageDetailExDelegate == null)) {
                this.onEndGetNFSPackageDetailExDelegate = new EndOperationDelegate(this.OnEndGetNFSPackageDetailEx);
            }
            if ((this.onGetNFSPackageDetailExCompletedDelegate == null)) {
                this.onGetNFSPackageDetailExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNFSPackageDetailExCompleted);
            }
            base.InvokeAsync(this.onBeginGetNFSPackageDetailExDelegate, new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes}, this.onEndGetNFSPackageDetailExDelegate, this.onGetNFSPackageDetailExCompletedDelegate, userState);
        }
        
        public void ClearCart(string sSessionKey, int iOrderNumber) {
            base.Channel.ClearCart(sSessionKey, iOrderNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClearCart(string sSessionKey, int iOrderNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearCart(sSessionKey, iOrderNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClearCart(System.IAsyncResult result) {
            base.Channel.EndClearCart(result);
        }
        
        private System.IAsyncResult OnBeginClearCart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iOrderNumber = ((int)(inValues[1]));
            return this.BeginClearCart(sSessionKey, iOrderNumber, callback, asyncState);
        }
        
        private object[] OnEndClearCart(System.IAsyncResult result) {
            this.EndClearCart(result);
            return null;
        }
        
        private void OnClearCartCompleted(object state) {
            if ((this.ClearCartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearCartAsync(string sSessionKey, int iOrderNumber) {
            this.ClearCartAsync(sSessionKey, iOrderNumber, null);
        }
        
        public void ClearCartAsync(string sSessionKey, int iOrderNumber, object userState) {
            if ((this.onBeginClearCartDelegate == null)) {
                this.onBeginClearCartDelegate = new BeginOperationDelegate(this.OnBeginClearCart);
            }
            if ((this.onEndClearCartDelegate == null)) {
                this.onEndClearCartDelegate = new EndOperationDelegate(this.OnEndClearCart);
            }
            if ((this.onClearCartCompletedDelegate == null)) {
                this.onClearCartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearCartCompleted);
            }
            base.InvokeAsync(this.onBeginClearCartDelegate, new object[] {
                        sSessionKey,
                        iOrderNumber}, this.onEndClearCartDelegate, this.onClearCartCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSubLineItems(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus) {
            return base.Channel.GetSubLineItems(SessionKey, dStartDate, dEndDate, sSeasonNo, sPerfNo, sProdSeason, sPackageNo, sSublineitemStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSubLineItems(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSubLineItems(SessionKey, dStartDate, dEndDate, sSeasonNo, sPerfNo, sProdSeason, sPackageNo, sSublineitemStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSubLineItems(System.IAsyncResult result) {
            return base.Channel.EndGetSubLineItems(result);
        }
        
        private System.IAsyncResult OnBeginGetSubLineItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            System.DateTime dStartDate = ((System.DateTime)(inValues[1]));
            System.DateTime dEndDate = ((System.DateTime)(inValues[2]));
            string sSeasonNo = ((string)(inValues[3]));
            string sPerfNo = ((string)(inValues[4]));
            string sProdSeason = ((string)(inValues[5]));
            string sPackageNo = ((string)(inValues[6]));
            string sSublineitemStatus = ((string)(inValues[7]));
            return this.BeginGetSubLineItems(SessionKey, dStartDate, dEndDate, sSeasonNo, sPerfNo, sProdSeason, sPackageNo, sSublineitemStatus, callback, asyncState);
        }
        
        private object[] OnEndGetSubLineItems(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSubLineItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSubLineItemsCompleted(object state) {
            if ((this.GetSubLineItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSubLineItemsCompleted(this, new GetSubLineItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSubLineItemsAsync(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus) {
            this.GetSubLineItemsAsync(SessionKey, dStartDate, dEndDate, sSeasonNo, sPerfNo, sProdSeason, sPackageNo, sSublineitemStatus, null);
        }
        
        public void GetSubLineItemsAsync(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus, object userState) {
            if ((this.onBeginGetSubLineItemsDelegate == null)) {
                this.onBeginGetSubLineItemsDelegate = new BeginOperationDelegate(this.OnBeginGetSubLineItems);
            }
            if ((this.onEndGetSubLineItemsDelegate == null)) {
                this.onEndGetSubLineItemsDelegate = new EndOperationDelegate(this.OnEndGetSubLineItems);
            }
            if ((this.onGetSubLineItemsCompletedDelegate == null)) {
                this.onGetSubLineItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSubLineItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSubLineItemsDelegate, new object[] {
                        SessionKey,
                        dStartDate,
                        dEndDate,
                        sSeasonNo,
                        sPerfNo,
                        sProdSeason,
                        sPackageNo,
                        sSublineitemStatus}, this.onEndGetSubLineItemsDelegate, this.onGetSubLineItemsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ApplyOnAccount(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount) {
            return base.Channel.ApplyOnAccount(sSessionKey, cAction, iPaymentNo, iPaymentMethod, dPaymentAmount);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplyOnAccount(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplyOnAccount(sSessionKey, cAction, iPaymentNo, iPaymentMethod, dPaymentAmount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndApplyOnAccount(System.IAsyncResult result) {
            return base.Channel.EndApplyOnAccount(result);
        }
        
        private System.IAsyncResult OnBeginApplyOnAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            char cAction = ((char)(inValues[1]));
            int iPaymentNo = ((int)(inValues[2]));
            int iPaymentMethod = ((int)(inValues[3]));
            decimal dPaymentAmount = ((decimal)(inValues[4]));
            return this.BeginApplyOnAccount(sSessionKey, cAction, iPaymentNo, iPaymentMethod, dPaymentAmount, callback, asyncState);
        }
        
        private object[] OnEndApplyOnAccount(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndApplyOnAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplyOnAccountCompleted(object state) {
            if ((this.ApplyOnAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplyOnAccountCompleted(this, new ApplyOnAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplyOnAccountAsync(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount) {
            this.ApplyOnAccountAsync(sSessionKey, cAction, iPaymentNo, iPaymentMethod, dPaymentAmount, null);
        }
        
        public void ApplyOnAccountAsync(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount, object userState) {
            if ((this.onBeginApplyOnAccountDelegate == null)) {
                this.onBeginApplyOnAccountDelegate = new BeginOperationDelegate(this.OnBeginApplyOnAccount);
            }
            if ((this.onEndApplyOnAccountDelegate == null)) {
                this.onEndApplyOnAccountDelegate = new EndOperationDelegate(this.OnEndApplyOnAccount);
            }
            if ((this.onApplyOnAccountCompletedDelegate == null)) {
                this.onApplyOnAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplyOnAccountCompleted);
            }
            base.InvokeAsync(this.onBeginApplyOnAccountDelegate, new object[] {
                        sSessionKey,
                        cAction,
                        iPaymentNo,
                        iPaymentMethod,
                        dPaymentAmount}, this.onEndApplyOnAccountDelegate, this.onApplyOnAccountCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetOnAccountInfo(string sSessionKey, string sPaymentMethods) {
            return base.Channel.GetOnAccountInfo(sSessionKey, sPaymentMethods);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOnAccountInfo(string sSessionKey, string sPaymentMethods, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOnAccountInfo(sSessionKey, sPaymentMethods, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetOnAccountInfo(System.IAsyncResult result) {
            return base.Channel.EndGetOnAccountInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetOnAccountInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sPaymentMethods = ((string)(inValues[1]));
            return this.BeginGetOnAccountInfo(sSessionKey, sPaymentMethods, callback, asyncState);
        }
        
        private object[] OnEndGetOnAccountInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetOnAccountInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOnAccountInfoCompleted(object state) {
            if ((this.GetOnAccountInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOnAccountInfoCompleted(this, new GetOnAccountInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOnAccountInfoAsync(string sSessionKey, string sPaymentMethods) {
            this.GetOnAccountInfoAsync(sSessionKey, sPaymentMethods, null);
        }
        
        public void GetOnAccountInfoAsync(string sSessionKey, string sPaymentMethods, object userState) {
            if ((this.onBeginGetOnAccountInfoDelegate == null)) {
                this.onBeginGetOnAccountInfoDelegate = new BeginOperationDelegate(this.OnBeginGetOnAccountInfo);
            }
            if ((this.onEndGetOnAccountInfoDelegate == null)) {
                this.onEndGetOnAccountInfoDelegate = new EndOperationDelegate(this.OnEndGetOnAccountInfo);
            }
            if ((this.onGetOnAccountInfoCompletedDelegate == null)) {
                this.onGetOnAccountInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOnAccountInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetOnAccountInfoDelegate, new object[] {
                        sSessionKey,
                        sPaymentMethods}, this.onEndGetOnAccountInfoDelegate, this.onGetOnAccountInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ApplyDiscount(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly) {
            return base.Channel.ApplyDiscount(sSessionKey, iLineItemNumber, sSubLineItemNumber, iDiscountNumber, cVerifyOnly);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplyDiscount(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplyDiscount(sSessionKey, iLineItemNumber, sSubLineItemNumber, iDiscountNumber, cVerifyOnly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndApplyDiscount(System.IAsyncResult result) {
            return base.Channel.EndApplyDiscount(result);
        }
        
        private System.IAsyncResult OnBeginApplyDiscount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iLineItemNumber = ((int)(inValues[1]));
            string sSubLineItemNumber = ((string)(inValues[2]));
            int iDiscountNumber = ((int)(inValues[3]));
            char cVerifyOnly = ((char)(inValues[4]));
            return this.BeginApplyDiscount(sSessionKey, iLineItemNumber, sSubLineItemNumber, iDiscountNumber, cVerifyOnly, callback, asyncState);
        }
        
        private object[] OnEndApplyDiscount(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndApplyDiscount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplyDiscountCompleted(object state) {
            if ((this.ApplyDiscountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplyDiscountCompleted(this, new ApplyDiscountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplyDiscountAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly) {
            this.ApplyDiscountAsync(sSessionKey, iLineItemNumber, sSubLineItemNumber, iDiscountNumber, cVerifyOnly, null);
        }
        
        public void ApplyDiscountAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly, object userState) {
            if ((this.onBeginApplyDiscountDelegate == null)) {
                this.onBeginApplyDiscountDelegate = new BeginOperationDelegate(this.OnBeginApplyDiscount);
            }
            if ((this.onEndApplyDiscountDelegate == null)) {
                this.onEndApplyDiscountDelegate = new EndOperationDelegate(this.OnEndApplyDiscount);
            }
            if ((this.onApplyDiscountCompletedDelegate == null)) {
                this.onApplyDiscountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplyDiscountCompleted);
            }
            base.InvokeAsync(this.onBeginApplyDiscountDelegate, new object[] {
                        sSessionKey,
                        iLineItemNumber,
                        sSubLineItemNumber,
                        iDiscountNumber,
                        cVerifyOnly}, this.onEndApplyDiscountDelegate, this.onApplyDiscountCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateSubLineItemPrice(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly) {
            return base.Channel.UpdateSubLineItemPrice(sSessionKey, iLineItemNumber, sSubLineItemNumber, dNewPrice, cVerifyOnly);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSubLineItemPrice(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSubLineItemPrice(sSessionKey, iLineItemNumber, sSubLineItemNumber, dNewPrice, cVerifyOnly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateSubLineItemPrice(System.IAsyncResult result) {
            return base.Channel.EndUpdateSubLineItemPrice(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSubLineItemPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iLineItemNumber = ((int)(inValues[1]));
            string sSubLineItemNumber = ((string)(inValues[2]));
            decimal dNewPrice = ((decimal)(inValues[3]));
            char cVerifyOnly = ((char)(inValues[4]));
            return this.BeginUpdateSubLineItemPrice(sSessionKey, iLineItemNumber, sSubLineItemNumber, dNewPrice, cVerifyOnly, callback, asyncState);
        }
        
        private object[] OnEndUpdateSubLineItemPrice(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateSubLineItemPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSubLineItemPriceCompleted(object state) {
            if ((this.UpdateSubLineItemPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSubLineItemPriceCompleted(this, new UpdateSubLineItemPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSubLineItemPriceAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly) {
            this.UpdateSubLineItemPriceAsync(sSessionKey, iLineItemNumber, sSubLineItemNumber, dNewPrice, cVerifyOnly, null);
        }
        
        public void UpdateSubLineItemPriceAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly, object userState) {
            if ((this.onBeginUpdateSubLineItemPriceDelegate == null)) {
                this.onBeginUpdateSubLineItemPriceDelegate = new BeginOperationDelegate(this.OnBeginUpdateSubLineItemPrice);
            }
            if ((this.onEndUpdateSubLineItemPriceDelegate == null)) {
                this.onEndUpdateSubLineItemPriceDelegate = new EndOperationDelegate(this.OnEndUpdateSubLineItemPrice);
            }
            if ((this.onUpdateSubLineItemPriceCompletedDelegate == null)) {
                this.onUpdateSubLineItemPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSubLineItemPriceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSubLineItemPriceDelegate, new object[] {
                        sSessionKey,
                        iLineItemNumber,
                        sSubLineItemNumber,
                        dNewPrice,
                        cVerifyOnly}, this.onEndUpdateSubLineItemPriceDelegate, this.onUpdateSubLineItemPriceCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateAddressEx(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes) {
            return base.Channel.UpdateAddressEx(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, sMailPurposes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAddressEx(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateAddressEx(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, sMailPurposes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateAddressEx(System.IAsyncResult result) {
            return base.Channel.EndUpdateAddressEx(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAddressEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sPhone = ((string)(inValues[1]));
            string sStreet1 = ((string)(inValues[2]));
            string sStreet2 = ((string)(inValues[3]));
            string sCity = ((string)(inValues[4]));
            string sStateProv = ((string)(inValues[5]));
            string sPostalCode = ((string)(inValues[6]));
            int iCountry = ((int)(inValues[7]));
            string sPhone2 = ((string)(inValues[8]));
            string sFax = ((string)(inValues[9]));
            int iAddressNumber = ((int)(inValues[10]));
            int iAddressType = ((int)(inValues[11]));
            bool bPrimary = ((bool)(inValues[12]));
            string sStartDate = ((string)(inValues[13]));
            string sEndDate = ((string)(inValues[14]));
            string sMonths = ((string)(inValues[15]));
            string sInActive = ((string)(inValues[16]));
            bool bSaveCopyOnChange = ((bool)(inValues[17]));
            string sMailPurposes = ((string)(inValues[18]));
            return this.BeginUpdateAddressEx(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, sMailPurposes, callback, asyncState);
        }
        
        private object[] OnEndUpdateAddressEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateAddressEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAddressExCompleted(object state) {
            if ((this.UpdateAddressExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAddressExCompleted(this, new UpdateAddressExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAddressExAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes) {
            this.UpdateAddressExAsync(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, sMailPurposes, null);
        }
        
        public void UpdateAddressExAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes, 
                    object userState) {
            if ((this.onBeginUpdateAddressExDelegate == null)) {
                this.onBeginUpdateAddressExDelegate = new BeginOperationDelegate(this.OnBeginUpdateAddressEx);
            }
            if ((this.onEndUpdateAddressExDelegate == null)) {
                this.onEndUpdateAddressExDelegate = new EndOperationDelegate(this.OnEndUpdateAddressEx);
            }
            if ((this.onUpdateAddressExCompletedDelegate == null)) {
                this.onUpdateAddressExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAddressExCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAddressExDelegate, new object[] {
                        sSessionKey,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        sFax,
                        iAddressNumber,
                        iAddressType,
                        bPrimary,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sInActive,
                        bSaveCopyOnChange,
                        sMailPurposes}, this.onEndUpdateAddressExDelegate, this.onUpdateAddressExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionDetailEx2(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes) {
            return base.Channel.GetProductionDetailEx2(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionDetailEx2(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductionDetailEx2(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionDetailEx2(System.IAsyncResult result) {
            return base.Channel.EndGetProductionDetailEx2(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionDetailEx2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            int iProd_Season_no = ((int)(inValues[2]));
            short iModeOfSale = ((short)(inValues[3]));
            int iBusinessUnit = ((int)(inValues[4]));
            string sContentTypes = ((string)(inValues[5]));
            string sPerformanceContentTypes = ((string)(inValues[6]));
            return this.BeginGetProductionDetailEx2(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, callback, asyncState);
        }
        
        private object[] OnEndGetProductionDetailEx2(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionDetailEx2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionDetailEx2Completed(object state) {
            if ((this.GetProductionDetailEx2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionDetailEx2Completed(this, new GetProductionDetailEx2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionDetailEx2Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes) {
            this.GetProductionDetailEx2Async(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, null);
        }
        
        public void GetProductionDetailEx2Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.onBeginGetProductionDetailEx2Delegate == null)) {
                this.onBeginGetProductionDetailEx2Delegate = new BeginOperationDelegate(this.OnBeginGetProductionDetailEx2);
            }
            if ((this.onEndGetProductionDetailEx2Delegate == null)) {
                this.onEndGetProductionDetailEx2Delegate = new EndOperationDelegate(this.OnEndGetProductionDetailEx2);
            }
            if ((this.onGetProductionDetailEx2CompletedDelegate == null)) {
                this.onGetProductionDetailEx2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailEx2Completed);
            }
            base.InvokeAsync(this.onBeginGetProductionDetailEx2Delegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit,
                        sContentTypes,
                        sPerformanceContentTypes}, this.onEndGetProductionDetailEx2Delegate, this.onGetProductionDetailEx2CompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetDefaults(string sOrganizationName) {
            return base.Channel.GetDefaults(sOrganizationName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDefaults(string sOrganizationName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDefaults(sOrganizationName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetDefaults(System.IAsyncResult result) {
            return base.Channel.EndGetDefaults(result);
        }
        
        private System.IAsyncResult OnBeginGetDefaults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sOrganizationName = ((string)(inValues[0]));
            return this.BeginGetDefaults(sOrganizationName, callback, asyncState);
        }
        
        private object[] OnEndGetDefaults(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetDefaults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDefaultsCompleted(object state) {
            if ((this.GetDefaultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDefaultsCompleted(this, new GetDefaultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDefaultsAsync(string sOrganizationName) {
            this.GetDefaultsAsync(sOrganizationName, null);
        }
        
        public void GetDefaultsAsync(string sOrganizationName, object userState) {
            if ((this.onBeginGetDefaultsDelegate == null)) {
                this.onBeginGetDefaultsDelegate = new BeginOperationDelegate(this.OnBeginGetDefaults);
            }
            if ((this.onEndGetDefaultsDelegate == null)) {
                this.onEndGetDefaultsDelegate = new EndOperationDelegate(this.OnEndGetDefaults);
            }
            if ((this.onGetDefaultsCompletedDelegate == null)) {
                this.onGetDefaultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDefaultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDefaultsDelegate, new object[] {
                        sOrganizationName}, this.onEndGetDefaultsDelegate, this.onGetDefaultsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet RequestReprint(string sSessionKey, int iOrderNumber, int iEAddressNumber) {
            return base.Channel.RequestReprint(sSessionKey, iOrderNumber, iEAddressNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRequestReprint(string sSessionKey, int iOrderNumber, int iEAddressNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestReprint(sSessionKey, iOrderNumber, iEAddressNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndRequestReprint(System.IAsyncResult result) {
            return base.Channel.EndRequestReprint(result);
        }
        
        private System.IAsyncResult OnBeginRequestReprint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iOrderNumber = ((int)(inValues[1]));
            int iEAddressNumber = ((int)(inValues[2]));
            return this.BeginRequestReprint(sSessionKey, iOrderNumber, iEAddressNumber, callback, asyncState);
        }
        
        private object[] OnEndRequestReprint(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndRequestReprint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestReprintCompleted(object state) {
            if ((this.RequestReprintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestReprintCompleted(this, new RequestReprintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestReprintAsync(string sSessionKey, int iOrderNumber, int iEAddressNumber) {
            this.RequestReprintAsync(sSessionKey, iOrderNumber, iEAddressNumber, null);
        }
        
        public void RequestReprintAsync(string sSessionKey, int iOrderNumber, int iEAddressNumber, object userState) {
            if ((this.onBeginRequestReprintDelegate == null)) {
                this.onBeginRequestReprintDelegate = new BeginOperationDelegate(this.OnBeginRequestReprint);
            }
            if ((this.onEndRequestReprintDelegate == null)) {
                this.onEndRequestReprintDelegate = new EndOperationDelegate(this.OnEndRequestReprint);
            }
            if ((this.onRequestReprintCompletedDelegate == null)) {
                this.onRequestReprintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestReprintCompleted);
            }
            base.InvokeAsync(this.onBeginRequestReprintDelegate, new object[] {
                        sSessionKey,
                        iOrderNumber,
                        iEAddressNumber}, this.onEndRequestReprintDelegate, this.onRequestReprintCompletedDelegate, userState);
        }
        
        public TessituraIntegration.TessituraWebAPI.PerformanceEx GetPerformanceDetailWithDiscountingSYOS(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            return base.Channel.GetPerformanceDetailWithDiscountingSYOS(SessionKey, iPerf_no, iModeOfSale, sContentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailWithDiscountingSYOS(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailWithDiscountingSYOS(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.PerformanceEx EndGetPerformanceDetailWithDiscountingSYOS(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailWithDiscountingSYOS(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailWithDiscountingSYOS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            short iModeOfSale = ((short)(inValues[2]));
            string sContentType = ((string)(inValues[3]));
            return this.BeginGetPerformanceDetailWithDiscountingSYOS(SessionKey, iPerf_no, iModeOfSale, sContentType, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailWithDiscountingSYOS(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.PerformanceEx retVal = this.EndGetPerformanceDetailWithDiscountingSYOS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailWithDiscountingSYOSCompleted(object state) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailWithDiscountingSYOSCompleted(this, new GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailWithDiscountingSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingSYOSAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        public void GetPerformanceDetailWithDiscountingSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.onBeginGetPerformanceDetailWithDiscountingSYOSDelegate == null)) {
                this.onBeginGetPerformanceDetailWithDiscountingSYOSDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailWithDiscountingSYOS);
            }
            if ((this.onEndGetPerformanceDetailWithDiscountingSYOSDelegate == null)) {
                this.onEndGetPerformanceDetailWithDiscountingSYOSDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailWithDiscountingSYOS);
            }
            if ((this.onGetPerformanceDetailWithDiscountingSYOSCompletedDelegate == null)) {
                this.onGetPerformanceDetailWithDiscountingSYOSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingSYOSCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailWithDiscountingSYOSDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.onEndGetPerformanceDetailWithDiscountingSYOSDelegate, this.onGetPerformanceDetailWithDiscountingSYOSCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetProductionDetail(int iPerf_no, short iModeOfSale, int iBusinessUnit) {
            return base.Channel.GetProductionDetail(iPerf_no, iModeOfSale, iBusinessUnit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductionDetail(int iPerf_no, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductionDetail(iPerf_no, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetProductionDetail(System.IAsyncResult result) {
            return base.Channel.EndGetProductionDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetProductionDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iPerf_no = ((int)(inValues[0]));
            short iModeOfSale = ((short)(inValues[1]));
            int iBusinessUnit = ((int)(inValues[2]));
            return this.BeginGetProductionDetail(iPerf_no, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetProductionDetail(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetProductionDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductionDetailCompleted(object state) {
            if ((this.GetProductionDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductionDetailCompleted(this, new GetProductionDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductionDetailAsync(int iPerf_no, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionDetailAsync(iPerf_no, iModeOfSale, iBusinessUnit, null);
        }
        
        public void GetProductionDetailAsync(int iPerf_no, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.onBeginGetProductionDetailDelegate == null)) {
                this.onBeginGetProductionDetailDelegate = new BeginOperationDelegate(this.OnBeginGetProductionDetail);
            }
            if ((this.onEndGetProductionDetailDelegate == null)) {
                this.onEndGetProductionDetailDelegate = new EndOperationDelegate(this.OnEndGetProductionDetail);
            }
            if ((this.onGetProductionDetailCompletedDelegate == null)) {
                this.onGetProductionDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductionDetailDelegate, new object[] {
                        iPerf_no,
                        iModeOfSale,
                        iBusinessUnit}, this.onEndGetProductionDetailDelegate, this.onGetProductionDetailCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformances(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString) {
            return base.Channel.GetPerformances(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sSortString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformances(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformances(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sSortString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformances(System.IAsyncResult result) {
            return base.Channel.EndGetPerformances(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformances(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sStartDate = ((string)(inValues[0]));
            string sEndDate = ((string)(inValues[1]));
            string sPerfType = ((string)(inValues[2]));
            string sArtist = ((string)(inValues[3]));
            short iVenueID = ((short)(inValues[4]));
            string sKeywords = ((string)(inValues[5]));
            short iModeOfSale = ((short)(inValues[6]));
            int iBusinessUnit = ((int)(inValues[7]));
            string sSortString = ((string)(inValues[8]));
            return this.BeginGetPerformances(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sSortString, callback, asyncState);
        }
        
        private object[] OnEndGetPerformances(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformances(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformancesCompleted(object state) {
            if ((this.GetPerformancesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformancesCompleted(this, new GetPerformancesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformancesAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString) {
            this.GetPerformancesAsync(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sSortString, null);
        }
        
        public void GetPerformancesAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString, object userState) {
            if ((this.onBeginGetPerformancesDelegate == null)) {
                this.onBeginGetPerformancesDelegate = new BeginOperationDelegate(this.OnBeginGetPerformances);
            }
            if ((this.onEndGetPerformancesDelegate == null)) {
                this.onEndGetPerformancesDelegate = new EndOperationDelegate(this.OnEndGetPerformances);
            }
            if ((this.onGetPerformancesCompletedDelegate == null)) {
                this.onGetPerformancesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformancesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformancesDelegate, new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString}, this.onEndGetPerformancesDelegate, this.onGetPerformancesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformanceDetail(int iPerf_no, short iModeOfSale) {
            return base.Channel.GetPerformanceDetail(iPerf_no, iModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetail(int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetail(iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformanceDetail(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iPerf_no = ((int)(inValues[0]));
            short iModeOfSale = ((short)(inValues[1]));
            return this.BeginGetPerformanceDetail(iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetail(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformanceDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailCompleted(object state) {
            if ((this.GetPerformanceDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailCompleted(this, new GetPerformanceDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailAsync(int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailAsync(iPerf_no, iModeOfSale, null);
        }
        
        public void GetPerformanceDetailAsync(int iPerf_no, short iModeOfSale, object userState) {
            if ((this.onBeginGetPerformanceDetailDelegate == null)) {
                this.onBeginGetPerformanceDetailDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetail);
            }
            if ((this.onEndGetPerformanceDetailDelegate == null)) {
                this.onEndGetPerformanceDetailDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetail);
            }
            if ((this.onGetPerformanceDetailCompletedDelegate == null)) {
                this.onGetPerformanceDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailDelegate, new object[] {
                        iPerf_no,
                        iModeOfSale}, this.onEndGetPerformanceDetailDelegate, this.onGetPerformanceDetailCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetKeywords(string sKeywordCategory) {
            return base.Channel.GetKeywords(sKeywordCategory);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetKeywords(string sKeywordCategory, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKeywords(sKeywordCategory, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetKeywords(System.IAsyncResult result) {
            return base.Channel.EndGetKeywords(result);
        }
        
        private System.IAsyncResult OnBeginGetKeywords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sKeywordCategory = ((string)(inValues[0]));
            return this.BeginGetKeywords(sKeywordCategory, callback, asyncState);
        }
        
        private object[] OnEndGetKeywords(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetKeywords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKeywordsCompleted(object state) {
            if ((this.GetKeywordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKeywordsCompleted(this, new GetKeywordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKeywordsAsync(string sKeywordCategory) {
            this.GetKeywordsAsync(sKeywordCategory, null);
        }
        
        public void GetKeywordsAsync(string sKeywordCategory, object userState) {
            if ((this.onBeginGetKeywordsDelegate == null)) {
                this.onBeginGetKeywordsDelegate = new BeginOperationDelegate(this.OnBeginGetKeywords);
            }
            if ((this.onEndGetKeywordsDelegate == null)) {
                this.onEndGetKeywordsDelegate = new EndOperationDelegate(this.OnEndGetKeywords);
            }
            if ((this.onGetKeywordsCompletedDelegate == null)) {
                this.onGetKeywordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKeywordsCompleted);
            }
            base.InvokeAsync(this.onBeginGetKeywordsDelegate, new object[] {
                        sKeywordCategory}, this.onEndGetKeywordsDelegate, this.onGetKeywordsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetVenue() {
            return base.Channel.GetVenue();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVenue(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVenue(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetVenue(System.IAsyncResult result) {
            return base.Channel.EndGetVenue(result);
        }
        
        private System.IAsyncResult OnBeginGetVenue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetVenue(callback, asyncState);
        }
        
        private object[] OnEndGetVenue(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetVenue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVenueCompleted(object state) {
            if ((this.GetVenueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVenueCompleted(this, new GetVenueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVenueAsync() {
            this.GetVenueAsync(null);
        }
        
        public void GetVenueAsync(object userState) {
            if ((this.onBeginGetVenueDelegate == null)) {
                this.onBeginGetVenueDelegate = new BeginOperationDelegate(this.OnBeginGetVenue);
            }
            if ((this.onEndGetVenueDelegate == null)) {
                this.onEndGetVenueDelegate = new EndOperationDelegate(this.OnEndGetVenue);
            }
            if ((this.onGetVenueCompletedDelegate == null)) {
                this.onGetVenueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVenueCompleted);
            }
            base.InvokeAsync(this.onBeginGetVenueDelegate, null, this.onEndGetVenueDelegate, this.onGetVenueCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformanceAvailability(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            return base.Channel.GetPerformanceAvailability(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceAvailability(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceAvailability(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformanceAvailability(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceAvailability(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sStartDate = ((string)(inValues[0]));
            string sEndDate = ((string)(inValues[1]));
            string sPerfType = ((string)(inValues[2]));
            string sArtist = ((string)(inValues[3]));
            short iVenueID = ((short)(inValues[4]));
            string sKeywords = ((string)(inValues[5]));
            short iModeOfSale = ((short)(inValues[6]));
            int iBusinessUnit = ((int)(inValues[7]));
            return this.BeginGetPerformanceAvailability(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceAvailability(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformanceAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceAvailabilityCompleted(object state) {
            if ((this.GetPerformanceAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceAvailabilityCompleted(this, new GetPerformanceAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceAvailabilityAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            this.GetPerformanceAvailabilityAsync(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, null);
        }
        
        public void GetPerformanceAvailabilityAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.onBeginGetPerformanceAvailabilityDelegate == null)) {
                this.onBeginGetPerformanceAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceAvailability);
            }
            if ((this.onEndGetPerformanceAvailabilityDelegate == null)) {
                this.onEndGetPerformanceAvailabilityDelegate = new EndOperationDelegate(this.OnEndGetPerformanceAvailability);
            }
            if ((this.onGetPerformanceAvailabilityCompletedDelegate == null)) {
                this.onGetPerformanceAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceAvailabilityDelegate, new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit}, this.onEndGetPerformanceAvailabilityDelegate, this.onGetPerformanceAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.ReserveTickets(TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest request) {
            return base.Channel.ReserveTickets(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader ReserveTickets(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, out int ReserveTicketsResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            TessituraIntegration.TessituraWebAPI.ReserveTicketsResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).ReserveTickets(inValue);
            ReserveTicketsResult = retVal.ReserveTicketsResult;
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginReserveTickets(TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReserveTickets(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReserveTickets(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginReserveTickets(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndReserveTickets(System.IAsyncResult result) {
            return base.Channel.EndReserveTickets(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndReserveTickets(System.IAsyncResult result, out int ReserveTicketsResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndReserveTickets(result);
            ReserveTicketsResult = retVal.ReserveTicketsResult;
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginReserveTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            string sPriceType = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iNumberOfSeats = ((int)(inValues[3]));
            int iZone = ((int)(inValues[4]));
            return this.BeginReserveTickets(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, callback, asyncState);
        }
        
        private object[] OnEndReserveTickets(System.IAsyncResult result) {
            int ReserveTicketsResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndReserveTickets(result, out ReserveTicketsResult);
            return new object[] {
                    ReserveTicketsResult,
                    retVal};
        }
        
        private void OnReserveTicketsCompleted(object state) {
            if ((this.ReserveTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReserveTicketsCompleted(this, new ReserveTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReserveTicketsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone) {
            this.ReserveTicketsAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, null);
        }
        
        public void ReserveTicketsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, object userState) {
            if ((this.onBeginReserveTicketsDelegate == null)) {
                this.onBeginReserveTicketsDelegate = new BeginOperationDelegate(this.OnBeginReserveTickets);
            }
            if ((this.onEndReserveTicketsDelegate == null)) {
                this.onEndReserveTicketsDelegate = new EndOperationDelegate(this.OnEndReserveTickets);
            }
            if ((this.onReserveTicketsCompletedDelegate == null)) {
                this.onReserveTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReserveTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginReserveTicketsDelegate, new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone}, this.onEndReserveTicketsDelegate, this.onReserveTicketsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests1 TessituraIntegration.TessituraWebAPI.TessituraSoap.ReserveTickets1(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests request) {
            return base.Channel.ReserveTickets1(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader ReserveTickets1(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, out int ReserveTicketsSpecialRequestsResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests1 retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).ReserveTickets1(inValue);
            ReserveTicketsSpecialRequestsResult = retVal.ReserveTicketsSpecialRequestsResult;
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginReserveTickets1(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReserveTickets1(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReserveTickets1(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginReserveTickets1(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests1 TessituraIntegration.TessituraWebAPI.TessituraSoap.EndReserveTickets1(System.IAsyncResult result) {
            return base.Channel.EndReserveTickets1(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndReserveTickets1(System.IAsyncResult result, out int ReserveTicketsSpecialRequestsResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecialRequests1 retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndReserveTickets1(result);
            ReserveTicketsSpecialRequestsResult = retVal.ReserveTicketsSpecialRequestsResult;
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginReserveTickets1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            string sPriceType = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iNumberOfSeats = ((int)(inValues[3]));
            int iZone = ((int)(inValues[4]));
            string sSpecialRequests = ((string)(inValues[5]));
            return this.BeginReserveTickets1(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, callback, asyncState);
        }
        
        private object[] OnEndReserveTickets1(System.IAsyncResult result) {
            int ReserveTicketsSpecialRequestsResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndReserveTickets1(result, out ReserveTicketsSpecialRequestsResult);
            return new object[] {
                    ReserveTicketsSpecialRequestsResult,
                    retVal};
        }
        
        private void OnReserveTickets1Completed(object state) {
            if ((this.ReserveTickets1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReserveTickets1Completed(this, new ReserveTickets1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReserveTickets1Async(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.ReserveTickets1Async(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, null);
        }
        
        public void ReserveTickets1Async(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, object userState) {
            if ((this.onBeginReserveTickets1Delegate == null)) {
                this.onBeginReserveTickets1Delegate = new BeginOperationDelegate(this.OnBeginReserveTickets1);
            }
            if ((this.onEndReserveTickets1Delegate == null)) {
                this.onEndReserveTickets1Delegate = new EndOperationDelegate(this.OnEndReserveTickets1);
            }
            if ((this.onReserveTickets1CompletedDelegate == null)) {
                this.onReserveTickets1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReserveTickets1Completed);
            }
            base.InvokeAsync(this.onBeginReserveTickets1Delegate, new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests}, this.onEndReserveTickets1Delegate, this.onReserveTickets1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.ReserveTicketsUnseated(TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest request) {
            return base.Channel.ReserveTicketsUnseated(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader ReserveTicketsUnseated(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, out int ReserveTicketsUnseatedResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).ReserveTicketsUnseated(inValue);
            ReserveTicketsUnseatedResult = retVal.ReserveTicketsUnseatedResult;
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginReserveTicketsUnseated(TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReserveTicketsUnseated(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReserveTicketsUnseated(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginReserveTicketsUnseated(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndReserveTicketsUnseated(System.IAsyncResult result) {
            return base.Channel.EndReserveTicketsUnseated(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndReserveTicketsUnseated(System.IAsyncResult result, out int ReserveTicketsUnseatedResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsUnseatedResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndReserveTicketsUnseated(result);
            ReserveTicketsUnseatedResult = retVal.ReserveTicketsUnseatedResult;
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginReserveTicketsUnseated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            string sPriceType = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iNumberOfSeats = ((int)(inValues[3]));
            int iZone = ((int)(inValues[4]));
            string sSpecialRequests = ((string)(inValues[5]));
            return this.BeginReserveTicketsUnseated(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, callback, asyncState);
        }
        
        private object[] OnEndReserveTicketsUnseated(System.IAsyncResult result) {
            int ReserveTicketsUnseatedResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndReserveTicketsUnseated(result, out ReserveTicketsUnseatedResult);
            return new object[] {
                    ReserveTicketsUnseatedResult,
                    retVal};
        }
        
        private void OnReserveTicketsUnseatedCompleted(object state) {
            if ((this.ReserveTicketsUnseatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReserveTicketsUnseatedCompleted(this, new ReserveTicketsUnseatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReserveTicketsUnseatedAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.ReserveTicketsUnseatedAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, null);
        }
        
        public void ReserveTicketsUnseatedAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, object userState) {
            if ((this.onBeginReserveTicketsUnseatedDelegate == null)) {
                this.onBeginReserveTicketsUnseatedDelegate = new BeginOperationDelegate(this.OnBeginReserveTicketsUnseated);
            }
            if ((this.onEndReserveTicketsUnseatedDelegate == null)) {
                this.onEndReserveTicketsUnseatedDelegate = new EndOperationDelegate(this.OnEndReserveTicketsUnseated);
            }
            if ((this.onReserveTicketsUnseatedCompletedDelegate == null)) {
                this.onReserveTicketsUnseatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReserveTicketsUnseatedCompleted);
            }
            base.InvokeAsync(this.onBeginReserveTicketsUnseatedDelegate, new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests}, this.onEndReserveTicketsUnseatedDelegate, this.onReserveTicketsUnseatedCompletedDelegate, userState);
        }
        
        public void ReleaseTickets(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber) {
            base.Channel.ReleaseTickets(sWebSessionID, iPerformanceNumber, iLineItemNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReleaseTickets(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReleaseTickets(sWebSessionID, iPerformanceNumber, iLineItemNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReleaseTickets(System.IAsyncResult result) {
            base.Channel.EndReleaseTickets(result);
        }
        
        private System.IAsyncResult OnBeginReleaseTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            int iPerformanceNumber = ((int)(inValues[1]));
            int iLineItemNumber = ((int)(inValues[2]));
            return this.BeginReleaseTickets(sWebSessionID, iPerformanceNumber, iLineItemNumber, callback, asyncState);
        }
        
        private object[] OnEndReleaseTickets(System.IAsyncResult result) {
            this.EndReleaseTickets(result);
            return null;
        }
        
        private void OnReleaseTicketsCompleted(object state) {
            if ((this.ReleaseTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReleaseTicketsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReleaseTicketsAsync(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber) {
            this.ReleaseTicketsAsync(sWebSessionID, iPerformanceNumber, iLineItemNumber, null);
        }
        
        public void ReleaseTicketsAsync(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber, object userState) {
            if ((this.onBeginReleaseTicketsDelegate == null)) {
                this.onBeginReleaseTicketsDelegate = new BeginOperationDelegate(this.OnBeginReleaseTickets);
            }
            if ((this.onEndReleaseTicketsDelegate == null)) {
                this.onEndReleaseTicketsDelegate = new EndOperationDelegate(this.OnEndReleaseTickets);
            }
            if ((this.onReleaseTicketsCompletedDelegate == null)) {
                this.onReleaseTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReleaseTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginReleaseTicketsDelegate, new object[] {
                        sWebSessionID,
                        iPerformanceNumber,
                        iLineItemNumber}, this.onEndReleaseTicketsDelegate, this.onReleaseTicketsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddContributionResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddContribution(TessituraIntegration.TessituraWebAPI.AddContributionRequest request) {
            return base.Channel.AddContribution(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader AddContribution(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew) {
            TessituraIntegration.TessituraWebAPI.AddContributionRequest inValue = new TessituraIntegration.TessituraWebAPI.AddContributionRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.Amount = Amount;
            inValue.Fund = Fund;
            inValue.AccountMethod = AccountMethod;
            inValue.Upgrade = Upgrade;
            inValue.Renew = Renew;
            TessituraIntegration.TessituraWebAPI.AddContributionResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddContribution(inValue);
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddContribution(TessituraIntegration.TessituraWebAPI.AddContributionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddContribution(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddContribution(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddContributionRequest inValue = new TessituraIntegration.TessituraWebAPI.AddContributionRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.Amount = Amount;
            inValue.Fund = Fund;
            inValue.AccountMethod = AccountMethod;
            inValue.Upgrade = Upgrade;
            inValue.Renew = Renew;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddContribution(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddContributionResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddContribution(System.IAsyncResult result) {
            return base.Channel.EndAddContribution(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndAddContribution(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.AddContributionResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddContribution(result);
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddContribution(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            decimal Amount = ((decimal)(inValues[1]));
            int Fund = ((int)(inValues[2]));
            int AccountMethod = ((int)(inValues[3]));
            bool Upgrade = ((bool)(inValues[4]));
            bool Renew = ((bool)(inValues[5]));
            return this.BeginAddContribution(sWebSessionID, Amount, Fund, AccountMethod, Upgrade, Renew, callback, asyncState);
        }
        
        private object[] OnEndAddContribution(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndAddContribution(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddContributionCompleted(object state) {
            if ((this.AddContributionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddContributionCompleted(this, new AddContributionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddContributionAsync(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew) {
            this.AddContributionAsync(sWebSessionID, Amount, Fund, AccountMethod, Upgrade, Renew, null);
        }
        
        public void AddContributionAsync(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew, object userState) {
            if ((this.onBeginAddContributionDelegate == null)) {
                this.onBeginAddContributionDelegate = new BeginOperationDelegate(this.OnBeginAddContribution);
            }
            if ((this.onEndAddContributionDelegate == null)) {
                this.onEndAddContributionDelegate = new EndOperationDelegate(this.OnEndAddContribution);
            }
            if ((this.onAddContributionCompletedDelegate == null)) {
                this.onAddContributionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddContributionCompleted);
            }
            base.InvokeAsync(this.onBeginAddContributionDelegate, new object[] {
                        sWebSessionID,
                        Amount,
                        Fund,
                        AccountMethod,
                        Upgrade,
                        Renew}, this.onEndAddContributionDelegate, this.onAddContributionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddContributionExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddContributionEx(TessituraIntegration.TessituraWebAPI.AddContributionExRequest request) {
            return base.Channel.AddContributionEx(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader AddContributionEx(string sWebSessionID, decimal dAmount, int iFundNo, int iAccountMethod, bool bUpgrade, bool bRenew, int iMemberLevelNo) {
            TessituraIntegration.TessituraWebAPI.AddContributionExRequest inValue = new TessituraIntegration.TessituraWebAPI.AddContributionExRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.dAmount = dAmount;
            inValue.iFundNo = iFundNo;
            inValue.iAccountMethod = iAccountMethod;
            inValue.bUpgrade = bUpgrade;
            inValue.bRenew = bRenew;
            inValue.iMemberLevelNo = iMemberLevelNo;
            TessituraIntegration.TessituraWebAPI.AddContributionExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddContributionEx(inValue);
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddContributionEx(TessituraIntegration.TessituraWebAPI.AddContributionExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddContributionEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddContributionEx(string sWebSessionID, decimal dAmount, int iFundNo, int iAccountMethod, bool bUpgrade, bool bRenew, int iMemberLevelNo, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddContributionExRequest inValue = new TessituraIntegration.TessituraWebAPI.AddContributionExRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.dAmount = dAmount;
            inValue.iFundNo = iFundNo;
            inValue.iAccountMethod = iAccountMethod;
            inValue.bUpgrade = bUpgrade;
            inValue.bRenew = bRenew;
            inValue.iMemberLevelNo = iMemberLevelNo;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddContributionEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddContributionExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddContributionEx(System.IAsyncResult result) {
            return base.Channel.EndAddContributionEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndAddContributionEx(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.AddContributionExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddContributionEx(result);
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddContributionEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            decimal dAmount = ((decimal)(inValues[1]));
            int iFundNo = ((int)(inValues[2]));
            int iAccountMethod = ((int)(inValues[3]));
            bool bUpgrade = ((bool)(inValues[4]));
            bool bRenew = ((bool)(inValues[5]));
            int iMemberLevelNo = ((int)(inValues[6]));
            return this.BeginAddContributionEx(sWebSessionID, dAmount, iFundNo, iAccountMethod, bUpgrade, bRenew, iMemberLevelNo, callback, asyncState);
        }
        
        private object[] OnEndAddContributionEx(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndAddContributionEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddContributionExCompleted(object state) {
            if ((this.AddContributionExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddContributionExCompleted(this, new AddContributionExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddContributionExAsync(string sWebSessionID, decimal dAmount, int iFundNo, int iAccountMethod, bool bUpgrade, bool bRenew, int iMemberLevelNo) {
            this.AddContributionExAsync(sWebSessionID, dAmount, iFundNo, iAccountMethod, bUpgrade, bRenew, iMemberLevelNo, null);
        }
        
        public void AddContributionExAsync(string sWebSessionID, decimal dAmount, int iFundNo, int iAccountMethod, bool bUpgrade, bool bRenew, int iMemberLevelNo, object userState) {
            if ((this.onBeginAddContributionExDelegate == null)) {
                this.onBeginAddContributionExDelegate = new BeginOperationDelegate(this.OnBeginAddContributionEx);
            }
            if ((this.onEndAddContributionExDelegate == null)) {
                this.onEndAddContributionExDelegate = new EndOperationDelegate(this.OnEndAddContributionEx);
            }
            if ((this.onAddContributionExCompletedDelegate == null)) {
                this.onAddContributionExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddContributionExCompleted);
            }
            base.InvokeAsync(this.onBeginAddContributionExDelegate, new object[] {
                        sWebSessionID,
                        dAmount,
                        iFundNo,
                        iAccountMethod,
                        bUpgrade,
                        bRenew,
                        iMemberLevelNo}, this.onEndAddContributionExDelegate, this.onAddContributionExCompletedDelegate, userState);
        }
        
        public void RemoveContribuion(string sWebSessionID, int iLineItemNumber) {
            base.Channel.RemoveContribuion(sWebSessionID, iLineItemNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveContribuion(string sWebSessionID, int iLineItemNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveContribuion(sWebSessionID, iLineItemNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveContribuion(System.IAsyncResult result) {
            base.Channel.EndRemoveContribuion(result);
        }
        
        private System.IAsyncResult OnBeginRemoveContribuion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            int iLineItemNumber = ((int)(inValues[1]));
            return this.BeginRemoveContribuion(sWebSessionID, iLineItemNumber, callback, asyncState);
        }
        
        private object[] OnEndRemoveContribuion(System.IAsyncResult result) {
            this.EndRemoveContribuion(result);
            return null;
        }
        
        private void OnRemoveContribuionCompleted(object state) {
            if ((this.RemoveContribuionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveContribuionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveContribuionAsync(string sWebSessionID, int iLineItemNumber) {
            this.RemoveContribuionAsync(sWebSessionID, iLineItemNumber, null);
        }
        
        public void RemoveContribuionAsync(string sWebSessionID, int iLineItemNumber, object userState) {
            if ((this.onBeginRemoveContribuionDelegate == null)) {
                this.onBeginRemoveContribuionDelegate = new BeginOperationDelegate(this.OnBeginRemoveContribuion);
            }
            if ((this.onEndRemoveContribuionDelegate == null)) {
                this.onEndRemoveContribuionDelegate = new EndOperationDelegate(this.OnEndRemoveContribuion);
            }
            if ((this.onRemoveContribuionCompletedDelegate == null)) {
                this.onRemoveContribuionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveContribuionCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveContribuionDelegate, new object[] {
                        sWebSessionID,
                        iLineItemNumber}, this.onEndRemoveContribuionDelegate, this.onRemoveContribuionCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCart(string sWebSessionID) {
            return base.Channel.GetCart(sWebSessionID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCart(string sWebSessionID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCart(sWebSessionID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCart(System.IAsyncResult result) {
            return base.Channel.EndGetCart(result);
        }
        
        private System.IAsyncResult OnBeginGetCart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            return this.BeginGetCart(sWebSessionID, callback, asyncState);
        }
        
        private object[] OnEndGetCart(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCartCompleted(object state) {
            if ((this.GetCartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCartCompleted(this, new GetCartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCartAsync(string sWebSessionID) {
            this.GetCartAsync(sWebSessionID, null);
        }
        
        public void GetCartAsync(string sWebSessionID, object userState) {
            if ((this.onBeginGetCartDelegate == null)) {
                this.onBeginGetCartDelegate = new BeginOperationDelegate(this.OnBeginGetCart);
            }
            if ((this.onEndGetCartDelegate == null)) {
                this.onEndGetCartDelegate = new EndOperationDelegate(this.OnEndGetCart);
            }
            if ((this.onGetCartCompletedDelegate == null)) {
                this.onGetCartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCartCompleted);
            }
            base.InvokeAsync(this.onBeginGetCartDelegate, new object[] {
                        sWebSessionID}, this.onEndGetCartDelegate, this.onGetCartCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetAddressAndShippingMethod(string sSessionKey) {
            return base.Channel.GetAddressAndShippingMethod(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAddressAndShippingMethod(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAddressAndShippingMethod(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetAddressAndShippingMethod(System.IAsyncResult result) {
            return base.Channel.EndGetAddressAndShippingMethod(result);
        }
        
        private System.IAsyncResult OnBeginGetAddressAndShippingMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginGetAddressAndShippingMethod(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetAddressAndShippingMethod(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetAddressAndShippingMethod(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAddressAndShippingMethodCompleted(object state) {
            if ((this.GetAddressAndShippingMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAddressAndShippingMethodCompleted(this, new GetAddressAndShippingMethodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAddressAndShippingMethodAsync(string sSessionKey) {
            this.GetAddressAndShippingMethodAsync(sSessionKey, null);
        }
        
        public void GetAddressAndShippingMethodAsync(string sSessionKey, object userState) {
            if ((this.onBeginGetAddressAndShippingMethodDelegate == null)) {
                this.onBeginGetAddressAndShippingMethodDelegate = new BeginOperationDelegate(this.OnBeginGetAddressAndShippingMethod);
            }
            if ((this.onEndGetAddressAndShippingMethodDelegate == null)) {
                this.onEndGetAddressAndShippingMethodDelegate = new EndOperationDelegate(this.OnEndGetAddressAndShippingMethod);
            }
            if ((this.onGetAddressAndShippingMethodCompletedDelegate == null)) {
                this.onGetAddressAndShippingMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAddressAndShippingMethodCompleted);
            }
            base.InvokeAsync(this.onBeginGetAddressAndShippingMethodDelegate, new object[] {
                        sSessionKey}, this.onEndGetAddressAndShippingMethodDelegate, this.onGetAddressAndShippingMethodCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetShippingMethods(string sSessionKey) {
            return base.Channel.GetShippingMethods(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetShippingMethods(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShippingMethods(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetShippingMethods(System.IAsyncResult result) {
            return base.Channel.EndGetShippingMethods(result);
        }
        
        private System.IAsyncResult OnBeginGetShippingMethods(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginGetShippingMethods(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetShippingMethods(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetShippingMethods(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShippingMethodsCompleted(object state) {
            if ((this.GetShippingMethodsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShippingMethodsCompleted(this, new GetShippingMethodsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShippingMethodsAsync(string sSessionKey) {
            this.GetShippingMethodsAsync(sSessionKey, null);
        }
        
        public void GetShippingMethodsAsync(string sSessionKey, object userState) {
            if ((this.onBeginGetShippingMethodsDelegate == null)) {
                this.onBeginGetShippingMethodsDelegate = new BeginOperationDelegate(this.OnBeginGetShippingMethods);
            }
            if ((this.onEndGetShippingMethodsDelegate == null)) {
                this.onEndGetShippingMethodsDelegate = new EndOperationDelegate(this.OnEndGetShippingMethods);
            }
            if ((this.onGetShippingMethodsCompletedDelegate == null)) {
                this.onGetShippingMethodsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShippingMethodsCompleted);
            }
            base.InvokeAsync(this.onBeginGetShippingMethodsDelegate, new object[] {
                        sSessionKey}, this.onEndGetShippingMethodsDelegate, this.onGetShippingMethodsCompletedDelegate, userState);
        }
        
        public void SetShippingInformation(string sSessionKey, int iAddress_no, int iShippingMethod) {
            base.Channel.SetShippingInformation(sSessionKey, iAddress_no, iShippingMethod);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetShippingInformation(string sSessionKey, int iAddress_no, int iShippingMethod, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetShippingInformation(sSessionKey, iAddress_no, iShippingMethod, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetShippingInformation(System.IAsyncResult result) {
            base.Channel.EndSetShippingInformation(result);
        }
        
        private System.IAsyncResult OnBeginSetShippingInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int iAddress_no = ((int)(inValues[1]));
            int iShippingMethod = ((int)(inValues[2]));
            return this.BeginSetShippingInformation(sSessionKey, iAddress_no, iShippingMethod, callback, asyncState);
        }
        
        private object[] OnEndSetShippingInformation(System.IAsyncResult result) {
            this.EndSetShippingInformation(result);
            return null;
        }
        
        private void OnSetShippingInformationCompleted(object state) {
            if ((this.SetShippingInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetShippingInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetShippingInformationAsync(string sSessionKey, int iAddress_no, int iShippingMethod) {
            this.SetShippingInformationAsync(sSessionKey, iAddress_no, iShippingMethod, null);
        }
        
        public void SetShippingInformationAsync(string sSessionKey, int iAddress_no, int iShippingMethod, object userState) {
            if ((this.onBeginSetShippingInformationDelegate == null)) {
                this.onBeginSetShippingInformationDelegate = new BeginOperationDelegate(this.OnBeginSetShippingInformation);
            }
            if ((this.onEndSetShippingInformationDelegate == null)) {
                this.onEndSetShippingInformationDelegate = new EndOperationDelegate(this.OnEndSetShippingInformation);
            }
            if ((this.onSetShippingInformationCompletedDelegate == null)) {
                this.onSetShippingInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetShippingInformationCompleted);
            }
            base.InvokeAsync(this.onBeginSetShippingInformationDelegate, new object[] {
                        sSessionKey,
                        iAddress_no,
                        iShippingMethod}, this.onEndSetShippingInformationDelegate, this.onSetShippingInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.Checkout(TessituraIntegration.TessituraWebAPI.CheckoutRequest request) {
            return base.Channel.Checkout(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader Checkout(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear) {
            TessituraIntegration.TessituraWebAPI.CheckoutRequest inValue = new TessituraIntegration.TessituraWebAPI.CheckoutRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            TessituraIntegration.TessituraWebAPI.CheckoutResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).Checkout(inValue);
            return retVal.CheckoutStatusHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginCheckout(TessituraIntegration.TessituraWebAPI.CheckoutRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckout(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckout(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.CheckoutRequest inValue = new TessituraIntegration.TessituraWebAPI.CheckoutRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginCheckout(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndCheckout(System.IAsyncResult result) {
            return base.Channel.EndCheckout(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader EndCheckout(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndCheckout(result);
            return retVal.CheckoutStatusHeader;
        }
        
        private System.IAsyncResult OnBeginCheckout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sCCOwner = ((string)(inValues[1]));
            string sCCNumber = ((string)(inValues[2]));
            int iCCType = ((int)(inValues[3]));
            int iCCMonth = ((int)(inValues[4]));
            int iCCYear = ((int)(inValues[5]));
            return this.BeginCheckout(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, callback, asyncState);
        }
        
        private object[] OnEndCheckout(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader retVal = this.EndCheckout(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckoutCompleted(object state) {
            if ((this.CheckoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckoutCompleted(this, new CheckoutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckoutAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear) {
            this.CheckoutAsync(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, null);
        }
        
        public void CheckoutAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, object userState) {
            if ((this.onBeginCheckoutDelegate == null)) {
                this.onBeginCheckoutDelegate = new BeginOperationDelegate(this.OnBeginCheckout);
            }
            if ((this.onEndCheckoutDelegate == null)) {
                this.onEndCheckoutDelegate = new EndOperationDelegate(this.OnEndCheckout);
            }
            if ((this.onCheckoutCompletedDelegate == null)) {
                this.onCheckoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckoutCompleted);
            }
            base.InvokeAsync(this.onBeginCheckoutDelegate, new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear}, this.onEndCheckoutDelegate, this.onCheckoutCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPaymentMethod(string sSessionKey) {
            return base.Channel.GetPaymentMethod(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPaymentMethod(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPaymentMethod(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPaymentMethod(System.IAsyncResult result) {
            return base.Channel.EndGetPaymentMethod(result);
        }
        
        private System.IAsyncResult OnBeginGetPaymentMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginGetPaymentMethod(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetPaymentMethod(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPaymentMethod(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPaymentMethodCompleted(object state) {
            if ((this.GetPaymentMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPaymentMethodCompleted(this, new GetPaymentMethodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPaymentMethodAsync(string sSessionKey) {
            this.GetPaymentMethodAsync(sSessionKey, null);
        }
        
        public void GetPaymentMethodAsync(string sSessionKey, object userState) {
            if ((this.onBeginGetPaymentMethodDelegate == null)) {
                this.onBeginGetPaymentMethodDelegate = new BeginOperationDelegate(this.OnBeginGetPaymentMethod);
            }
            if ((this.onEndGetPaymentMethodDelegate == null)) {
                this.onEndGetPaymentMethodDelegate = new EndOperationDelegate(this.OnEndGetPaymentMethod);
            }
            if ((this.onGetPaymentMethodCompletedDelegate == null)) {
                this.onGetPaymentMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPaymentMethodCompleted);
            }
            base.InvokeAsync(this.onBeginGetPaymentMethodDelegate, new object[] {
                        sSessionKey}, this.onEndGetPaymentMethodDelegate, this.onGetPaymentMethodCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetOrder(string sSessionKey, bool bCheckoutCompleted) {
            return base.Channel.GetOrder(sSessionKey, bCheckoutCompleted);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrder(string sSessionKey, bool bCheckoutCompleted, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrder(sSessionKey, bCheckoutCompleted, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetOrder(System.IAsyncResult result) {
            return base.Channel.EndGetOrder(result);
        }
        
        private System.IAsyncResult OnBeginGetOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            bool bCheckoutCompleted = ((bool)(inValues[1]));
            return this.BeginGetOrder(sSessionKey, bCheckoutCompleted, callback, asyncState);
        }
        
        private object[] OnEndGetOrder(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrderCompleted(object state) {
            if ((this.GetOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrderCompleted(this, new GetOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrderAsync(string sSessionKey, bool bCheckoutCompleted) {
            this.GetOrderAsync(sSessionKey, bCheckoutCompleted, null);
        }
        
        public void GetOrderAsync(string sSessionKey, bool bCheckoutCompleted, object userState) {
            if ((this.onBeginGetOrderDelegate == null)) {
                this.onBeginGetOrderDelegate = new BeginOperationDelegate(this.OnBeginGetOrder);
            }
            if ((this.onEndGetOrderDelegate == null)) {
                this.onEndGetOrderDelegate = new EndOperationDelegate(this.OnEndGetOrder);
            }
            if ((this.onGetOrderCompletedDelegate == null)) {
                this.onGetOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrderCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrderDelegate, new object[] {
                        sSessionKey,
                        bCheckoutCompleted}, this.onEndGetOrderDelegate, this.onGetOrderCompletedDelegate, userState);
        }
        
        public bool OrderExists(string sSessionKey) {
            return base.Channel.OrderExists(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOrderExists(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOrderExists(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndOrderExists(System.IAsyncResult result) {
            return base.Channel.EndOrderExists(result);
        }
        
        private System.IAsyncResult OnBeginOrderExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginOrderExists(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndOrderExists(System.IAsyncResult result) {
            bool retVal = this.EndOrderExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOrderExistsCompleted(object state) {
            if ((this.OrderExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OrderExistsCompleted(this, new OrderExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OrderExistsAsync(string sSessionKey) {
            this.OrderExistsAsync(sSessionKey, null);
        }
        
        public void OrderExistsAsync(string sSessionKey, object userState) {
            if ((this.onBeginOrderExistsDelegate == null)) {
                this.onBeginOrderExistsDelegate = new BeginOperationDelegate(this.OnBeginOrderExists);
            }
            if ((this.onEndOrderExistsDelegate == null)) {
                this.onEndOrderExistsDelegate = new EndOperationDelegate(this.OnEndOrderExists);
            }
            if ((this.onOrderExistsCompletedDelegate == null)) {
                this.onOrderExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOrderExistsCompleted);
            }
            base.InvokeAsync(this.onBeginOrderExistsDelegate, new object[] {
                        sSessionKey}, this.onEndOrderExistsDelegate, this.onOrderExistsCompletedDelegate, userState);
        }
        
        public bool Register(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName) {
            return base.Channel.Register(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegister(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            string sEmail = ((string)(inValues[4]));
            string sFName = ((string)(inValues[5]));
            string sLName = ((string)(inValues[6]));
            return this.BeginRegister(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            bool retVal = this.EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName) {
            this.RegisterAsync(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, null);
        }
        
        public void RegisterAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        sEmail,
                        sFName,
                        sLName}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        public bool RegisterWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode) {
            return base.Channel.RegisterWithPromoCode(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterWithPromoCode(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRegisterWithPromoCode(System.IAsyncResult result) {
            return base.Channel.EndRegisterWithPromoCode(result);
        }
        
        private System.IAsyncResult OnBeginRegisterWithPromoCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            string sEmail = ((string)(inValues[4]));
            string sFName = ((string)(inValues[5]));
            string sLName = ((string)(inValues[6]));
            int iPromoCode = ((int)(inValues[7]));
            return this.BeginRegisterWithPromoCode(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, callback, asyncState);
        }
        
        private object[] OnEndRegisterWithPromoCode(System.IAsyncResult result) {
            bool retVal = this.EndRegisterWithPromoCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterWithPromoCodeCompleted(object state) {
            if ((this.RegisterWithPromoCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterWithPromoCodeCompleted(this, new RegisterWithPromoCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode) {
            this.RegisterWithPromoCodeAsync(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, null);
        }
        
        public void RegisterWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, object userState) {
            if ((this.onBeginRegisterWithPromoCodeDelegate == null)) {
                this.onBeginRegisterWithPromoCodeDelegate = new BeginOperationDelegate(this.OnBeginRegisterWithPromoCode);
            }
            if ((this.onEndRegisterWithPromoCodeDelegate == null)) {
                this.onEndRegisterWithPromoCodeDelegate = new EndOperationDelegate(this.OnEndRegisterWithPromoCode);
            }
            if ((this.onRegisterWithPromoCodeCompletedDelegate == null)) {
                this.onRegisterWithPromoCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterWithPromoCodeCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterWithPromoCodeDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        sEmail,
                        sFName,
                        sLName,
                        iPromoCode}, this.onEndRegisterWithPromoCodeDelegate, this.onRegisterWithPromoCodeCompletedDelegate, userState);
        }
        
        public bool RegisterWithPromoCodeEx(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, bool bAlreadyAuthenticated) {
            return base.Channel.RegisterWithPromoCodeEx(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, bAlreadyAuthenticated);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterWithPromoCodeEx(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, bool bAlreadyAuthenticated, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterWithPromoCodeEx(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, bAlreadyAuthenticated, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRegisterWithPromoCodeEx(System.IAsyncResult result) {
            return base.Channel.EndRegisterWithPromoCodeEx(result);
        }
        
        private System.IAsyncResult OnBeginRegisterWithPromoCodeEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            string sEmail = ((string)(inValues[4]));
            string sFName = ((string)(inValues[5]));
            string sLName = ((string)(inValues[6]));
            int iPromoCode = ((int)(inValues[7]));
            bool bAlreadyAuthenticated = ((bool)(inValues[8]));
            return this.BeginRegisterWithPromoCodeEx(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, bAlreadyAuthenticated, callback, asyncState);
        }
        
        private object[] OnEndRegisterWithPromoCodeEx(System.IAsyncResult result) {
            bool retVal = this.EndRegisterWithPromoCodeEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterWithPromoCodeExCompleted(object state) {
            if ((this.RegisterWithPromoCodeExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterWithPromoCodeExCompleted(this, new RegisterWithPromoCodeExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterWithPromoCodeExAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, bool bAlreadyAuthenticated) {
            this.RegisterWithPromoCodeExAsync(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, bAlreadyAuthenticated, null);
        }
        
        public void RegisterWithPromoCodeExAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, bool bAlreadyAuthenticated, object userState) {
            if ((this.onBeginRegisterWithPromoCodeExDelegate == null)) {
                this.onBeginRegisterWithPromoCodeExDelegate = new BeginOperationDelegate(this.OnBeginRegisterWithPromoCodeEx);
            }
            if ((this.onEndRegisterWithPromoCodeExDelegate == null)) {
                this.onEndRegisterWithPromoCodeExDelegate = new EndOperationDelegate(this.OnEndRegisterWithPromoCodeEx);
            }
            if ((this.onRegisterWithPromoCodeExCompletedDelegate == null)) {
                this.onRegisterWithPromoCodeExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterWithPromoCodeExCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterWithPromoCodeExDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        sEmail,
                        sFName,
                        sLName,
                        iPromoCode,
                        bAlreadyAuthenticated}, this.onEndRegisterWithPromoCodeExDelegate, this.onRegisterWithPromoCodeExCompletedDelegate, userState);
        }
        
        public void Logout(string sSessionKey) {
            base.Channel.Logout(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogout(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogout(System.IAsyncResult result) {
            base.Channel.EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginLogout(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            this.EndLogout(result);
            return null;
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync(string sSessionKey) {
            this.LogoutAsync(sSessionKey, null);
        }
        
        public void LogoutAsync(string sSessionKey, object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, new object[] {
                        sSessionKey}, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.Login(TessituraIntegration.TessituraWebAPI.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader Login(string sSessionKey, string sUID, string sPwd, int iLoginType, out bool LoginResult) {
            TessituraIntegration.TessituraWebAPI.LoginRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            TessituraIntegration.TessituraWebAPI.LoginResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).Login(inValue);
            LoginResult = retVal.LoginResult;
            return retVal.LoginAttemptHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginLogin(TessituraIntegration.TessituraWebAPI.LoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string sSessionKey, string sUID, string sPwd, int iLoginType, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.LoginRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader EndLogin(System.IAsyncResult result, out bool LoginResult) {
            TessituraIntegration.TessituraWebAPI.LoginResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndLogin(result);
            LoginResult = retVal.LoginResult;
            return retVal.LoginAttemptHeader;
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            return this.BeginLogin(sSessionKey, sUID, sPwd, iLoginType, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            bool LoginResult = this.GetDefaultValueForInitialization<bool>();
            TessituraIntegration.TessituraWebAPI.LoginAttemptHeader retVal = this.EndLogin(result, out LoginResult);
            return new object[] {
                    LoginResult,
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string sSessionKey, string sUID, string sPwd, int iLoginType) {
            this.LoginAsync(sSessionKey, sUID, sPwd, iLoginType, null);
        }
        
        public void LoginAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.LoginWithPromoCode(TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest request) {
            return base.Channel.LoginWithPromoCode(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader LoginWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, out bool LoginWithPromoCodeResult) {
            TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).LoginWithPromoCode(inValue);
            LoginWithPromoCodeResult = retVal.LoginWithPromoCodeResult;
            return retVal.LoginAttemptHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginLoginWithPromoCode(TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginWithPromoCode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest inValue = new TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sUID = sUID;
            inValue.sPwd = sPwd;
            inValue.iLoginType = iLoginType;
            inValue.iPromotionCode = iPromotionCode;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginLoginWithPromoCode(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndLoginWithPromoCode(System.IAsyncResult result) {
            return base.Channel.EndLoginWithPromoCode(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LoginAttemptHeader EndLoginWithPromoCode(System.IAsyncResult result, out bool LoginWithPromoCodeResult) {
            TessituraIntegration.TessituraWebAPI.LoginWithPromoCodeResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndLoginWithPromoCode(result);
            LoginWithPromoCodeResult = retVal.LoginWithPromoCodeResult;
            return retVal.LoginAttemptHeader;
        }
        
        private System.IAsyncResult OnBeginLoginWithPromoCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sPwd = ((string)(inValues[2]));
            int iLoginType = ((int)(inValues[3]));
            int iPromotionCode = ((int)(inValues[4]));
            return this.BeginLoginWithPromoCode(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, callback, asyncState);
        }
        
        private object[] OnEndLoginWithPromoCode(System.IAsyncResult result) {
            bool LoginWithPromoCodeResult = this.GetDefaultValueForInitialization<bool>();
            TessituraIntegration.TessituraWebAPI.LoginAttemptHeader retVal = this.EndLoginWithPromoCode(result, out LoginWithPromoCodeResult);
            return new object[] {
                    LoginWithPromoCodeResult,
                    retVal};
        }
        
        private void OnLoginWithPromoCodeCompleted(object state) {
            if ((this.LoginWithPromoCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginWithPromoCodeCompleted(this, new LoginWithPromoCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode) {
            this.LoginWithPromoCodeAsync(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, null);
        }
        
        public void LoginWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, object userState) {
            if ((this.onBeginLoginWithPromoCodeDelegate == null)) {
                this.onBeginLoginWithPromoCodeDelegate = new BeginOperationDelegate(this.OnBeginLoginWithPromoCode);
            }
            if ((this.onEndLoginWithPromoCodeDelegate == null)) {
                this.onEndLoginWithPromoCodeDelegate = new EndOperationDelegate(this.OnEndLoginWithPromoCode);
            }
            if ((this.onLoginWithPromoCodeCompletedDelegate == null)) {
                this.onLoginWithPromoCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginWithPromoCodeCompleted);
            }
            base.InvokeAsync(this.onBeginLoginWithPromoCodeDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode}, this.onEndLoginWithPromoCodeDelegate, this.onLoginWithPromoCodeCompletedDelegate, userState);
        }
        
        public bool UpdateLogin(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType) {
            return base.Channel.UpdateLogin(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLogin(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLogin(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateLogin(System.IAsyncResult result) {
            return base.Channel.EndUpdateLogin(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sNewUID = ((string)(inValues[2]));
            string sPwd = ((string)(inValues[3]));
            string sNewPwd = ((string)(inValues[4]));
            string sEmail = ((string)(inValues[5]));
            string sNewEmail = ((string)(inValues[6]));
            int iLoginType = ((int)(inValues[7]));
            return this.BeginUpdateLogin(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, callback, asyncState);
        }
        
        private object[] OnEndUpdateLogin(System.IAsyncResult result) {
            bool retVal = this.EndUpdateLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateLoginCompleted(object state) {
            if ((this.UpdateLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLoginCompleted(this, new UpdateLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLoginAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType) {
            this.UpdateLoginAsync(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, null);
        }
        
        public void UpdateLoginAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, object userState) {
            if ((this.onBeginUpdateLoginDelegate == null)) {
                this.onBeginUpdateLoginDelegate = new BeginOperationDelegate(this.OnBeginUpdateLogin);
            }
            if ((this.onEndUpdateLoginDelegate == null)) {
                this.onEndUpdateLoginDelegate = new EndOperationDelegate(this.OnEndUpdateLogin);
            }
            if ((this.onUpdateLoginCompletedDelegate == null)) {
                this.onUpdateLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLoginCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLoginDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sNewUID,
                        sPwd,
                        sNewPwd,
                        sEmail,
                        sNewEmail,
                        iLoginType}, this.onEndUpdateLoginDelegate, this.onUpdateLoginCompletedDelegate, userState);
        }
        
        public bool UpdateLoginWithPromoCode(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode) {
            return base.Channel.UpdateLoginWithPromoCode(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, iPromotionCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLoginWithPromoCode(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLoginWithPromoCode(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, iPromotionCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateLoginWithPromoCode(System.IAsyncResult result) {
            return base.Channel.EndUpdateLoginWithPromoCode(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLoginWithPromoCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sUID = ((string)(inValues[1]));
            string sNewUID = ((string)(inValues[2]));
            string sPwd = ((string)(inValues[3]));
            string sNewPwd = ((string)(inValues[4]));
            string sEmail = ((string)(inValues[5]));
            string sNewEmail = ((string)(inValues[6]));
            int iLoginType = ((int)(inValues[7]));
            int iPromotionCode = ((int)(inValues[8]));
            return this.BeginUpdateLoginWithPromoCode(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, iPromotionCode, callback, asyncState);
        }
        
        private object[] OnEndUpdateLoginWithPromoCode(System.IAsyncResult result) {
            bool retVal = this.EndUpdateLoginWithPromoCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateLoginWithPromoCodeCompleted(object state) {
            if ((this.UpdateLoginWithPromoCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLoginWithPromoCodeCompleted(this, new UpdateLoginWithPromoCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLoginWithPromoCodeAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode) {
            this.UpdateLoginWithPromoCodeAsync(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, iPromotionCode, null);
        }
        
        public void UpdateLoginWithPromoCodeAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode, object userState) {
            if ((this.onBeginUpdateLoginWithPromoCodeDelegate == null)) {
                this.onBeginUpdateLoginWithPromoCodeDelegate = new BeginOperationDelegate(this.OnBeginUpdateLoginWithPromoCode);
            }
            if ((this.onEndUpdateLoginWithPromoCodeDelegate == null)) {
                this.onEndUpdateLoginWithPromoCodeDelegate = new EndOperationDelegate(this.OnEndUpdateLoginWithPromoCode);
            }
            if ((this.onUpdateLoginWithPromoCodeCompletedDelegate == null)) {
                this.onUpdateLoginWithPromoCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLoginWithPromoCodeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLoginWithPromoCodeDelegate, new object[] {
                        sSessionKey,
                        sUID,
                        sNewUID,
                        sPwd,
                        sNewPwd,
                        sEmail,
                        sNewEmail,
                        iLoginType,
                        iPromotionCode}, this.onEndUpdateLoginWithPromoCodeDelegate, this.onUpdateLoginWithPromoCodeCompletedDelegate, userState);
        }
        
        public System.Data.DataSet LoginInfo(string sSessionKey) {
            return base.Channel.LoginInfo(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginInfo(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginInfo(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndLoginInfo(System.IAsyncResult result) {
            return base.Channel.EndLoginInfo(result);
        }
        
        private System.IAsyncResult OnBeginLoginInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginLoginInfo(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndLoginInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndLoginInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginInfoCompleted(object state) {
            if ((this.LoginInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginInfoCompleted(this, new LoginInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginInfoAsync(string sSessionKey) {
            this.LoginInfoAsync(sSessionKey, null);
        }
        
        public void LoginInfoAsync(string sSessionKey, object userState) {
            if ((this.onBeginLoginInfoDelegate == null)) {
                this.onBeginLoginInfoDelegate = new BeginOperationDelegate(this.OnBeginLoginInfo);
            }
            if ((this.onEndLoginInfoDelegate == null)) {
                this.onEndLoginInfoDelegate = new EndOperationDelegate(this.OnEndLoginInfo);
            }
            if ((this.onLoginInfoCompletedDelegate == null)) {
                this.onLoginInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginInfoCompleted);
            }
            base.InvokeAsync(this.onBeginLoginInfoDelegate, new object[] {
                        sSessionKey}, this.onEndLoginInfoDelegate, this.onLoginInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetAccountInfo(string sSessionKey) {
            return base.Channel.GetAccountInfo(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccountInfo(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountInfo(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetAccountInfo(System.IAsyncResult result) {
            return base.Channel.EndGetAccountInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginGetAccountInfo(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetAccountInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetAccountInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountInfoCompleted(object state) {
            if ((this.GetAccountInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountInfoCompleted(this, new GetAccountInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountInfoAsync(string sSessionKey) {
            this.GetAccountInfoAsync(sSessionKey, null);
        }
        
        public void GetAccountInfoAsync(string sSessionKey, object userState) {
            if ((this.onBeginGetAccountInfoDelegate == null)) {
                this.onBeginGetAccountInfoDelegate = new BeginOperationDelegate(this.OnBeginGetAccountInfo);
            }
            if ((this.onEndGetAccountInfoDelegate == null)) {
                this.onEndGetAccountInfoDelegate = new EndOperationDelegate(this.OnEndGetAccountInfo);
            }
            if ((this.onGetAccountInfoCompletedDelegate == null)) {
                this.onGetAccountInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountInfoDelegate, new object[] {
                        sSessionKey}, this.onEndGetAccountInfoDelegate, this.onGetAccountInfoCompletedDelegate, userState);
        }
        
        public void UpdateAccountInfo(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry) {
            base.Channel.UpdateAccountInfo(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAccountInfo(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAccountInfo(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAccountInfo(System.IAsyncResult result) {
            base.Channel.EndUpdateAccountInfo(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAccountInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sEmail = ((string)(inValues[1]));
            string sPhone = ((string)(inValues[2]));
            string sStreet1 = ((string)(inValues[3]));
            string sStreet2 = ((string)(inValues[4]));
            string sCity = ((string)(inValues[5]));
            string sStateProv = ((string)(inValues[6]));
            string sPostalCode = ((string)(inValues[7]));
            int iCountry = ((int)(inValues[8]));
            return this.BeginUpdateAccountInfo(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, callback, asyncState);
        }
        
        private object[] OnEndUpdateAccountInfo(System.IAsyncResult result) {
            this.EndUpdateAccountInfo(result);
            return null;
        }
        
        private void OnUpdateAccountInfoCompleted(object state) {
            if ((this.UpdateAccountInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAccountInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAccountInfoAsync(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry) {
            this.UpdateAccountInfoAsync(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, null);
        }
        
        public void UpdateAccountInfoAsync(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, object userState) {
            if ((this.onBeginUpdateAccountInfoDelegate == null)) {
                this.onBeginUpdateAccountInfoDelegate = new BeginOperationDelegate(this.OnBeginUpdateAccountInfo);
            }
            if ((this.onEndUpdateAccountInfoDelegate == null)) {
                this.onEndUpdateAccountInfoDelegate = new EndOperationDelegate(this.OnEndUpdateAccountInfo);
            }
            if ((this.onUpdateAccountInfoCompletedDelegate == null)) {
                this.onUpdateAccountInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAccountInfoCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAccountInfoDelegate, new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry}, this.onEndUpdateAccountInfoDelegate, this.onUpdateAccountInfoCompletedDelegate, userState);
        }
        
        public void InsertNewShippingAddress(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod) {
            base.Channel.InsertNewShippingAddress(sSessionKey, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, iShippingMethod);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertNewShippingAddress(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertNewShippingAddress(sSessionKey, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, iShippingMethod, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertNewShippingAddress(System.IAsyncResult result) {
            base.Channel.EndInsertNewShippingAddress(result);
        }
        
        private System.IAsyncResult OnBeginInsertNewShippingAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sStreet1 = ((string)(inValues[1]));
            string sStreet2 = ((string)(inValues[2]));
            string sCity = ((string)(inValues[3]));
            string sStateProv = ((string)(inValues[4]));
            string sPostalCode = ((string)(inValues[5]));
            int iCountry = ((int)(inValues[6]));
            int iShippingMethod = ((int)(inValues[7]));
            return this.BeginInsertNewShippingAddress(sSessionKey, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, iShippingMethod, callback, asyncState);
        }
        
        private object[] OnEndInsertNewShippingAddress(System.IAsyncResult result) {
            this.EndInsertNewShippingAddress(result);
            return null;
        }
        
        private void OnInsertNewShippingAddressCompleted(object state) {
            if ((this.InsertNewShippingAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertNewShippingAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertNewShippingAddressAsync(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod) {
            this.InsertNewShippingAddressAsync(sSessionKey, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, iShippingMethod, null);
        }
        
        public void InsertNewShippingAddressAsync(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod, object userState) {
            if ((this.onBeginInsertNewShippingAddressDelegate == null)) {
                this.onBeginInsertNewShippingAddressDelegate = new BeginOperationDelegate(this.OnBeginInsertNewShippingAddress);
            }
            if ((this.onEndInsertNewShippingAddressDelegate == null)) {
                this.onEndInsertNewShippingAddressDelegate = new EndOperationDelegate(this.OnEndInsertNewShippingAddress);
            }
            if ((this.onInsertNewShippingAddressCompletedDelegate == null)) {
                this.onInsertNewShippingAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertNewShippingAddressCompleted);
            }
            base.InvokeAsync(this.onBeginInsertNewShippingAddressDelegate, new object[] {
                        sSessionKey,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        iShippingMethod}, this.onEndInsertNewShippingAddressDelegate, this.onInsertNewShippingAddressCompletedDelegate, userState);
        }
        
        public bool LoggedIn(string sSessionKey) {
            return base.Channel.LoggedIn(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoggedIn(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoggedIn(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndLoggedIn(System.IAsyncResult result) {
            return base.Channel.EndLoggedIn(result);
        }
        
        private System.IAsyncResult OnBeginLoggedIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginLoggedIn(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndLoggedIn(System.IAsyncResult result) {
            bool retVal = this.EndLoggedIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoggedInCompleted(object state) {
            if ((this.LoggedInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoggedInCompleted(this, new LoggedInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoggedInAsync(string sSessionKey) {
            this.LoggedInAsync(sSessionKey, null);
        }
        
        public void LoggedInAsync(string sSessionKey, object userState) {
            if ((this.onBeginLoggedInDelegate == null)) {
                this.onBeginLoggedInDelegate = new BeginOperationDelegate(this.OnBeginLoggedIn);
            }
            if ((this.onEndLoggedInDelegate == null)) {
                this.onEndLoggedInDelegate = new EndOperationDelegate(this.OnEndLoggedIn);
            }
            if ((this.onLoggedInCompletedDelegate == null)) {
                this.onLoggedInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoggedInCompleted);
            }
            base.InvokeAsync(this.onBeginLoggedInDelegate, new object[] {
                        sSessionKey}, this.onEndLoggedInDelegate, this.onLoggedInCompletedDelegate, userState);
        }
        
        public string GetNewSessionKey(string sIP) {
            return base.Channel.GetNewSessionKey(sIP);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNewSessionKey(string sIP, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewSessionKey(sIP, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetNewSessionKey(System.IAsyncResult result) {
            return base.Channel.EndGetNewSessionKey(result);
        }
        
        private System.IAsyncResult OnBeginGetNewSessionKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sIP = ((string)(inValues[0]));
            return this.BeginGetNewSessionKey(sIP, callback, asyncState);
        }
        
        private object[] OnEndGetNewSessionKey(System.IAsyncResult result) {
            string retVal = this.EndGetNewSessionKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewSessionKeyCompleted(object state) {
            if ((this.GetNewSessionKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewSessionKeyCompleted(this, new GetNewSessionKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewSessionKeyAsync(string sIP) {
            this.GetNewSessionKeyAsync(sIP, null);
        }
        
        public void GetNewSessionKeyAsync(string sIP, object userState) {
            if ((this.onBeginGetNewSessionKeyDelegate == null)) {
                this.onBeginGetNewSessionKeyDelegate = new BeginOperationDelegate(this.OnBeginGetNewSessionKey);
            }
            if ((this.onEndGetNewSessionKeyDelegate == null)) {
                this.onEndGetNewSessionKeyDelegate = new EndOperationDelegate(this.OnEndGetNewSessionKey);
            }
            if ((this.onGetNewSessionKeyCompletedDelegate == null)) {
                this.onGetNewSessionKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewSessionKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewSessionKeyDelegate, new object[] {
                        sIP}, this.onEndGetNewSessionKeyDelegate, this.onGetNewSessionKeyCompletedDelegate, userState);
        }
        
        public void UpdateLastAccessTime(string sSessionKey, string sNow) {
            base.Channel.UpdateLastAccessTime(sSessionKey, sNow);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLastAccessTime(string sSessionKey, string sNow, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLastAccessTime(sSessionKey, sNow, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateLastAccessTime(System.IAsyncResult result) {
            base.Channel.EndUpdateLastAccessTime(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLastAccessTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sNow = ((string)(inValues[1]));
            return this.BeginUpdateLastAccessTime(sSessionKey, sNow, callback, asyncState);
        }
        
        private object[] OnEndUpdateLastAccessTime(System.IAsyncResult result) {
            this.EndUpdateLastAccessTime(result);
            return null;
        }
        
        private void OnUpdateLastAccessTimeCompleted(object state) {
            if ((this.UpdateLastAccessTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLastAccessTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLastAccessTimeAsync(string sSessionKey, string sNow) {
            this.UpdateLastAccessTimeAsync(sSessionKey, sNow, null);
        }
        
        public void UpdateLastAccessTimeAsync(string sSessionKey, string sNow, object userState) {
            if ((this.onBeginUpdateLastAccessTimeDelegate == null)) {
                this.onBeginUpdateLastAccessTimeDelegate = new BeginOperationDelegate(this.OnBeginUpdateLastAccessTime);
            }
            if ((this.onEndUpdateLastAccessTimeDelegate == null)) {
                this.onEndUpdateLastAccessTimeDelegate = new EndOperationDelegate(this.OnEndUpdateLastAccessTime);
            }
            if ((this.onUpdateLastAccessTimeCompletedDelegate == null)) {
                this.onUpdateLastAccessTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLastAccessTimeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLastAccessTimeDelegate, new object[] {
                        sSessionKey,
                        sNow}, this.onEndUpdateLastAccessTimeDelegate, this.onUpdateLastAccessTimeCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetVariables(string sSessionKey) {
            return base.Channel.GetVariables(sSessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVariables(string sSessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVariables(sSessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetVariables(System.IAsyncResult result) {
            return base.Channel.EndGetVariables(result);
        }
        
        private System.IAsyncResult OnBeginGetVariables(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            return this.BeginGetVariables(sSessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetVariables(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetVariables(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVariablesCompleted(object state) {
            if ((this.GetVariablesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVariablesCompleted(this, new GetVariablesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVariablesAsync(string sSessionKey) {
            this.GetVariablesAsync(sSessionKey, null);
        }
        
        public void GetVariablesAsync(string sSessionKey, object userState) {
            if ((this.onBeginGetVariablesDelegate == null)) {
                this.onBeginGetVariablesDelegate = new BeginOperationDelegate(this.OnBeginGetVariables);
            }
            if ((this.onEndGetVariablesDelegate == null)) {
                this.onEndGetVariablesDelegate = new EndOperationDelegate(this.OnEndGetVariables);
            }
            if ((this.onGetVariablesCompletedDelegate == null)) {
                this.onGetVariablesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVariablesCompleted);
            }
            base.InvokeAsync(this.onBeginGetVariablesDelegate, new object[] {
                        sSessionKey}, this.onEndGetVariablesDelegate, this.onGetVariablesCompletedDelegate, userState);
        }
        
        public void SetVariable(string sSessionKey, string sName, string sValue, string sMode) {
            base.Channel.SetVariable(sSessionKey, sName, sValue, sMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetVariable(string sSessionKey, string sName, string sValue, string sMode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetVariable(sSessionKey, sName, sValue, sMode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetVariable(System.IAsyncResult result) {
            base.Channel.EndSetVariable(result);
        }
        
        private System.IAsyncResult OnBeginSetVariable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sName = ((string)(inValues[1]));
            string sValue = ((string)(inValues[2]));
            string sMode = ((string)(inValues[3]));
            return this.BeginSetVariable(sSessionKey, sName, sValue, sMode, callback, asyncState);
        }
        
        private object[] OnEndSetVariable(System.IAsyncResult result) {
            this.EndSetVariable(result);
            return null;
        }
        
        private void OnSetVariableCompleted(object state) {
            if ((this.SetVariableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetVariableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetVariableAsync(string sSessionKey, string sName, string sValue, string sMode) {
            this.SetVariableAsync(sSessionKey, sName, sValue, sMode, null);
        }
        
        public void SetVariableAsync(string sSessionKey, string sName, string sValue, string sMode, object userState) {
            if ((this.onBeginSetVariableDelegate == null)) {
                this.onBeginSetVariableDelegate = new BeginOperationDelegate(this.OnBeginSetVariable);
            }
            if ((this.onEndSetVariableDelegate == null)) {
                this.onEndSetVariableDelegate = new EndOperationDelegate(this.OnEndSetVariable);
            }
            if ((this.onSetVariableCompletedDelegate == null)) {
                this.onSetVariableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetVariableCompleted);
            }
            base.InvokeAsync(this.onBeginSetVariableDelegate, new object[] {
                        sSessionKey,
                        sName,
                        sValue,
                        sMode}, this.onEndSetVariableDelegate, this.onSetVariableCompletedDelegate, userState);
        }
        
        public void DeleteVariable(string sSessionKey, string sName) {
            base.Channel.DeleteVariable(sSessionKey, sName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteVariable(string sSessionKey, string sName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVariable(sSessionKey, sName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteVariable(System.IAsyncResult result) {
            base.Channel.EndDeleteVariable(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVariable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sName = ((string)(inValues[1]));
            return this.BeginDeleteVariable(sSessionKey, sName, callback, asyncState);
        }
        
        private object[] OnEndDeleteVariable(System.IAsyncResult result) {
            this.EndDeleteVariable(result);
            return null;
        }
        
        private void OnDeleteVariableCompleted(object state) {
            if ((this.DeleteVariableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVariableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVariableAsync(string sSessionKey, string sName) {
            this.DeleteVariableAsync(sSessionKey, sName, null);
        }
        
        public void DeleteVariableAsync(string sSessionKey, string sName, object userState) {
            if ((this.onBeginDeleteVariableDelegate == null)) {
                this.onBeginDeleteVariableDelegate = new BeginOperationDelegate(this.OnBeginDeleteVariable);
            }
            if ((this.onEndDeleteVariableDelegate == null)) {
                this.onEndDeleteVariableDelegate = new EndOperationDelegate(this.OnEndDeleteVariable);
            }
            if ((this.onDeleteVariableCompletedDelegate == null)) {
                this.onDeleteVariableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVariableCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVariableDelegate, new object[] {
                        sSessionKey,
                        sName}, this.onEndDeleteVariableDelegate, this.onDeleteVariableCompletedDelegate, userState);
        }
        
        public void TransferSession(string sSessionKey, string sNewKey) {
            base.Channel.TransferSession(sSessionKey, sNewKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTransferSession(string sSessionKey, string sNewKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTransferSession(sSessionKey, sNewKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTransferSession(System.IAsyncResult result) {
            base.Channel.EndTransferSession(result);
        }
        
        private System.IAsyncResult OnBeginTransferSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sNewKey = ((string)(inValues[1]));
            return this.BeginTransferSession(sSessionKey, sNewKey, callback, asyncState);
        }
        
        private object[] OnEndTransferSession(System.IAsyncResult result) {
            this.EndTransferSession(result);
            return null;
        }
        
        private void OnTransferSessionCompleted(object state) {
            if ((this.TransferSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TransferSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TransferSessionAsync(string sSessionKey, string sNewKey) {
            this.TransferSessionAsync(sSessionKey, sNewKey, null);
        }
        
        public void TransferSessionAsync(string sSessionKey, string sNewKey, object userState) {
            if ((this.onBeginTransferSessionDelegate == null)) {
                this.onBeginTransferSessionDelegate = new BeginOperationDelegate(this.OnBeginTransferSession);
            }
            if ((this.onEndTransferSessionDelegate == null)) {
                this.onEndTransferSessionDelegate = new EndOperationDelegate(this.OnEndTransferSession);
            }
            if ((this.onTransferSessionCompletedDelegate == null)) {
                this.onTransferSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTransferSessionCompleted);
            }
            base.InvokeAsync(this.onBeginTransferSessionDelegate, new object[] {
                        sSessionKey,
                        sNewKey}, this.onEndTransferSessionDelegate, this.onTransferSessionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddCustomerServiceIssue(TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest request) {
            return base.Channel.AddCustomerServiceIssue(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader AddCustomerServiceIssue(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent) {
            TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest inValue = new TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.ContactMethod = ContactMethod;
            inValue.Category = Category;
            inValue.ActivityType = ActivityType;
            inValue.Origin = Origin;
            inValue.Notes = Notes;
            inValue.PerformanceNumber = PerformanceNumber;
            inValue.PackageNumber = PackageNumber;
            inValue.Urgent = Urgent;
            TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddCustomerServiceIssue(inValue);
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddCustomerServiceIssue(TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCustomerServiceIssue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddCustomerServiceIssue(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest inValue = new TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.ContactMethod = ContactMethod;
            inValue.Category = Category;
            inValue.ActivityType = ActivityType;
            inValue.Origin = Origin;
            inValue.Notes = Notes;
            inValue.PerformanceNumber = PerformanceNumber;
            inValue.PackageNumber = PackageNumber;
            inValue.Urgent = Urgent;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddCustomerServiceIssue(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddCustomerServiceIssue(System.IAsyncResult result) {
            return base.Channel.EndAddCustomerServiceIssue(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndAddCustomerServiceIssue(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.AddCustomerServiceIssueResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddCustomerServiceIssue(result);
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddCustomerServiceIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            int ContactMethod = ((int)(inValues[1]));
            int Category = ((int)(inValues[2]));
            int ActivityType = ((int)(inValues[3]));
            int Origin = ((int)(inValues[4]));
            string Notes = ((string)(inValues[5]));
            int PerformanceNumber = ((int)(inValues[6]));
            int PackageNumber = ((int)(inValues[7]));
            bool Urgent = ((bool)(inValues[8]));
            return this.BeginAddCustomerServiceIssue(sSessionKey, ContactMethod, Category, ActivityType, Origin, Notes, PerformanceNumber, PackageNumber, Urgent, callback, asyncState);
        }
        
        private object[] OnEndAddCustomerServiceIssue(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndAddCustomerServiceIssue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCustomerServiceIssueCompleted(object state) {
            if ((this.AddCustomerServiceIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCustomerServiceIssueCompleted(this, new AddCustomerServiceIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCustomerServiceIssueAsync(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent) {
            this.AddCustomerServiceIssueAsync(sSessionKey, ContactMethod, Category, ActivityType, Origin, Notes, PerformanceNumber, PackageNumber, Urgent, null);
        }
        
        public void AddCustomerServiceIssueAsync(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent, object userState) {
            if ((this.onBeginAddCustomerServiceIssueDelegate == null)) {
                this.onBeginAddCustomerServiceIssueDelegate = new BeginOperationDelegate(this.OnBeginAddCustomerServiceIssue);
            }
            if ((this.onEndAddCustomerServiceIssueDelegate == null)) {
                this.onEndAddCustomerServiceIssueDelegate = new EndOperationDelegate(this.OnEndAddCustomerServiceIssue);
            }
            if ((this.onAddCustomerServiceIssueCompletedDelegate == null)) {
                this.onAddCustomerServiceIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCustomerServiceIssueCompleted);
            }
            base.InvokeAsync(this.onBeginAddCustomerServiceIssueDelegate, new object[] {
                        sSessionKey,
                        ContactMethod,
                        Category,
                        ActivityType,
                        Origin,
                        Notes,
                        PerformanceNumber,
                        PackageNumber,
                        Urgent}, this.onEndAddCustomerServiceIssueDelegate, this.onAddCustomerServiceIssueCompletedDelegate, userState);
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginHelloWorld(callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = this.EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        public void HelloWorldAsync(object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, null, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCountries() {
            return base.Channel.GetCountries();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCountries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCountries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCountries(System.IAsyncResult result) {
            return base.Channel.EndGetCountries(result);
        }
        
        private System.IAsyncResult OnBeginGetCountries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCountries(callback, asyncState);
        }
        
        private object[] OnEndGetCountries(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCountries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCountriesCompleted(object state) {
            if ((this.GetCountriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCountriesAsync() {
            this.GetCountriesAsync(null);
        }
        
        public void GetCountriesAsync(object userState) {
            if ((this.onBeginGetCountriesDelegate == null)) {
                this.onBeginGetCountriesDelegate = new BeginOperationDelegate(this.OnBeginGetCountries);
            }
            if ((this.onEndGetCountriesDelegate == null)) {
                this.onEndGetCountriesDelegate = new EndOperationDelegate(this.OnEndGetCountries);
            }
            if ((this.onGetCountriesCompletedDelegate == null)) {
                this.onGetCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountriesDelegate, null, this.onEndGetCountriesDelegate, this.onGetCountriesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetStateProvince() {
            return base.Channel.GetStateProvince();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStateProvince(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStateProvince(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetStateProvince(System.IAsyncResult result) {
            return base.Channel.EndGetStateProvince(result);
        }
        
        private System.IAsyncResult OnBeginGetStateProvince(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStateProvince(callback, asyncState);
        }
        
        private object[] OnEndGetStateProvince(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetStateProvince(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStateProvinceCompleted(object state) {
            if ((this.GetStateProvinceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStateProvinceCompleted(this, new GetStateProvinceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStateProvinceAsync() {
            this.GetStateProvinceAsync(null);
        }
        
        public void GetStateProvinceAsync(object userState) {
            if ((this.onBeginGetStateProvinceDelegate == null)) {
                this.onBeginGetStateProvinceDelegate = new BeginOperationDelegate(this.OnBeginGetStateProvince);
            }
            if ((this.onEndGetStateProvinceDelegate == null)) {
                this.onEndGetStateProvinceDelegate = new EndOperationDelegate(this.OnEndGetStateProvince);
            }
            if ((this.onGetStateProvinceCompletedDelegate == null)) {
                this.onGetStateProvinceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStateProvinceCompleted);
            }
            base.InvokeAsync(this.onBeginGetStateProvinceDelegate, null, this.onEndGetStateProvinceDelegate, this.onGetStateProvinceCompletedDelegate, userState);
        }
        
        public int ChangeModeOfSale(string SessionKey, int NewModeOfSale) {
            return base.Channel.ChangeModeOfSale(SessionKey, NewModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeModeOfSale(string SessionKey, int NewModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeModeOfSale(SessionKey, NewModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndChangeModeOfSale(System.IAsyncResult result) {
            return base.Channel.EndChangeModeOfSale(result);
        }
        
        private System.IAsyncResult OnBeginChangeModeOfSale(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int NewModeOfSale = ((int)(inValues[1]));
            return this.BeginChangeModeOfSale(SessionKey, NewModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndChangeModeOfSale(System.IAsyncResult result) {
            int retVal = this.EndChangeModeOfSale(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeModeOfSaleCompleted(object state) {
            if ((this.ChangeModeOfSaleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeModeOfSaleCompleted(this, new ChangeModeOfSaleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeModeOfSaleAsync(string SessionKey, int NewModeOfSale) {
            this.ChangeModeOfSaleAsync(SessionKey, NewModeOfSale, null);
        }
        
        public void ChangeModeOfSaleAsync(string SessionKey, int NewModeOfSale, object userState) {
            if ((this.onBeginChangeModeOfSaleDelegate == null)) {
                this.onBeginChangeModeOfSaleDelegate = new BeginOperationDelegate(this.OnBeginChangeModeOfSale);
            }
            if ((this.onEndChangeModeOfSaleDelegate == null)) {
                this.onEndChangeModeOfSaleDelegate = new EndOperationDelegate(this.OnEndChangeModeOfSale);
            }
            if ((this.onChangeModeOfSaleCompletedDelegate == null)) {
                this.onChangeModeOfSaleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeModeOfSaleCompleted);
            }
            base.InvokeAsync(this.onBeginChangeModeOfSaleDelegate, new object[] {
                        SessionKey,
                        NewModeOfSale}, this.onEndChangeModeOfSaleDelegate, this.onChangeModeOfSaleCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackages(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances) {
            return base.Channel.GetPackages(Season, StartDate, EndDate, PackageType, Artist, VenueID, Keywords, ModeOfSale, BusinessUnit, SortString, MatchAllPerformances);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackages(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPackages(Season, StartDate, EndDate, PackageType, Artist, VenueID, Keywords, ModeOfSale, BusinessUnit, SortString, MatchAllPerformances, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackages(System.IAsyncResult result) {
            return base.Channel.EndGetPackages(result);
        }
        
        private System.IAsyncResult OnBeginGetPackages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Season = ((int)(inValues[0]));
            string StartDate = ((string)(inValues[1]));
            string EndDate = ((string)(inValues[2]));
            int PackageType = ((int)(inValues[3]));
            string Artist = ((string)(inValues[4]));
            short VenueID = ((short)(inValues[5]));
            string Keywords = ((string)(inValues[6]));
            short ModeOfSale = ((short)(inValues[7]));
            int BusinessUnit = ((int)(inValues[8]));
            string SortString = ((string)(inValues[9]));
            bool MatchAllPerformances = ((bool)(inValues[10]));
            return this.BeginGetPackages(Season, StartDate, EndDate, PackageType, Artist, VenueID, Keywords, ModeOfSale, BusinessUnit, SortString, MatchAllPerformances, callback, asyncState);
        }
        
        private object[] OnEndGetPackages(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackagesCompleted(object state) {
            if ((this.GetPackagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackagesCompleted(this, new GetPackagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackagesAsync(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances) {
            this.GetPackagesAsync(Season, StartDate, EndDate, PackageType, Artist, VenueID, Keywords, ModeOfSale, BusinessUnit, SortString, MatchAllPerformances, null);
        }
        
        public void GetPackagesAsync(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances, object userState) {
            if ((this.onBeginGetPackagesDelegate == null)) {
                this.onBeginGetPackagesDelegate = new BeginOperationDelegate(this.OnBeginGetPackages);
            }
            if ((this.onEndGetPackagesDelegate == null)) {
                this.onEndGetPackagesDelegate = new EndOperationDelegate(this.OnEndGetPackages);
            }
            if ((this.onGetPackagesCompletedDelegate == null)) {
                this.onGetPackagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPackagesDelegate, new object[] {
                        Season,
                        StartDate,
                        EndDate,
                        PackageType,
                        Artist,
                        VenueID,
                        Keywords,
                        ModeOfSale,
                        BusinessUnit,
                        SortString,
                        MatchAllPerformances}, this.onEndGetPackagesDelegate, this.onGetPackagesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackageDetail(int PackageID, int ModeOfSale) {
            return base.Channel.GetPackageDetail(PackageID, ModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackageDetail(int PackageID, int ModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPackageDetail(PackageID, ModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackageDetail(System.IAsyncResult result) {
            return base.Channel.EndGetPackageDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetPackageDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PackageID = ((int)(inValues[0]));
            int ModeOfSale = ((int)(inValues[1]));
            return this.BeginGetPackageDetail(PackageID, ModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndGetPackageDetail(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackageDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackageDetailCompleted(object state) {
            if ((this.GetPackageDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackageDetailCompleted(this, new GetPackageDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackageDetailAsync(int PackageID, int ModeOfSale) {
            this.GetPackageDetailAsync(PackageID, ModeOfSale, null);
        }
        
        public void GetPackageDetailAsync(int PackageID, int ModeOfSale, object userState) {
            if ((this.onBeginGetPackageDetailDelegate == null)) {
                this.onBeginGetPackageDetailDelegate = new BeginOperationDelegate(this.OnBeginGetPackageDetail);
            }
            if ((this.onEndGetPackageDetailDelegate == null)) {
                this.onEndGetPackageDetailDelegate = new EndOperationDelegate(this.OnEndGetPackageDetail);
            }
            if ((this.onGetPackageDetailCompletedDelegate == null)) {
                this.onGetPackageDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetPackageDetailDelegate, new object[] {
                        PackageID,
                        ModeOfSale}, this.onEndGetPackageDetailDelegate, this.onGetPackageDetailCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetExistingOrdersInfo(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly) {
            return base.Channel.GetExistingOrdersInfo(SessionKey, Season, ModeOfSale, RenewalsOnly);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetExistingOrdersInfo(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExistingOrdersInfo(SessionKey, Season, ModeOfSale, RenewalsOnly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetExistingOrdersInfo(System.IAsyncResult result) {
            return base.Channel.EndGetExistingOrdersInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetExistingOrdersInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int Season = ((int)(inValues[1]));
            int ModeOfSale = ((int)(inValues[2]));
            bool RenewalsOnly = ((bool)(inValues[3]));
            return this.BeginGetExistingOrdersInfo(SessionKey, Season, ModeOfSale, RenewalsOnly, callback, asyncState);
        }
        
        private object[] OnEndGetExistingOrdersInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetExistingOrdersInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExistingOrdersInfoCompleted(object state) {
            if ((this.GetExistingOrdersInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExistingOrdersInfoCompleted(this, new GetExistingOrdersInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExistingOrdersInfoAsync(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly) {
            this.GetExistingOrdersInfoAsync(SessionKey, Season, ModeOfSale, RenewalsOnly, null);
        }
        
        public void GetExistingOrdersInfoAsync(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly, object userState) {
            if ((this.onBeginGetExistingOrdersInfoDelegate == null)) {
                this.onBeginGetExistingOrdersInfoDelegate = new BeginOperationDelegate(this.OnBeginGetExistingOrdersInfo);
            }
            if ((this.onEndGetExistingOrdersInfoDelegate == null)) {
                this.onEndGetExistingOrdersInfoDelegate = new EndOperationDelegate(this.OnEndGetExistingOrdersInfo);
            }
            if ((this.onGetExistingOrdersInfoCompletedDelegate == null)) {
                this.onGetExistingOrdersInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExistingOrdersInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetExistingOrdersInfoDelegate, new object[] {
                        SessionKey,
                        Season,
                        ModeOfSale,
                        RenewalsOnly}, this.onEndGetExistingOrdersInfoDelegate, this.onGetExistingOrdersInfoCompletedDelegate, userState);
        }
        
        public void LoadExistingOrder(string SessionKey, int OrderID) {
            base.Channel.LoadExistingOrder(SessionKey, OrderID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadExistingOrder(string SessionKey, int OrderID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadExistingOrder(SessionKey, OrderID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoadExistingOrder(System.IAsyncResult result) {
            base.Channel.EndLoadExistingOrder(result);
        }
        
        private System.IAsyncResult OnBeginLoadExistingOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int OrderID = ((int)(inValues[1]));
            return this.BeginLoadExistingOrder(SessionKey, OrderID, callback, asyncState);
        }
        
        private object[] OnEndLoadExistingOrder(System.IAsyncResult result) {
            this.EndLoadExistingOrder(result);
            return null;
        }
        
        private void OnLoadExistingOrderCompleted(object state) {
            if ((this.LoadExistingOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadExistingOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadExistingOrderAsync(string SessionKey, int OrderID) {
            this.LoadExistingOrderAsync(SessionKey, OrderID, null);
        }
        
        public void LoadExistingOrderAsync(string SessionKey, int OrderID, object userState) {
            if ((this.onBeginLoadExistingOrderDelegate == null)) {
                this.onBeginLoadExistingOrderDelegate = new BeginOperationDelegate(this.OnBeginLoadExistingOrder);
            }
            if ((this.onEndLoadExistingOrderDelegate == null)) {
                this.onEndLoadExistingOrderDelegate = new EndOperationDelegate(this.OnEndLoadExistingOrder);
            }
            if ((this.onLoadExistingOrderCompletedDelegate == null)) {
                this.onLoadExistingOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadExistingOrderCompleted);
            }
            base.InvokeAsync(this.onBeginLoadExistingOrderDelegate, new object[] {
                        SessionKey,
                        OrderID}, this.onEndLoadExistingOrderDelegate, this.onLoadExistingOrderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddPackageItemResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddPackageItem(TessituraIntegration.TessituraWebAPI.AddPackageItemRequest request) {
            return base.Channel.AddPackageItem(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader AddPackageItem(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone) {
            TessituraIntegration.TessituraWebAPI.AddPackageItemRequest inValue = new TessituraIntegration.TessituraWebAPI.AddPackageItemRequest();
            inValue.SessionKey = SessionKey;
            inValue.ParentPackageLineItemId = ParentPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.PackageNumber = PackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            TessituraIntegration.TessituraWebAPI.AddPackageItemResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddPackageItem(inValue);
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddPackageItem(TessituraIntegration.TessituraWebAPI.AddPackageItemRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPackageItem(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddPackageItem(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddPackageItemRequest inValue = new TessituraIntegration.TessituraWebAPI.AddPackageItemRequest();
            inValue.SessionKey = SessionKey;
            inValue.ParentPackageLineItemId = ParentPackageLineItemId;
            inValue.PriceType = PriceType;
            inValue.PackageNumber = PackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddPackageItem(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddPackageItemResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddPackageItem(System.IAsyncResult result) {
            return base.Channel.EndAddPackageItem(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndAddPackageItem(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.AddPackageItemResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddPackageItem(result);
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddPackageItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int ParentPackageLineItemId = ((int)(inValues[1]));
            string PriceType = ((string)(inValues[2]));
            int PackageNumber = ((int)(inValues[3]));
            int NumberOfSeats = ((int)(inValues[4]));
            int Zone = ((int)(inValues[5]));
            return this.BeginAddPackageItem(SessionKey, ParentPackageLineItemId, PriceType, PackageNumber, NumberOfSeats, Zone, callback, asyncState);
        }
        
        private object[] OnEndAddPackageItem(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndAddPackageItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPackageItemCompleted(object state) {
            if ((this.AddPackageItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPackageItemCompleted(this, new AddPackageItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPackageItemAsync(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone) {
            this.AddPackageItemAsync(SessionKey, ParentPackageLineItemId, PriceType, PackageNumber, NumberOfSeats, Zone, null);
        }
        
        public void AddPackageItemAsync(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, object userState) {
            if ((this.onBeginAddPackageItemDelegate == null)) {
                this.onBeginAddPackageItemDelegate = new BeginOperationDelegate(this.OnBeginAddPackageItem);
            }
            if ((this.onEndAddPackageItemDelegate == null)) {
                this.onEndAddPackageItemDelegate = new EndOperationDelegate(this.OnEndAddPackageItem);
            }
            if ((this.onAddPackageItemCompletedDelegate == null)) {
                this.onAddPackageItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPackageItemCompleted);
            }
            base.InvokeAsync(this.onBeginAddPackageItemDelegate, new object[] {
                        SessionKey,
                        ParentPackageLineItemId,
                        PriceType,
                        PackageNumber,
                        NumberOfSeats,
                        Zone}, this.onEndAddPackageItemDelegate, this.onAddPackageItemCompletedDelegate, userState);
        }
        
        public void RemovePackageItem(string SessionKey, int PackageNumber, int PackageLineItemID) {
            base.Channel.RemovePackageItem(SessionKey, PackageNumber, PackageLineItemID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemovePackageItem(string SessionKey, int PackageNumber, int PackageLineItemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemovePackageItem(SessionKey, PackageNumber, PackageLineItemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemovePackageItem(System.IAsyncResult result) {
            base.Channel.EndRemovePackageItem(result);
        }
        
        private System.IAsyncResult OnBeginRemovePackageItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PackageNumber = ((int)(inValues[1]));
            int PackageLineItemID = ((int)(inValues[2]));
            return this.BeginRemovePackageItem(SessionKey, PackageNumber, PackageLineItemID, callback, asyncState);
        }
        
        private object[] OnEndRemovePackageItem(System.IAsyncResult result) {
            this.EndRemovePackageItem(result);
            return null;
        }
        
        private void OnRemovePackageItemCompleted(object state) {
            if ((this.RemovePackageItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemovePackageItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemovePackageItemAsync(string SessionKey, int PackageNumber, int PackageLineItemID) {
            this.RemovePackageItemAsync(SessionKey, PackageNumber, PackageLineItemID, null);
        }
        
        public void RemovePackageItemAsync(string SessionKey, int PackageNumber, int PackageLineItemID, object userState) {
            if ((this.onBeginRemovePackageItemDelegate == null)) {
                this.onBeginRemovePackageItemDelegate = new BeginOperationDelegate(this.OnBeginRemovePackageItem);
            }
            if ((this.onEndRemovePackageItemDelegate == null)) {
                this.onEndRemovePackageItemDelegate = new EndOperationDelegate(this.OnEndRemovePackageItem);
            }
            if ((this.onRemovePackageItemCompletedDelegate == null)) {
                this.onRemovePackageItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemovePackageItemCompleted);
            }
            base.InvokeAsync(this.onBeginRemovePackageItemDelegate, new object[] {
                        SessionKey,
                        PackageNumber,
                        PackageLineItemID}, this.onEndRemovePackageItemDelegate, this.onRemovePackageItemCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackageItem(string SessionKey, int PackageLineItemID) {
            return base.Channel.GetPackageItem(SessionKey, PackageLineItemID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackageItem(string SessionKey, int PackageLineItemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPackageItem(SessionKey, PackageLineItemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackageItem(System.IAsyncResult result) {
            return base.Channel.EndGetPackageItem(result);
        }
        
        private System.IAsyncResult OnBeginGetPackageItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PackageLineItemID = ((int)(inValues[1]));
            return this.BeginGetPackageItem(SessionKey, PackageLineItemID, callback, asyncState);
        }
        
        private object[] OnEndGetPackageItem(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackageItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackageItemCompleted(object state) {
            if ((this.GetPackageItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackageItemCompleted(this, new GetPackageItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackageItemAsync(string SessionKey, int PackageLineItemID) {
            this.GetPackageItemAsync(SessionKey, PackageLineItemID, null);
        }
        
        public void GetPackageItemAsync(string SessionKey, int PackageLineItemID, object userState) {
            if ((this.onBeginGetPackageItemDelegate == null)) {
                this.onBeginGetPackageItemDelegate = new BeginOperationDelegate(this.OnBeginGetPackageItem);
            }
            if ((this.onEndGetPackageItemDelegate == null)) {
                this.onEndGetPackageItemDelegate = new EndOperationDelegate(this.OnEndGetPackageItem);
            }
            if ((this.onGetPackageItemCompletedDelegate == null)) {
                this.onGetPackageItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackageItemCompleted);
            }
            base.InvokeAsync(this.onBeginGetPackageItemDelegate, new object[] {
                        SessionKey,
                        PackageLineItemID}, this.onEndGetPackageItemDelegate, this.onGetPackageItemCompletedDelegate, userState);
        }
        
        public void AddOrderComments(string SessionKey, string Comment, int LineItemID) {
            base.Channel.AddOrderComments(SessionKey, Comment, LineItemID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOrderComments(string SessionKey, string Comment, int LineItemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrderComments(SessionKey, Comment, LineItemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddOrderComments(System.IAsyncResult result) {
            base.Channel.EndAddOrderComments(result);
        }
        
        private System.IAsyncResult OnBeginAddOrderComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string Comment = ((string)(inValues[1]));
            int LineItemID = ((int)(inValues[2]));
            return this.BeginAddOrderComments(SessionKey, Comment, LineItemID, callback, asyncState);
        }
        
        private object[] OnEndAddOrderComments(System.IAsyncResult result) {
            this.EndAddOrderComments(result);
            return null;
        }
        
        private void OnAddOrderCommentsCompleted(object state) {
            if ((this.AddOrderCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrderCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrderCommentsAsync(string SessionKey, string Comment, int LineItemID) {
            this.AddOrderCommentsAsync(SessionKey, Comment, LineItemID, null);
        }
        
        public void AddOrderCommentsAsync(string SessionKey, string Comment, int LineItemID, object userState) {
            if ((this.onBeginAddOrderCommentsDelegate == null)) {
                this.onBeginAddOrderCommentsDelegate = new BeginOperationDelegate(this.OnBeginAddOrderComments);
            }
            if ((this.onEndAddOrderCommentsDelegate == null)) {
                this.onEndAddOrderCommentsDelegate = new EndOperationDelegate(this.OnEndAddOrderComments);
            }
            if ((this.onAddOrderCommentsCompletedDelegate == null)) {
                this.onAddOrderCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrderCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrderCommentsDelegate, new object[] {
                        SessionKey,
                        Comment,
                        LineItemID}, this.onEndAddOrderCommentsDelegate, this.onAddOrderCommentsCompletedDelegate, userState);
        }
        
        public void RemoveOrderComments(string SessionKey, int LineItemID) {
            base.Channel.RemoveOrderComments(SessionKey, LineItemID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveOrderComments(string SessionKey, int LineItemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveOrderComments(SessionKey, LineItemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveOrderComments(System.IAsyncResult result) {
            base.Channel.EndRemoveOrderComments(result);
        }
        
        private System.IAsyncResult OnBeginRemoveOrderComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int LineItemID = ((int)(inValues[1]));
            return this.BeginRemoveOrderComments(SessionKey, LineItemID, callback, asyncState);
        }
        
        private object[] OnEndRemoveOrderComments(System.IAsyncResult result) {
            this.EndRemoveOrderComments(result);
            return null;
        }
        
        private void OnRemoveOrderCommentsCompleted(object state) {
            if ((this.RemoveOrderCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveOrderCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveOrderCommentsAsync(string SessionKey, int LineItemID) {
            this.RemoveOrderCommentsAsync(SessionKey, LineItemID, null);
        }
        
        public void RemoveOrderCommentsAsync(string SessionKey, int LineItemID, object userState) {
            if ((this.onBeginRemoveOrderCommentsDelegate == null)) {
                this.onBeginRemoveOrderCommentsDelegate = new BeginOperationDelegate(this.OnBeginRemoveOrderComments);
            }
            if ((this.onEndRemoveOrderCommentsDelegate == null)) {
                this.onEndRemoveOrderCommentsDelegate = new EndOperationDelegate(this.OnEndRemoveOrderComments);
            }
            if ((this.onRemoveOrderCommentsCompletedDelegate == null)) {
                this.onRemoveOrderCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveOrderCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveOrderCommentsDelegate, new object[] {
                        SessionKey,
                        LineItemID}, this.onEndRemoveOrderCommentsDelegate, this.onRemoveOrderCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.CheckoutEx(TessituraIntegration.TessituraWebAPI.CheckoutExRequest request) {
            return base.Channel.CheckoutEx(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader CheckoutEx(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear) {
            TessituraIntegration.TessituraWebAPI.CheckoutExRequest inValue = new TessituraIntegration.TessituraWebAPI.CheckoutExRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            TessituraIntegration.TessituraWebAPI.CheckoutExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).CheckoutEx(inValue);
            return retVal.CheckoutStatusHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginCheckoutEx(TessituraIntegration.TessituraWebAPI.CheckoutExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckoutEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckoutEx(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.CheckoutExRequest inValue = new TessituraIntegration.TessituraWebAPI.CheckoutExRequest();
            inValue.sSessionKey = sSessionKey;
            inValue.sCCOwner = sCCOwner;
            inValue.sCCNumber = sCCNumber;
            inValue.iCCType = iCCType;
            inValue.iCCMonth = iCCMonth;
            inValue.iCCYear = iCCYear;
            inValue.dAmount = dAmount;
            inValue.bAllowUnderPayment = bAllowUnderPayment;
            inValue.sCardAuthenticationCode = sCardAuthenticationCode;
            inValue.iCCIssueNumber = iCCIssueNumber;
            inValue.iCCStartMonth = iCCStartMonth;
            inValue.iCCStartYear = iCCStartYear;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginCheckoutEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.CheckoutExResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndCheckoutEx(System.IAsyncResult result) {
            return base.Channel.EndCheckoutEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader EndCheckoutEx(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutExResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndCheckoutEx(result);
            return retVal.CheckoutStatusHeader;
        }
        
        private System.IAsyncResult OnBeginCheckoutEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sCCOwner = ((string)(inValues[1]));
            string sCCNumber = ((string)(inValues[2]));
            int iCCType = ((int)(inValues[3]));
            int iCCMonth = ((int)(inValues[4]));
            int iCCYear = ((int)(inValues[5]));
            decimal dAmount = ((decimal)(inValues[6]));
            bool bAllowUnderPayment = ((bool)(inValues[7]));
            string sCardAuthenticationCode = ((string)(inValues[8]));
            int iCCIssueNumber = ((int)(inValues[9]));
            int iCCStartMonth = ((int)(inValues[10]));
            int iCCStartYear = ((int)(inValues[11]));
            return this.BeginCheckoutEx(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, callback, asyncState);
        }
        
        private object[] OnEndCheckoutEx(System.IAsyncResult result) {
            TessituraIntegration.TessituraWebAPI.CheckoutStatusHeader retVal = this.EndCheckoutEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckoutExCompleted(object state) {
            if ((this.CheckoutExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckoutExCompleted(this, new CheckoutExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckoutExAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear) {
            this.CheckoutExAsync(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, null);
        }
        
        public void CheckoutExAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, object userState) {
            if ((this.onBeginCheckoutExDelegate == null)) {
                this.onBeginCheckoutExDelegate = new BeginOperationDelegate(this.OnBeginCheckoutEx);
            }
            if ((this.onEndCheckoutExDelegate == null)) {
                this.onEndCheckoutExDelegate = new EndOperationDelegate(this.OnEndCheckoutEx);
            }
            if ((this.onCheckoutExCompletedDelegate == null)) {
                this.onCheckoutExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckoutExCompleted);
            }
            base.InvokeAsync(this.onBeginCheckoutExDelegate, new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear}, this.onEndCheckoutExDelegate, this.onCheckoutExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetModeOfSaleRules(string SessionKey) {
            return base.Channel.GetModeOfSaleRules(SessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetModeOfSaleRules(string SessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModeOfSaleRules(SessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetModeOfSaleRules(System.IAsyncResult result) {
            return base.Channel.EndGetModeOfSaleRules(result);
        }
        
        private System.IAsyncResult OnBeginGetModeOfSaleRules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            return this.BeginGetModeOfSaleRules(SessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetModeOfSaleRules(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetModeOfSaleRules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModeOfSaleRulesCompleted(object state) {
            if ((this.GetModeOfSaleRulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModeOfSaleRulesCompleted(this, new GetModeOfSaleRulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModeOfSaleRulesAsync(string SessionKey) {
            this.GetModeOfSaleRulesAsync(SessionKey, null);
        }
        
        public void GetModeOfSaleRulesAsync(string SessionKey, object userState) {
            if ((this.onBeginGetModeOfSaleRulesDelegate == null)) {
                this.onBeginGetModeOfSaleRulesDelegate = new BeginOperationDelegate(this.OnBeginGetModeOfSaleRules);
            }
            if ((this.onEndGetModeOfSaleRulesDelegate == null)) {
                this.onEndGetModeOfSaleRulesDelegate = new EndOperationDelegate(this.OnEndGetModeOfSaleRules);
            }
            if ((this.onGetModeOfSaleRulesCompletedDelegate == null)) {
                this.onGetModeOfSaleRulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModeOfSaleRulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetModeOfSaleRulesDelegate, new object[] {
                        SessionKey}, this.onEndGetModeOfSaleRulesDelegate, this.onGetModeOfSaleRulesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet PurchaseGiftCertificate(string SessionKey, decimal Amount, int PaymentMethod) {
            return base.Channel.PurchaseGiftCertificate(SessionKey, Amount, PaymentMethod);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPurchaseGiftCertificate(string SessionKey, decimal Amount, int PaymentMethod, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPurchaseGiftCertificate(SessionKey, Amount, PaymentMethod, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndPurchaseGiftCertificate(System.IAsyncResult result) {
            return base.Channel.EndPurchaseGiftCertificate(result);
        }
        
        private System.IAsyncResult OnBeginPurchaseGiftCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            decimal Amount = ((decimal)(inValues[1]));
            int PaymentMethod = ((int)(inValues[2]));
            return this.BeginPurchaseGiftCertificate(SessionKey, Amount, PaymentMethod, callback, asyncState);
        }
        
        private object[] OnEndPurchaseGiftCertificate(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndPurchaseGiftCertificate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPurchaseGiftCertificateCompleted(object state) {
            if ((this.PurchaseGiftCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PurchaseGiftCertificateCompleted(this, new PurchaseGiftCertificateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PurchaseGiftCertificateAsync(string SessionKey, decimal Amount, int PaymentMethod) {
            this.PurchaseGiftCertificateAsync(SessionKey, Amount, PaymentMethod, null);
        }
        
        public void PurchaseGiftCertificateAsync(string SessionKey, decimal Amount, int PaymentMethod, object userState) {
            if ((this.onBeginPurchaseGiftCertificateDelegate == null)) {
                this.onBeginPurchaseGiftCertificateDelegate = new BeginOperationDelegate(this.OnBeginPurchaseGiftCertificate);
            }
            if ((this.onEndPurchaseGiftCertificateDelegate == null)) {
                this.onEndPurchaseGiftCertificateDelegate = new EndOperationDelegate(this.OnEndPurchaseGiftCertificate);
            }
            if ((this.onPurchaseGiftCertificateCompletedDelegate == null)) {
                this.onPurchaseGiftCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPurchaseGiftCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginPurchaseGiftCertificateDelegate, new object[] {
                        SessionKey,
                        Amount,
                        PaymentMethod}, this.onEndPurchaseGiftCertificateDelegate, this.onPurchaseGiftCertificateCompletedDelegate, userState);
        }
        
        public void ApplyGiftCertificate(string SessionKey, string RedemptionCode, decimal Amount) {
            base.Channel.ApplyGiftCertificate(SessionKey, RedemptionCode, Amount);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplyGiftCertificate(string SessionKey, string RedemptionCode, decimal Amount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplyGiftCertificate(SessionKey, RedemptionCode, Amount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndApplyGiftCertificate(System.IAsyncResult result) {
            base.Channel.EndApplyGiftCertificate(result);
        }
        
        private System.IAsyncResult OnBeginApplyGiftCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string RedemptionCode = ((string)(inValues[1]));
            decimal Amount = ((decimal)(inValues[2]));
            return this.BeginApplyGiftCertificate(SessionKey, RedemptionCode, Amount, callback, asyncState);
        }
        
        private object[] OnEndApplyGiftCertificate(System.IAsyncResult result) {
            this.EndApplyGiftCertificate(result);
            return null;
        }
        
        private void OnApplyGiftCertificateCompleted(object state) {
            if ((this.ApplyGiftCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplyGiftCertificateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplyGiftCertificateAsync(string SessionKey, string RedemptionCode, decimal Amount) {
            this.ApplyGiftCertificateAsync(SessionKey, RedemptionCode, Amount, null);
        }
        
        public void ApplyGiftCertificateAsync(string SessionKey, string RedemptionCode, decimal Amount, object userState) {
            if ((this.onBeginApplyGiftCertificateDelegate == null)) {
                this.onBeginApplyGiftCertificateDelegate = new BeginOperationDelegate(this.OnBeginApplyGiftCertificate);
            }
            if ((this.onEndApplyGiftCertificateDelegate == null)) {
                this.onEndApplyGiftCertificateDelegate = new EndOperationDelegate(this.OnEndApplyGiftCertificate);
            }
            if ((this.onApplyGiftCertificateCompletedDelegate == null)) {
                this.onApplyGiftCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplyGiftCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginApplyGiftCertificateDelegate, new object[] {
                        SessionKey,
                        RedemptionCode,
                        Amount}, this.onEndApplyGiftCertificateDelegate, this.onApplyGiftCertificateCompletedDelegate, userState);
        }
        
        public void RemoveGiftCertificate(string sWebSessionId, string sGiftCertificatId) {
            base.Channel.RemoveGiftCertificate(sWebSessionId, sGiftCertificatId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveGiftCertificate(string sWebSessionId, string sGiftCertificatId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveGiftCertificate(sWebSessionId, sGiftCertificatId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveGiftCertificate(System.IAsyncResult result) {
            base.Channel.EndRemoveGiftCertificate(result);
        }
        
        private System.IAsyncResult OnBeginRemoveGiftCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sGiftCertificatId = ((string)(inValues[1]));
            return this.BeginRemoveGiftCertificate(sWebSessionId, sGiftCertificatId, callback, asyncState);
        }
        
        private object[] OnEndRemoveGiftCertificate(System.IAsyncResult result) {
            this.EndRemoveGiftCertificate(result);
            return null;
        }
        
        private void OnRemoveGiftCertificateCompleted(object state) {
            if ((this.RemoveGiftCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveGiftCertificateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveGiftCertificateAsync(string sWebSessionId, string sGiftCertificatId) {
            this.RemoveGiftCertificateAsync(sWebSessionId, sGiftCertificatId, null);
        }
        
        public void RemoveGiftCertificateAsync(string sWebSessionId, string sGiftCertificatId, object userState) {
            if ((this.onBeginRemoveGiftCertificateDelegate == null)) {
                this.onBeginRemoveGiftCertificateDelegate = new BeginOperationDelegate(this.OnBeginRemoveGiftCertificate);
            }
            if ((this.onEndRemoveGiftCertificateDelegate == null)) {
                this.onEndRemoveGiftCertificateDelegate = new EndOperationDelegate(this.OnEndRemoveGiftCertificate);
            }
            if ((this.onRemoveGiftCertificateCompletedDelegate == null)) {
                this.onRemoveGiftCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveGiftCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveGiftCertificateDelegate, new object[] {
                        sWebSessionId,
                        sGiftCertificatId}, this.onEndRemoveGiftCertificateDelegate, this.onRemoveGiftCertificateCompletedDelegate, userState);
        }
        
        public System.Data.DataSet AddPaymentPlanInstallment(string SessionKey, decimal Amount, System.DateTime DueDate) {
            return base.Channel.AddPaymentPlanInstallment(SessionKey, Amount, DueDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddPaymentPlanInstallment(string SessionKey, decimal Amount, System.DateTime DueDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPaymentPlanInstallment(SessionKey, Amount, DueDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndAddPaymentPlanInstallment(System.IAsyncResult result) {
            return base.Channel.EndAddPaymentPlanInstallment(result);
        }
        
        private System.IAsyncResult OnBeginAddPaymentPlanInstallment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            decimal Amount = ((decimal)(inValues[1]));
            System.DateTime DueDate = ((System.DateTime)(inValues[2]));
            return this.BeginAddPaymentPlanInstallment(SessionKey, Amount, DueDate, callback, asyncState);
        }
        
        private object[] OnEndAddPaymentPlanInstallment(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndAddPaymentPlanInstallment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPaymentPlanInstallmentCompleted(object state) {
            if ((this.AddPaymentPlanInstallmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPaymentPlanInstallmentCompleted(this, new AddPaymentPlanInstallmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPaymentPlanInstallmentAsync(string SessionKey, decimal Amount, System.DateTime DueDate) {
            this.AddPaymentPlanInstallmentAsync(SessionKey, Amount, DueDate, null);
        }
        
        public void AddPaymentPlanInstallmentAsync(string SessionKey, decimal Amount, System.DateTime DueDate, object userState) {
            if ((this.onBeginAddPaymentPlanInstallmentDelegate == null)) {
                this.onBeginAddPaymentPlanInstallmentDelegate = new BeginOperationDelegate(this.OnBeginAddPaymentPlanInstallment);
            }
            if ((this.onEndAddPaymentPlanInstallmentDelegate == null)) {
                this.onEndAddPaymentPlanInstallmentDelegate = new EndOperationDelegate(this.OnEndAddPaymentPlanInstallment);
            }
            if ((this.onAddPaymentPlanInstallmentCompletedDelegate == null)) {
                this.onAddPaymentPlanInstallmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPaymentPlanInstallmentCompleted);
            }
            base.InvokeAsync(this.onBeginAddPaymentPlanInstallmentDelegate, new object[] {
                        SessionKey,
                        Amount,
                        DueDate}, this.onEndAddPaymentPlanInstallmentDelegate, this.onAddPaymentPlanInstallmentCompletedDelegate, userState);
        }
        
        public void RemovePaymentPlan(string SessionKey) {
            base.Channel.RemovePaymentPlan(SessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemovePaymentPlan(string SessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemovePaymentPlan(SessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemovePaymentPlan(System.IAsyncResult result) {
            base.Channel.EndRemovePaymentPlan(result);
        }
        
        private System.IAsyncResult OnBeginRemovePaymentPlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            return this.BeginRemovePaymentPlan(SessionKey, callback, asyncState);
        }
        
        private object[] OnEndRemovePaymentPlan(System.IAsyncResult result) {
            this.EndRemovePaymentPlan(result);
            return null;
        }
        
        private void OnRemovePaymentPlanCompleted(object state) {
            if ((this.RemovePaymentPlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemovePaymentPlanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemovePaymentPlanAsync(string SessionKey) {
            this.RemovePaymentPlanAsync(SessionKey, null);
        }
        
        public void RemovePaymentPlanAsync(string SessionKey, object userState) {
            if ((this.onBeginRemovePaymentPlanDelegate == null)) {
                this.onBeginRemovePaymentPlanDelegate = new BeginOperationDelegate(this.OnBeginRemovePaymentPlan);
            }
            if ((this.onEndRemovePaymentPlanDelegate == null)) {
                this.onEndRemovePaymentPlanDelegate = new EndOperationDelegate(this.OnEndRemovePaymentPlan);
            }
            if ((this.onRemovePaymentPlanCompletedDelegate == null)) {
                this.onRemovePaymentPlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemovePaymentPlanCompleted);
            }
            base.InvokeAsync(this.onBeginRemovePaymentPlanDelegate, new object[] {
                        SessionKey}, this.onEndRemovePaymentPlanDelegate, this.onRemovePaymentPlanCompletedDelegate, userState);
        }
        
        public System.Data.DataSet FinalizePaymentPlan(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType) {
            return base.Channel.FinalizePaymentPlan(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, iBillingType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFinalizePaymentPlan(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFinalizePaymentPlan(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, iBillingType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndFinalizePaymentPlan(System.IAsyncResult result) {
            return base.Channel.EndFinalizePaymentPlan(result);
        }
        
        private System.IAsyncResult OnBeginFinalizePaymentPlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sCCOwner = ((string)(inValues[1]));
            string sCCNumber = ((string)(inValues[2]));
            int iCCType = ((int)(inValues[3]));
            int iCCMonth = ((int)(inValues[4]));
            int iCCYear = ((int)(inValues[5]));
            string sCardAuthenticationCode = ((string)(inValues[6]));
            int iCCIssueNumber = ((int)(inValues[7]));
            int iCCStartMonth = ((int)(inValues[8]));
            int iCCStartYear = ((int)(inValues[9]));
            int iBillingType = ((int)(inValues[10]));
            return this.BeginFinalizePaymentPlan(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, iBillingType, callback, asyncState);
        }
        
        private object[] OnEndFinalizePaymentPlan(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndFinalizePaymentPlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFinalizePaymentPlanCompleted(object state) {
            if ((this.FinalizePaymentPlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FinalizePaymentPlanCompleted(this, new FinalizePaymentPlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FinalizePaymentPlanAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType) {
            this.FinalizePaymentPlanAsync(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, iBillingType, null);
        }
        
        public void FinalizePaymentPlanAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType, object userState) {
            if ((this.onBeginFinalizePaymentPlanDelegate == null)) {
                this.onBeginFinalizePaymentPlanDelegate = new BeginOperationDelegate(this.OnBeginFinalizePaymentPlan);
            }
            if ((this.onEndFinalizePaymentPlanDelegate == null)) {
                this.onEndFinalizePaymentPlanDelegate = new EndOperationDelegate(this.OnEndFinalizePaymentPlan);
            }
            if ((this.onFinalizePaymentPlanCompletedDelegate == null)) {
                this.onFinalizePaymentPlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinalizePaymentPlanCompleted);
            }
            base.InvokeAsync(this.onBeginFinalizePaymentPlanDelegate, new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        iBillingType}, this.onEndFinalizePaymentPlanDelegate, this.onFinalizePaymentPlanCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ValidatePaymentPlan(string SessionKey) {
            return base.Channel.ValidatePaymentPlan(SessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidatePaymentPlan(string SessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidatePaymentPlan(SessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndValidatePaymentPlan(System.IAsyncResult result) {
            return base.Channel.EndValidatePaymentPlan(result);
        }
        
        private System.IAsyncResult OnBeginValidatePaymentPlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            return this.BeginValidatePaymentPlan(SessionKey, callback, asyncState);
        }
        
        private object[] OnEndValidatePaymentPlan(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndValidatePaymentPlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidatePaymentPlanCompleted(object state) {
            if ((this.ValidatePaymentPlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidatePaymentPlanCompleted(this, new ValidatePaymentPlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidatePaymentPlanAsync(string SessionKey) {
            this.ValidatePaymentPlanAsync(SessionKey, null);
        }
        
        public void ValidatePaymentPlanAsync(string SessionKey, object userState) {
            if ((this.onBeginValidatePaymentPlanDelegate == null)) {
                this.onBeginValidatePaymentPlanDelegate = new BeginOperationDelegate(this.OnBeginValidatePaymentPlan);
            }
            if ((this.onEndValidatePaymentPlanDelegate == null)) {
                this.onEndValidatePaymentPlanDelegate = new EndOperationDelegate(this.OnEndValidatePaymentPlan);
            }
            if ((this.onValidatePaymentPlanCompletedDelegate == null)) {
                this.onValidatePaymentPlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidatePaymentPlanCompleted);
            }
            base.InvokeAsync(this.onBeginValidatePaymentPlanDelegate, new object[] {
                        SessionKey}, this.onEndValidatePaymentPlanDelegate, this.onValidatePaymentPlanCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetConstituentInfo(string SessionKey) {
            return base.Channel.GetConstituentInfo(SessionKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConstituentInfo(string SessionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConstituentInfo(SessionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetConstituentInfo(System.IAsyncResult result) {
            return base.Channel.EndGetConstituentInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetConstituentInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            return this.BeginGetConstituentInfo(SessionKey, callback, asyncState);
        }
        
        private object[] OnEndGetConstituentInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetConstituentInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConstituentInfoCompleted(object state) {
            if ((this.GetConstituentInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConstituentInfoCompleted(this, new GetConstituentInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConstituentInfoAsync(string SessionKey) {
            this.GetConstituentInfoAsync(SessionKey, null);
        }
        
        public void GetConstituentInfoAsync(string SessionKey, object userState) {
            if ((this.onBeginGetConstituentInfoDelegate == null)) {
                this.onBeginGetConstituentInfoDelegate = new BeginOperationDelegate(this.OnBeginGetConstituentInfo);
            }
            if ((this.onEndGetConstituentInfoDelegate == null)) {
                this.onEndGetConstituentInfoDelegate = new EndOperationDelegate(this.OnEndGetConstituentInfo);
            }
            if ((this.onGetConstituentInfoCompletedDelegate == null)) {
                this.onGetConstituentInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConstituentInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetConstituentInfoDelegate, new object[] {
                        SessionKey}, this.onEndGetConstituentInfoDelegate, this.onGetConstituentInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformanceDetailWithDiscounting(string SessionKey, int iPerf_no, short iModeOfSale) {
            return base.Channel.GetPerformanceDetailWithDiscounting(SessionKey, iPerf_no, iModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformanceDetailWithDiscounting(string SessionKey, int iPerf_no, short iModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailWithDiscounting(SessionKey, iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformanceDetailWithDiscounting(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailWithDiscounting(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailWithDiscounting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int iPerf_no = ((int)(inValues[1]));
            short iModeOfSale = ((short)(inValues[2]));
            return this.BeginGetPerformanceDetailWithDiscounting(SessionKey, iPerf_no, iModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailWithDiscounting(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformanceDetailWithDiscounting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailWithDiscountingCompleted(object state) {
            if ((this.GetPerformanceDetailWithDiscountingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailWithDiscountingCompleted(this, new GetPerformanceDetailWithDiscountingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailWithDiscountingAsync(string SessionKey, int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailWithDiscountingAsync(SessionKey, iPerf_no, iModeOfSale, null);
        }
        
        public void GetPerformanceDetailWithDiscountingAsync(string SessionKey, int iPerf_no, short iModeOfSale, object userState) {
            if ((this.onBeginGetPerformanceDetailWithDiscountingDelegate == null)) {
                this.onBeginGetPerformanceDetailWithDiscountingDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailWithDiscounting);
            }
            if ((this.onEndGetPerformanceDetailWithDiscountingDelegate == null)) {
                this.onEndGetPerformanceDetailWithDiscountingDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailWithDiscounting);
            }
            if ((this.onGetPerformanceDetailWithDiscountingCompletedDelegate == null)) {
                this.onGetPerformanceDetailWithDiscountingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailWithDiscountingDelegate, new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale}, this.onEndGetPerformanceDetailWithDiscountingDelegate, this.onGetPerformanceDetailWithDiscountingCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackageDetailWithDiscounting(string SessionKey, int PackageID, int ModeOfSale) {
            return base.Channel.GetPackageDetailWithDiscounting(SessionKey, PackageID, ModeOfSale);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackageDetailWithDiscounting(string SessionKey, int PackageID, int ModeOfSale, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPackageDetailWithDiscounting(SessionKey, PackageID, ModeOfSale, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackageDetailWithDiscounting(System.IAsyncResult result) {
            return base.Channel.EndGetPackageDetailWithDiscounting(result);
        }
        
        private System.IAsyncResult OnBeginGetPackageDetailWithDiscounting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            int PackageID = ((int)(inValues[1]));
            int ModeOfSale = ((int)(inValues[2]));
            return this.BeginGetPackageDetailWithDiscounting(SessionKey, PackageID, ModeOfSale, callback, asyncState);
        }
        
        private object[] OnEndGetPackageDetailWithDiscounting(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackageDetailWithDiscounting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackageDetailWithDiscountingCompleted(object state) {
            if ((this.GetPackageDetailWithDiscountingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackageDetailWithDiscountingCompleted(this, new GetPackageDetailWithDiscountingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackageDetailWithDiscountingAsync(string SessionKey, int PackageID, int ModeOfSale) {
            this.GetPackageDetailWithDiscountingAsync(SessionKey, PackageID, ModeOfSale, null);
        }
        
        public void GetPackageDetailWithDiscountingAsync(string SessionKey, int PackageID, int ModeOfSale, object userState) {
            if ((this.onBeginGetPackageDetailWithDiscountingDelegate == null)) {
                this.onBeginGetPackageDetailWithDiscountingDelegate = new BeginOperationDelegate(this.OnBeginGetPackageDetailWithDiscounting);
            }
            if ((this.onEndGetPackageDetailWithDiscountingDelegate == null)) {
                this.onEndGetPackageDetailWithDiscountingDelegate = new EndOperationDelegate(this.OnEndGetPackageDetailWithDiscounting);
            }
            if ((this.onGetPackageDetailWithDiscountingCompletedDelegate == null)) {
                this.onGetPackageDetailWithDiscountingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailWithDiscountingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPackageDetailWithDiscountingDelegate, new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale}, this.onEndGetPackageDetailWithDiscountingDelegate, this.onGetPackageDetailWithDiscountingCompletedDelegate, userState);
        }
        
        public void UpdateAccountInfoEx(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator) {
            base.Channel.UpdateAccountInfoEx(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAccountInfoEx(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateAccountInfoEx(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAccountInfoEx(System.IAsyncResult result) {
            base.Channel.EndUpdateAccountInfoEx(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAccountInfoEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sEmail = ((string)(inValues[1]));
            string sPhone = ((string)(inValues[2]));
            string sStreet1 = ((string)(inValues[3]));
            string sStreet2 = ((string)(inValues[4]));
            string sCity = ((string)(inValues[5]));
            string sStateProv = ((string)(inValues[6]));
            string sPostalCode = ((string)(inValues[7]));
            int iCountry = ((int)(inValues[8]));
            string sPhone2 = ((string)(inValues[9]));
            int iPhone2Type = ((int)(inValues[10]));
            string sFax = ((string)(inValues[11]));
            string sMiddleName = ((string)(inValues[12]));
            string sPrefix = ((string)(inValues[13]));
            string sSuffix = ((string)(inValues[14]));
            string sBusinessTitle = ((string)(inValues[15]));
            int iEmailIndicator = ((int)(inValues[16]));
            int iMailIndicator = ((int)(inValues[17]));
            int iPhoneIndicator = ((int)(inValues[18]));
            string sHtmlIndicator = ((string)(inValues[19]));
            return this.BeginUpdateAccountInfoEx(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, callback, asyncState);
        }
        
        private object[] OnEndUpdateAccountInfoEx(System.IAsyncResult result) {
            this.EndUpdateAccountInfoEx(result);
            return null;
        }
        
        private void OnUpdateAccountInfoExCompleted(object state) {
            if ((this.UpdateAccountInfoExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAccountInfoExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAccountInfoExAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator) {
            this.UpdateAccountInfoExAsync(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, null);
        }
        
        public void UpdateAccountInfoExAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    object userState) {
            if ((this.onBeginUpdateAccountInfoExDelegate == null)) {
                this.onBeginUpdateAccountInfoExDelegate = new BeginOperationDelegate(this.OnBeginUpdateAccountInfoEx);
            }
            if ((this.onEndUpdateAccountInfoExDelegate == null)) {
                this.onEndUpdateAccountInfoExDelegate = new EndOperationDelegate(this.OnEndUpdateAccountInfoEx);
            }
            if ((this.onUpdateAccountInfoExCompletedDelegate == null)) {
                this.onUpdateAccountInfoExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAccountInfoExCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAccountInfoExDelegate, new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator}, this.onEndUpdateAccountInfoExDelegate, this.onUpdateAccountInfoExCompletedDelegate, userState);
        }
        
        public bool WebSeatServerListening() {
            return base.Channel.WebSeatServerListening();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebSeatServerListening(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebSeatServerListening(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndWebSeatServerListening(System.IAsyncResult result) {
            return base.Channel.EndWebSeatServerListening(result);
        }
        
        private System.IAsyncResult OnBeginWebSeatServerListening(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginWebSeatServerListening(callback, asyncState);
        }
        
        private object[] OnEndWebSeatServerListening(System.IAsyncResult result) {
            bool retVal = this.EndWebSeatServerListening(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebSeatServerListeningCompleted(object state) {
            if ((this.WebSeatServerListeningCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebSeatServerListeningCompleted(this, new WebSeatServerListeningCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebSeatServerListeningAsync() {
            this.WebSeatServerListeningAsync(null);
        }
        
        public void WebSeatServerListeningAsync(object userState) {
            if ((this.onBeginWebSeatServerListeningDelegate == null)) {
                this.onBeginWebSeatServerListeningDelegate = new BeginOperationDelegate(this.OnBeginWebSeatServerListening);
            }
            if ((this.onEndWebSeatServerListeningDelegate == null)) {
                this.onEndWebSeatServerListeningDelegate = new EndOperationDelegate(this.OnEndWebSeatServerListening);
            }
            if ((this.onWebSeatServerListeningCompletedDelegate == null)) {
                this.onWebSeatServerListeningCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebSeatServerListeningCompleted);
            }
            base.InvokeAsync(this.onBeginWebSeatServerListeningDelegate, null, this.onEndWebSeatServerListeningDelegate, this.onWebSeatServerListeningCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.AddPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest request) {
            return base.Channel.AddPackageItemSeated(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader AddPackageItemSeated(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, out int AddPackageItemSeatedResult) {
            TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest inValue = new TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest();
            inValue.SessionKey = SessionKey;
            inValue.PriceType = PriceType;
            inValue.PackageNumber = PackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            inValue.RequestedSeats = RequestedSeats;
            inValue.LeaveSingleSeats = LeaveSingleSeats;
            TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).AddPackageItemSeated(inValue);
            AddPackageItemSeatedResult = retVal.AddPackageItemSeatedResult;
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginAddPackageItemSeated(TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPackageItemSeated(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddPackageItemSeated(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest inValue = new TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedRequest();
            inValue.SessionKey = SessionKey;
            inValue.PriceType = PriceType;
            inValue.PackageNumber = PackageNumber;
            inValue.NumberOfSeats = NumberOfSeats;
            inValue.Zone = Zone;
            inValue.RequestedSeats = RequestedSeats;
            inValue.LeaveSingleSeats = LeaveSingleSeats;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginAddPackageItemSeated(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndAddPackageItemSeated(System.IAsyncResult result) {
            return base.Channel.EndAddPackageItemSeated(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndAddPackageItemSeated(System.IAsyncResult result, out int AddPackageItemSeatedResult) {
            TessituraIntegration.TessituraWebAPI.AddPackageItemSeatedResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndAddPackageItemSeated(result);
            AddPackageItemSeatedResult = retVal.AddPackageItemSeatedResult;
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginAddPackageItemSeated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SessionKey = ((string)(inValues[0]));
            string PriceType = ((string)(inValues[1]));
            int PackageNumber = ((int)(inValues[2]));
            int NumberOfSeats = ((int)(inValues[3]));
            int Zone = ((int)(inValues[4]));
            string RequestedSeats = ((string)(inValues[5]));
            bool LeaveSingleSeats = ((bool)(inValues[6]));
            return this.BeginAddPackageItemSeated(SessionKey, PriceType, PackageNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, callback, asyncState);
        }
        
        private object[] OnEndAddPackageItemSeated(System.IAsyncResult result) {
            int AddPackageItemSeatedResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndAddPackageItemSeated(result, out AddPackageItemSeatedResult);
            return new object[] {
                    AddPackageItemSeatedResult,
                    retVal};
        }
        
        private void OnAddPackageItemSeatedCompleted(object state) {
            if ((this.AddPackageItemSeatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPackageItemSeatedCompleted(this, new AddPackageItemSeatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPackageItemSeatedAsync(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            this.AddPackageItemSeatedAsync(SessionKey, PriceType, PackageNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, null);
        }
        
        public void AddPackageItemSeatedAsync(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, object userState) {
            if ((this.onBeginAddPackageItemSeatedDelegate == null)) {
                this.onBeginAddPackageItemSeatedDelegate = new BeginOperationDelegate(this.OnBeginAddPackageItemSeated);
            }
            if ((this.onEndAddPackageItemSeatedDelegate == null)) {
                this.onEndAddPackageItemSeatedDelegate = new EndOperationDelegate(this.OnEndAddPackageItemSeated);
            }
            if ((this.onAddPackageItemSeatedCompletedDelegate == null)) {
                this.onAddPackageItemSeatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPackageItemSeatedCompleted);
            }
            base.InvokeAsync(this.onBeginAddPackageItemSeatedDelegate, new object[] {
                        SessionKey,
                        PriceType,
                        PackageNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats}, this.onEndAddPackageItemSeatedDelegate, this.onAddPackageItemSeatedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.ReserveTicketsSpecifiedSeats(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest request) {
            return base.Channel.ReserveTicketsSpecifiedSeats(request);
        }
        
        public TessituraIntegration.TessituraWebAPI.LineItemHeader ReserveTicketsSpecifiedSeats(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats, out int ReserveTicketsSpecifiedSeatsResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            inValue.RequestedSeats = RequestedSeats;
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).ReserveTicketsSpecifiedSeats(inValue);
            ReserveTicketsSpecifiedSeatsResult = retVal.ReserveTicketsSpecifiedSeatsResult;
            return retVal.LineItemHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TessituraIntegration.TessituraWebAPI.TessituraSoap.BeginReserveTicketsSpecifiedSeats(TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReserveTicketsSpecifiedSeats(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReserveTicketsSpecifiedSeats(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats, System.AsyncCallback callback, object asyncState) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest inValue = new TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsRequest();
            inValue.sWebSessionID = sWebSessionID;
            inValue.sPriceType = sPriceType;
            inValue.iPerformanceNumber = iPerformanceNumber;
            inValue.iNumberOfSeats = iNumberOfSeats;
            inValue.iZone = iZone;
            inValue.sSpecialRequests = sSpecialRequests;
            inValue.RequestedSeats = RequestedSeats;
            return ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).BeginReserveTicketsSpecifiedSeats(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsResponse TessituraIntegration.TessituraWebAPI.TessituraSoap.EndReserveTicketsSpecifiedSeats(System.IAsyncResult result) {
            return base.Channel.EndReserveTicketsSpecifiedSeats(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TessituraIntegration.TessituraWebAPI.LineItemHeader EndReserveTicketsSpecifiedSeats(System.IAsyncResult result, out int ReserveTicketsSpecifiedSeatsResult) {
            TessituraIntegration.TessituraWebAPI.ReserveTicketsSpecifiedSeatsResponse retVal = ((TessituraIntegration.TessituraWebAPI.TessituraSoap)(this)).EndReserveTicketsSpecifiedSeats(result);
            ReserveTicketsSpecifiedSeatsResult = retVal.ReserveTicketsSpecifiedSeatsResult;
            return retVal.LineItemHeader;
        }
        
        private System.IAsyncResult OnBeginReserveTicketsSpecifiedSeats(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            string sPriceType = ((string)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iNumberOfSeats = ((int)(inValues[3]));
            int iZone = ((int)(inValues[4]));
            string sSpecialRequests = ((string)(inValues[5]));
            string RequestedSeats = ((string)(inValues[6]));
            return this.BeginReserveTicketsSpecifiedSeats(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, RequestedSeats, callback, asyncState);
        }
        
        private object[] OnEndReserveTicketsSpecifiedSeats(System.IAsyncResult result) {
            int ReserveTicketsSpecifiedSeatsResult = this.GetDefaultValueForInitialization<int>();
            TessituraIntegration.TessituraWebAPI.LineItemHeader retVal = this.EndReserveTicketsSpecifiedSeats(result, out ReserveTicketsSpecifiedSeatsResult);
            return new object[] {
                    ReserveTicketsSpecifiedSeatsResult,
                    retVal};
        }
        
        private void OnReserveTicketsSpecifiedSeatsCompleted(object state) {
            if ((this.ReserveTicketsSpecifiedSeatsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReserveTicketsSpecifiedSeatsCompleted(this, new ReserveTicketsSpecifiedSeatsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReserveTicketsSpecifiedSeatsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats) {
            this.ReserveTicketsSpecifiedSeatsAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, RequestedSeats, null);
        }
        
        public void ReserveTicketsSpecifiedSeatsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats, object userState) {
            if ((this.onBeginReserveTicketsSpecifiedSeatsDelegate == null)) {
                this.onBeginReserveTicketsSpecifiedSeatsDelegate = new BeginOperationDelegate(this.OnBeginReserveTicketsSpecifiedSeats);
            }
            if ((this.onEndReserveTicketsSpecifiedSeatsDelegate == null)) {
                this.onEndReserveTicketsSpecifiedSeatsDelegate = new EndOperationDelegate(this.OnEndReserveTicketsSpecifiedSeats);
            }
            if ((this.onReserveTicketsSpecifiedSeatsCompletedDelegate == null)) {
                this.onReserveTicketsSpecifiedSeatsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReserveTicketsSpecifiedSeatsCompleted);
            }
            base.InvokeAsync(this.onBeginReserveTicketsSpecifiedSeatsDelegate, new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests,
                        RequestedSeats}, this.onEndReserveTicketsSpecifiedSeatsDelegate, this.onReserveTicketsSpecifiedSeatsCompletedDelegate, userState);
        }
        
        public void ForgotLogin(string sSessionKey, string sEmail, int iLoginType) {
            base.Channel.ForgotLogin(sSessionKey, sEmail, iLoginType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginForgotLogin(string sSessionKey, string sEmail, int iLoginType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForgotLogin(sSessionKey, sEmail, iLoginType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndForgotLogin(System.IAsyncResult result) {
            base.Channel.EndForgotLogin(result);
        }
        
        private System.IAsyncResult OnBeginForgotLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sSessionKey = ((string)(inValues[0]));
            string sEmail = ((string)(inValues[1]));
            int iLoginType = ((int)(inValues[2]));
            return this.BeginForgotLogin(sSessionKey, sEmail, iLoginType, callback, asyncState);
        }
        
        private object[] OnEndForgotLogin(System.IAsyncResult result) {
            this.EndForgotLogin(result);
            return null;
        }
        
        private void OnForgotLoginCompleted(object state) {
            if ((this.ForgotLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForgotLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForgotLoginAsync(string sSessionKey, string sEmail, int iLoginType) {
            this.ForgotLoginAsync(sSessionKey, sEmail, iLoginType, null);
        }
        
        public void ForgotLoginAsync(string sSessionKey, string sEmail, int iLoginType, object userState) {
            if ((this.onBeginForgotLoginDelegate == null)) {
                this.onBeginForgotLoginDelegate = new BeginOperationDelegate(this.OnBeginForgotLogin);
            }
            if ((this.onEndForgotLoginDelegate == null)) {
                this.onEndForgotLoginDelegate = new EndOperationDelegate(this.OnEndForgotLogin);
            }
            if ((this.onForgotLoginCompletedDelegate == null)) {
                this.onForgotLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForgotLoginCompleted);
            }
            base.InvokeAsync(this.onBeginForgotLoginDelegate, new object[] {
                        sSessionKey,
                        sEmail,
                        iLoginType}, this.onEndForgotLoginDelegate, this.onForgotLoginCompletedDelegate, userState);
        }
        
        public void UpdatePriceType(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber) {
            base.Channel.UpdatePriceType(sWebSessionId, iOldPrice, iNewPrice, iLineItemNumber, iSubLineItemNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePriceType(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePriceType(sWebSessionId, iOldPrice, iNewPrice, iLineItemNumber, iSubLineItemNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePriceType(System.IAsyncResult result) {
            base.Channel.EndUpdatePriceType(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePriceType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            int iOldPrice = ((int)(inValues[1]));
            int iNewPrice = ((int)(inValues[2]));
            int iLineItemNumber = ((int)(inValues[3]));
            int iSubLineItemNumber = ((int)(inValues[4]));
            return this.BeginUpdatePriceType(sWebSessionId, iOldPrice, iNewPrice, iLineItemNumber, iSubLineItemNumber, callback, asyncState);
        }
        
        private object[] OnEndUpdatePriceType(System.IAsyncResult result) {
            this.EndUpdatePriceType(result);
            return null;
        }
        
        private void OnUpdatePriceTypeCompleted(object state) {
            if ((this.UpdatePriceTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePriceTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePriceTypeAsync(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber) {
            this.UpdatePriceTypeAsync(sWebSessionId, iOldPrice, iNewPrice, iLineItemNumber, iSubLineItemNumber, null);
        }
        
        public void UpdatePriceTypeAsync(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber, object userState) {
            if ((this.onBeginUpdatePriceTypeDelegate == null)) {
                this.onBeginUpdatePriceTypeDelegate = new BeginOperationDelegate(this.OnBeginUpdatePriceType);
            }
            if ((this.onEndUpdatePriceTypeDelegate == null)) {
                this.onEndUpdatePriceTypeDelegate = new EndOperationDelegate(this.OnEndUpdatePriceType);
            }
            if ((this.onUpdatePriceTypeCompletedDelegate == null)) {
                this.onUpdatePriceTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePriceTypeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePriceTypeDelegate, new object[] {
                        sWebSessionId,
                        iOldPrice,
                        iNewPrice,
                        iLineItemNumber,
                        iSubLineItemNumber}, this.onEndUpdatePriceTypeDelegate, this.onUpdatePriceTypeCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ValidateCustomOffer(string sWebSessionId, int iPoint) {
            return base.Channel.ValidateCustomOffer(sWebSessionId, iPoint);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateCustomOffer(string sWebSessionId, int iPoint, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateCustomOffer(sWebSessionId, iPoint, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndValidateCustomOffer(System.IAsyncResult result) {
            return base.Channel.EndValidateCustomOffer(result);
        }
        
        private System.IAsyncResult OnBeginValidateCustomOffer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            int iPoint = ((int)(inValues[1]));
            return this.BeginValidateCustomOffer(sWebSessionId, iPoint, callback, asyncState);
        }
        
        private object[] OnEndValidateCustomOffer(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndValidateCustomOffer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateCustomOfferCompleted(object state) {
            if ((this.ValidateCustomOfferCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateCustomOfferCompleted(this, new ValidateCustomOfferCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateCustomOfferAsync(string sWebSessionId, int iPoint) {
            this.ValidateCustomOfferAsync(sWebSessionId, iPoint, null);
        }
        
        public void ValidateCustomOfferAsync(string sWebSessionId, int iPoint, object userState) {
            if ((this.onBeginValidateCustomOfferDelegate == null)) {
                this.onBeginValidateCustomOfferDelegate = new BeginOperationDelegate(this.OnBeginValidateCustomOffer);
            }
            if ((this.onEndValidateCustomOfferDelegate == null)) {
                this.onEndValidateCustomOfferDelegate = new EndOperationDelegate(this.OnEndValidateCustomOffer);
            }
            if ((this.onValidateCustomOfferCompletedDelegate == null)) {
                this.onValidateCustomOfferCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateCustomOfferCompleted);
            }
            base.InvokeAsync(this.onBeginValidateCustomOfferDelegate, new object[] {
                        sWebSessionId,
                        iPoint}, this.onEndValidateCustomOfferDelegate, this.onValidateCustomOfferCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetKeywordsEx(string sWebSessionId, int iKeywordCategory, string sUsedIn) {
            return base.Channel.GetKeywordsEx(sWebSessionId, iKeywordCategory, sUsedIn);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetKeywordsEx(string sWebSessionId, int iKeywordCategory, string sUsedIn, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKeywordsEx(sWebSessionId, iKeywordCategory, sUsedIn, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetKeywordsEx(System.IAsyncResult result) {
            return base.Channel.EndGetKeywordsEx(result);
        }
        
        private System.IAsyncResult OnBeginGetKeywordsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            int iKeywordCategory = ((int)(inValues[1]));
            string sUsedIn = ((string)(inValues[2]));
            return this.BeginGetKeywordsEx(sWebSessionId, iKeywordCategory, sUsedIn, callback, asyncState);
        }
        
        private object[] OnEndGetKeywordsEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetKeywordsEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKeywordsExCompleted(object state) {
            if ((this.GetKeywordsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKeywordsExCompleted(this, new GetKeywordsExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKeywordsExAsync(string sWebSessionId, int iKeywordCategory, string sUsedIn) {
            this.GetKeywordsExAsync(sWebSessionId, iKeywordCategory, sUsedIn, null);
        }
        
        public void GetKeywordsExAsync(string sWebSessionId, int iKeywordCategory, string sUsedIn, object userState) {
            if ((this.onBeginGetKeywordsExDelegate == null)) {
                this.onBeginGetKeywordsExDelegate = new BeginOperationDelegate(this.OnBeginGetKeywordsEx);
            }
            if ((this.onEndGetKeywordsExDelegate == null)) {
                this.onEndGetKeywordsExDelegate = new EndOperationDelegate(this.OnEndGetKeywordsEx);
            }
            if ((this.onGetKeywordsExCompletedDelegate == null)) {
                this.onGetKeywordsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKeywordsExCompleted);
            }
            base.InvokeAsync(this.onBeginGetKeywordsExDelegate, new object[] {
                        sWebSessionId,
                        iKeywordCategory,
                        sUsedIn}, this.onEndGetKeywordsExDelegate, this.onGetKeywordsExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsByScreen(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            return base.Channel.GetSeatsByScreen(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsByScreen(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsByScreen(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsByScreen(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsByScreen(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsByScreen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            short iScreenNumber = ((short)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iPackageNumber = ((int)(inValues[3]));
            short iMos = ((short)(inValues[4]));
            return this.BeginGetSeatsByScreen(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsByScreen(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsByScreen(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsByScreenCompleted(object state) {
            if ((this.GetSeatsByScreenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsByScreenCompleted(this, new GetSeatsByScreenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsByScreenAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            this.GetSeatsByScreenAsync(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, null);
        }
        
        public void GetSeatsByScreenAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, object userState) {
            if ((this.onBeginGetSeatsByScreenDelegate == null)) {
                this.onBeginGetSeatsByScreenDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsByScreen);
            }
            if ((this.onEndGetSeatsByScreenDelegate == null)) {
                this.onEndGetSeatsByScreenDelegate = new EndOperationDelegate(this.OnEndGetSeatsByScreen);
            }
            if ((this.onGetSeatsByScreenCompletedDelegate == null)) {
                this.onGetSeatsByScreenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsByScreenCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsByScreenDelegate, new object[] {
                        sWebSessionId,
                        iScreenNumber,
                        iPerformanceNumber,
                        iPackageNumber,
                        iMos}, this.onEndGetSeatsByScreenDelegate, this.onGetSeatsByScreenCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatsByScreenBrief(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            return base.Channel.GetSeatsByScreenBrief(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatsByScreenBrief(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatsByScreenBrief(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatsByScreenBrief(System.IAsyncResult result) {
            return base.Channel.EndGetSeatsByScreenBrief(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatsByScreenBrief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            short iScreenNumber = ((short)(inValues[1]));
            int iPerformanceNumber = ((int)(inValues[2]));
            int iPackageNumber = ((int)(inValues[3]));
            short iMos = ((short)(inValues[4]));
            return this.BeginGetSeatsByScreenBrief(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, callback, asyncState);
        }
        
        private object[] OnEndGetSeatsByScreenBrief(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatsByScreenBrief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatsByScreenBriefCompleted(object state) {
            if ((this.GetSeatsByScreenBriefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatsByScreenBriefCompleted(this, new GetSeatsByScreenBriefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatsByScreenBriefAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            this.GetSeatsByScreenBriefAsync(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, null);
        }
        
        public void GetSeatsByScreenBriefAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, object userState) {
            if ((this.onBeginGetSeatsByScreenBriefDelegate == null)) {
                this.onBeginGetSeatsByScreenBriefDelegate = new BeginOperationDelegate(this.OnBeginGetSeatsByScreenBrief);
            }
            if ((this.onEndGetSeatsByScreenBriefDelegate == null)) {
                this.onEndGetSeatsByScreenBriefDelegate = new EndOperationDelegate(this.OnEndGetSeatsByScreenBrief);
            }
            if ((this.onGetSeatsByScreenBriefCompletedDelegate == null)) {
                this.onGetSeatsByScreenBriefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatsByScreenBriefCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatsByScreenBriefDelegate, new object[] {
                        sWebSessionId,
                        iScreenNumber,
                        iPerformanceNumber,
                        iPackageNumber,
                        iMos}, this.onEndGetSeatsByScreenBriefDelegate, this.onGetSeatsByScreenBriefCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeatStatus() {
            return base.Channel.GetSeatStatus();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeatStatus(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeatStatus(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeatStatus(System.IAsyncResult result) {
            return base.Channel.EndGetSeatStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetSeatStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSeatStatus(callback, asyncState);
        }
        
        private object[] OnEndGetSeatStatus(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeatStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeatStatusCompleted(object state) {
            if ((this.GetSeatStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeatStatusCompleted(this, new GetSeatStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeatStatusAsync() {
            this.GetSeatStatusAsync(null);
        }
        
        public void GetSeatStatusAsync(object userState) {
            if ((this.onBeginGetSeatStatusDelegate == null)) {
                this.onBeginGetSeatStatusDelegate = new BeginOperationDelegate(this.OnBeginGetSeatStatus);
            }
            if ((this.onEndGetSeatStatusDelegate == null)) {
                this.onEndGetSeatStatusDelegate = new EndOperationDelegate(this.OnEndGetSeatStatus);
            }
            if ((this.onGetSeatStatusCompletedDelegate == null)) {
                this.onGetSeatStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeatStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeatStatusDelegate, null, this.onEndGetSeatStatusDelegate, this.onGetSeatStatusCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPerformancesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName) {
            return base.Channel.GetPerformancesEx(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerformancesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformancesEx(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPerformancesEx(System.IAsyncResult result) {
            return base.Channel.EndGetPerformancesEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformancesEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            short iVenueID = ((short)(inValues[3]));
            short iModeOfSale = ((short)(inValues[4]));
            int iBusinessUnit = ((int)(inValues[5]));
            string sSortString = ((string)(inValues[6]));
            string sKeywords = ((string)(inValues[7]));
            string cKeywordAndOrStatement = ((string)(inValues[8]));
            string sArtistLastName = ((string)(inValues[9]));
            return this.BeginGetPerformancesEx(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, callback, asyncState);
        }
        
        private object[] OnEndGetPerformancesEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPerformancesEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformancesExCompleted(object state) {
            if ((this.GetPerformancesExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformancesExCompleted(this, new GetPerformancesExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformancesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName) {
            this.GetPerformancesExAsync(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, null);
        }
        
        public void GetPerformancesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, object userState) {
            if ((this.onBeginGetPerformancesExDelegate == null)) {
                this.onBeginGetPerformancesExDelegate = new BeginOperationDelegate(this.OnBeginGetPerformancesEx);
            }
            if ((this.onEndGetPerformancesExDelegate == null)) {
                this.onEndGetPerformancesExDelegate = new EndOperationDelegate(this.OnEndGetPerformancesEx);
            }
            if ((this.onGetPerformancesExCompletedDelegate == null)) {
                this.onGetPerformancesExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformancesExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformancesExDelegate, new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName}, this.onEndGetPerformancesExDelegate, this.onGetPerformancesExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetPackagesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances) {
            return base.Channel.GetPackagesEx(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPackagesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPackagesEx(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetPackagesEx(System.IAsyncResult result) {
            return base.Channel.EndGetPackagesEx(result);
        }
        
        private System.IAsyncResult OnBeginGetPackagesEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sStartDate = ((string)(inValues[1]));
            string sEndDate = ((string)(inValues[2]));
            short iVenueID = ((short)(inValues[3]));
            short iModeOfSale = ((short)(inValues[4]));
            int iBusinessUnit = ((int)(inValues[5]));
            string sSortString = ((string)(inValues[6]));
            string sKeywords = ((string)(inValues[7]));
            string cKeywordAndOrStatement = ((string)(inValues[8]));
            string sArtistLastName = ((string)(inValues[9]));
            int iSeason = ((int)(inValues[10]));
            int iPackageType = ((int)(inValues[11]));
            bool bMatchAllPerformances = ((bool)(inValues[12]));
            return this.BeginGetPackagesEx(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, callback, asyncState);
        }
        
        private object[] OnEndGetPackagesEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetPackagesEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPackagesExCompleted(object state) {
            if ((this.GetPackagesExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPackagesExCompleted(this, new GetPackagesExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPackagesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances) {
            this.GetPackagesExAsync(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, null);
        }
        
        public void GetPackagesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances, object userState) {
            if ((this.onBeginGetPackagesExDelegate == null)) {
                this.onBeginGetPackagesExDelegate = new BeginOperationDelegate(this.OnBeginGetPackagesEx);
            }
            if ((this.onEndGetPackagesExDelegate == null)) {
                this.onEndGetPackagesExDelegate = new EndOperationDelegate(this.OnEndGetPackagesEx);
            }
            if ((this.onGetPackagesExCompletedDelegate == null)) {
                this.onGetPackagesExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPackagesExCompleted);
            }
            base.InvokeAsync(this.onBeginGetPackagesExDelegate, new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances}, this.onEndGetPackagesExDelegate, this.onGetPackagesExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetConstituents(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress) {
            return base.Channel.GetConstituents(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConstituents(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConstituents(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetConstituents(System.IAsyncResult result) {
            return base.Channel.EndGetConstituents(result);
        }
        
        private System.IAsyncResult OnBeginGetConstituents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            string sCCNumber = ((string)(inValues[1]));
            string sPhoneNumber = ((string)(inValues[2]));
            int iCustomerServiceNumber = ((int)(inValues[3]));
            int iOrderNumber = ((int)(inValues[4]));
            string sEmailAddress = ((string)(inValues[5]));
            return this.BeginGetConstituents(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, callback, asyncState);
        }
        
        private object[] OnEndGetConstituents(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetConstituents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConstituentsCompleted(object state) {
            if ((this.GetConstituentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConstituentsCompleted(this, new GetConstituentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConstituentsAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress) {
            this.GetConstituentsAsync(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, null);
        }
        
        public void GetConstituentsAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, object userState) {
            if ((this.onBeginGetConstituentsDelegate == null)) {
                this.onBeginGetConstituentsDelegate = new BeginOperationDelegate(this.OnBeginGetConstituents);
            }
            if ((this.onEndGetConstituentsDelegate == null)) {
                this.onEndGetConstituentsDelegate = new EndOperationDelegate(this.OnEndGetConstituents);
            }
            if ((this.onGetConstituentsCompletedDelegate == null)) {
                this.onGetConstituentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConstituentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetConstituentsDelegate, new object[] {
                        sWebSessionId,
                        sCCNumber,
                        sPhoneNumber,
                        iCustomerServiceNumber,
                        iOrderNumber,
                        sEmailAddress}, this.onEndGetConstituentsDelegate, this.onGetConstituentsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetOrdersEx(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod) {
            return base.Channel.GetOrdersEx(sWebSessionId, iOrderNumber, sPhoneNumber, cPrint, dtStartDate, dtEndDate, iSeason, iCustomerNumber, iMos, cRenewals, iDeliveryMethod);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrdersEx(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrdersEx(sWebSessionId, iOrderNumber, sPhoneNumber, cPrint, dtStartDate, dtEndDate, iSeason, iCustomerNumber, iMos, cRenewals, iDeliveryMethod, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetOrdersEx(System.IAsyncResult result) {
            return base.Channel.EndGetOrdersEx(result);
        }
        
        private System.IAsyncResult OnBeginGetOrdersEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            int iOrderNumber = ((int)(inValues[1]));
            string sPhoneNumber = ((string)(inValues[2]));
            char cPrint = ((char)(inValues[3]));
            string dtStartDate = ((string)(inValues[4]));
            string dtEndDate = ((string)(inValues[5]));
            int iSeason = ((int)(inValues[6]));
            int iCustomerNumber = ((int)(inValues[7]));
            int iMos = ((int)(inValues[8]));
            char cRenewals = ((char)(inValues[9]));
            int iDeliveryMethod = ((int)(inValues[10]));
            return this.BeginGetOrdersEx(sWebSessionId, iOrderNumber, sPhoneNumber, cPrint, dtStartDate, dtEndDate, iSeason, iCustomerNumber, iMos, cRenewals, iDeliveryMethod, callback, asyncState);
        }
        
        private object[] OnEndGetOrdersEx(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetOrdersEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrdersExCompleted(object state) {
            if ((this.GetOrdersExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrdersExCompleted(this, new GetOrdersExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrdersExAsync(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod) {
            this.GetOrdersExAsync(sWebSessionId, iOrderNumber, sPhoneNumber, cPrint, dtStartDate, dtEndDate, iSeason, iCustomerNumber, iMos, cRenewals, iDeliveryMethod, null);
        }
        
        public void GetOrdersExAsync(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod, object userState) {
            if ((this.onBeginGetOrdersExDelegate == null)) {
                this.onBeginGetOrdersExDelegate = new BeginOperationDelegate(this.OnBeginGetOrdersEx);
            }
            if ((this.onEndGetOrdersExDelegate == null)) {
                this.onEndGetOrdersExDelegate = new EndOperationDelegate(this.OnEndGetOrdersEx);
            }
            if ((this.onGetOrdersExCompletedDelegate == null)) {
                this.onGetOrdersExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrdersExCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrdersExDelegate, new object[] {
                        sWebSessionId,
                        iOrderNumber,
                        sPhoneNumber,
                        cPrint,
                        dtStartDate,
                        dtEndDate,
                        iSeason,
                        iCustomerNumber,
                        iMos,
                        cRenewals,
                        iDeliveryMethod}, this.onEndGetOrdersExDelegate, this.onGetOrdersExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetTicketPrintInformation(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint) {
            return base.Channel.GetTicketPrintInformation(sWebSessionId, iOrderId, sHeaderDesign, sTicketDesign, cReceipt, cReprint);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTicketPrintInformation(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTicketPrintInformation(sWebSessionId, iOrderId, sHeaderDesign, sTicketDesign, cReceipt, cReprint, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetTicketPrintInformation(System.IAsyncResult result) {
            return base.Channel.EndGetTicketPrintInformation(result);
        }
        
        private System.IAsyncResult OnBeginGetTicketPrintInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            int iOrderId = ((int)(inValues[1]));
            string sHeaderDesign = ((string)(inValues[2]));
            string sTicketDesign = ((string)(inValues[3]));
            string cReceipt = ((string)(inValues[4]));
            string cReprint = ((string)(inValues[5]));
            return this.BeginGetTicketPrintInformation(sWebSessionId, iOrderId, sHeaderDesign, sTicketDesign, cReceipt, cReprint, callback, asyncState);
        }
        
        private object[] OnEndGetTicketPrintInformation(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetTicketPrintInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTicketPrintInformationCompleted(object state) {
            if ((this.GetTicketPrintInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTicketPrintInformationCompleted(this, new GetTicketPrintInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTicketPrintInformationAsync(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint) {
            this.GetTicketPrintInformationAsync(sWebSessionId, iOrderId, sHeaderDesign, sTicketDesign, cReceipt, cReprint, null);
        }
        
        public void GetTicketPrintInformationAsync(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint, object userState) {
            if ((this.onBeginGetTicketPrintInformationDelegate == null)) {
                this.onBeginGetTicketPrintInformationDelegate = new BeginOperationDelegate(this.OnBeginGetTicketPrintInformation);
            }
            if ((this.onEndGetTicketPrintInformationDelegate == null)) {
                this.onEndGetTicketPrintInformationDelegate = new EndOperationDelegate(this.OnEndGetTicketPrintInformation);
            }
            if ((this.onGetTicketPrintInformationCompletedDelegate == null)) {
                this.onGetTicketPrintInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTicketPrintInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetTicketPrintInformationDelegate, new object[] {
                        sWebSessionId,
                        iOrderId,
                        sHeaderDesign,
                        sTicketDesign,
                        cReceipt,
                        cReprint}, this.onEndGetTicketPrintInformationDelegate, this.onGetTicketPrintInformationCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateConstituentAttributes(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName) {
            return base.Channel.UpdateConstituentAttributes(sWebSessionId, cAction, iKeywordNumber, sOldKeyValue, sNewKeyValue, cAccountName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateConstituentAttributes(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateConstituentAttributes(sWebSessionId, cAction, iKeywordNumber, sOldKeyValue, sNewKeyValue, cAccountName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateConstituentAttributes(System.IAsyncResult result) {
            return base.Channel.EndUpdateConstituentAttributes(result);
        }
        
        private System.IAsyncResult OnBeginUpdateConstituentAttributes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            char cAction = ((char)(inValues[1]));
            int iKeywordNumber = ((int)(inValues[2]));
            string sOldKeyValue = ((string)(inValues[3]));
            string sNewKeyValue = ((string)(inValues[4]));
            char cAccountName = ((char)(inValues[5]));
            return this.BeginUpdateConstituentAttributes(sWebSessionId, cAction, iKeywordNumber, sOldKeyValue, sNewKeyValue, cAccountName, callback, asyncState);
        }
        
        private object[] OnEndUpdateConstituentAttributes(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateConstituentAttributes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateConstituentAttributesCompleted(object state) {
            if ((this.UpdateConstituentAttributesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateConstituentAttributesCompleted(this, new UpdateConstituentAttributesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateConstituentAttributesAsync(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName) {
            this.UpdateConstituentAttributesAsync(sWebSessionId, cAction, iKeywordNumber, sOldKeyValue, sNewKeyValue, cAccountName, null);
        }
        
        public void UpdateConstituentAttributesAsync(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName, object userState) {
            if ((this.onBeginUpdateConstituentAttributesDelegate == null)) {
                this.onBeginUpdateConstituentAttributesDelegate = new BeginOperationDelegate(this.OnBeginUpdateConstituentAttributes);
            }
            if ((this.onEndUpdateConstituentAttributesDelegate == null)) {
                this.onEndUpdateConstituentAttributesDelegate = new EndOperationDelegate(this.OnEndUpdateConstituentAttributes);
            }
            if ((this.onUpdateConstituentAttributesCompletedDelegate == null)) {
                this.onUpdateConstituentAttributesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateConstituentAttributesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateConstituentAttributesDelegate, new object[] {
                        sWebSessionId,
                        cAction,
                        iKeywordNumber,
                        sOldKeyValue,
                        sNewKeyValue,
                        cAccountName}, this.onEndUpdateConstituentAttributesDelegate, this.onUpdateConstituentAttributesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet UpdateConstituentInterests(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight) {
            return base.Channel.UpdateConstituentInterests(sWebSessionId, cAction, iKeywordNumber, cSelected, iWeight);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateConstituentInterests(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateConstituentInterests(sWebSessionId, cAction, iKeywordNumber, cSelected, iWeight, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndUpdateConstituentInterests(System.IAsyncResult result) {
            return base.Channel.EndUpdateConstituentInterests(result);
        }
        
        private System.IAsyncResult OnBeginUpdateConstituentInterests(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionId = ((string)(inValues[0]));
            char cAction = ((char)(inValues[1]));
            int iKeywordNumber = ((int)(inValues[2]));
            char cSelected = ((char)(inValues[3]));
            int iWeight = ((int)(inValues[4]));
            return this.BeginUpdateConstituentInterests(sWebSessionId, cAction, iKeywordNumber, cSelected, iWeight, callback, asyncState);
        }
        
        private object[] OnEndUpdateConstituentInterests(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndUpdateConstituentInterests(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateConstituentInterestsCompleted(object state) {
            if ((this.UpdateConstituentInterestsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateConstituentInterestsCompleted(this, new UpdateConstituentInterestsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateConstituentInterestsAsync(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight) {
            this.UpdateConstituentInterestsAsync(sWebSessionId, cAction, iKeywordNumber, cSelected, iWeight, null);
        }
        
        public void UpdateConstituentInterestsAsync(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight, object userState) {
            if ((this.onBeginUpdateConstituentInterestsDelegate == null)) {
                this.onBeginUpdateConstituentInterestsDelegate = new BeginOperationDelegate(this.OnBeginUpdateConstituentInterests);
            }
            if ((this.onEndUpdateConstituentInterestsDelegate == null)) {
                this.onEndUpdateConstituentInterestsDelegate = new EndOperationDelegate(this.OnEndUpdateConstituentInterests);
            }
            if ((this.onUpdateConstituentInterestsCompletedDelegate == null)) {
                this.onUpdateConstituentInterestsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateConstituentInterestsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateConstituentInterestsDelegate, new object[] {
                        sWebSessionId,
                        cAction,
                        iKeywordNumber,
                        cSelected,
                        iWeight}, this.onEndUpdateConstituentInterestsDelegate, this.onUpdateConstituentInterestsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetOrdersForDelivery(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail) {
            return base.Channel.GetOrdersForDelivery(sMos, dPerformanceStartDate, dPerformanceEndDate, dOrderStartDate, dOrderEndDate, iOrderDaysPast, sDeliveryMethod, iMaxOrdersReturned, cPrimaryEmail);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrdersForDelivery(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrdersForDelivery(sMos, dPerformanceStartDate, dPerformanceEndDate, dOrderStartDate, dOrderEndDate, iOrderDaysPast, sDeliveryMethod, iMaxOrdersReturned, cPrimaryEmail, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetOrdersForDelivery(System.IAsyncResult result) {
            return base.Channel.EndGetOrdersForDelivery(result);
        }
        
        private System.IAsyncResult OnBeginGetOrdersForDelivery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sMos = ((string)(inValues[0]));
            string dPerformanceStartDate = ((string)(inValues[1]));
            string dPerformanceEndDate = ((string)(inValues[2]));
            string dOrderStartDate = ((string)(inValues[3]));
            string dOrderEndDate = ((string)(inValues[4]));
            int iOrderDaysPast = ((int)(inValues[5]));
            string sDeliveryMethod = ((string)(inValues[6]));
            int iMaxOrdersReturned = ((int)(inValues[7]));
            string cPrimaryEmail = ((string)(inValues[8]));
            return this.BeginGetOrdersForDelivery(sMos, dPerformanceStartDate, dPerformanceEndDate, dOrderStartDate, dOrderEndDate, iOrderDaysPast, sDeliveryMethod, iMaxOrdersReturned, cPrimaryEmail, callback, asyncState);
        }
        
        private object[] OnEndGetOrdersForDelivery(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetOrdersForDelivery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrdersForDeliveryCompleted(object state) {
            if ((this.GetOrdersForDeliveryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrdersForDeliveryCompleted(this, new GetOrdersForDeliveryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrdersForDeliveryAsync(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail) {
            this.GetOrdersForDeliveryAsync(sMos, dPerformanceStartDate, dPerformanceEndDate, dOrderStartDate, dOrderEndDate, iOrderDaysPast, sDeliveryMethod, iMaxOrdersReturned, cPrimaryEmail, null);
        }
        
        public void GetOrdersForDeliveryAsync(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail, object userState) {
            if ((this.onBeginGetOrdersForDeliveryDelegate == null)) {
                this.onBeginGetOrdersForDeliveryDelegate = new BeginOperationDelegate(this.OnBeginGetOrdersForDelivery);
            }
            if ((this.onEndGetOrdersForDeliveryDelegate == null)) {
                this.onEndGetOrdersForDeliveryDelegate = new EndOperationDelegate(this.OnEndGetOrdersForDelivery);
            }
            if ((this.onGetOrdersForDeliveryCompletedDelegate == null)) {
                this.onGetOrdersForDeliveryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrdersForDeliveryCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrdersForDeliveryDelegate, new object[] {
                        sMos,
                        dPerformanceStartDate,
                        dPerformanceEndDate,
                        dOrderStartDate,
                        dOrderEndDate,
                        iOrderDaysPast,
                        sDeliveryMethod,
                        iMaxOrdersReturned,
                        cPrimaryEmail}, this.onEndGetOrdersForDeliveryDelegate, this.onGetOrdersForDeliveryCompletedDelegate, userState);
        }
        
        public bool UpdateEmailStatus(int iOrderNumber, int iEmailId, string dDateTime) {
            return base.Channel.UpdateEmailStatus(iOrderNumber, iEmailId, dDateTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateEmailStatus(int iOrderNumber, int iEmailId, string dDateTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEmailStatus(iOrderNumber, iEmailId, dDateTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateEmailStatus(System.IAsyncResult result) {
            return base.Channel.EndUpdateEmailStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEmailStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iOrderNumber = ((int)(inValues[0]));
            int iEmailId = ((int)(inValues[1]));
            string dDateTime = ((string)(inValues[2]));
            return this.BeginUpdateEmailStatus(iOrderNumber, iEmailId, dDateTime, callback, asyncState);
        }
        
        private object[] OnEndUpdateEmailStatus(System.IAsyncResult result) {
            bool retVal = this.EndUpdateEmailStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEmailStatusCompleted(object state) {
            if ((this.UpdateEmailStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEmailStatusCompleted(this, new UpdateEmailStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEmailStatusAsync(int iOrderNumber, int iEmailId, string dDateTime) {
            this.UpdateEmailStatusAsync(iOrderNumber, iEmailId, dDateTime, null);
        }
        
        public void UpdateEmailStatusAsync(int iOrderNumber, int iEmailId, string dDateTime, object userState) {
            if ((this.onBeginUpdateEmailStatusDelegate == null)) {
                this.onBeginUpdateEmailStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateEmailStatus);
            }
            if ((this.onEndUpdateEmailStatusDelegate == null)) {
                this.onEndUpdateEmailStatusDelegate = new EndOperationDelegate(this.OnEndUpdateEmailStatus);
            }
            if ((this.onUpdateEmailStatusCompletedDelegate == null)) {
                this.onUpdateEmailStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEmailStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEmailStatusDelegate, new object[] {
                        iOrderNumber,
                        iEmailId,
                        dDateTime}, this.onEndUpdateEmailStatusDelegate, this.onUpdateEmailStatusCompletedDelegate, userState);
        }
        
        public string GetNewSessionKeyEx(string sIP, int iBusinessUnit) {
            return base.Channel.GetNewSessionKeyEx(sIP, iBusinessUnit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNewSessionKeyEx(string sIP, int iBusinessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewSessionKeyEx(sIP, iBusinessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetNewSessionKeyEx(System.IAsyncResult result) {
            return base.Channel.EndGetNewSessionKeyEx(result);
        }
        
        private System.IAsyncResult OnBeginGetNewSessionKeyEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sIP = ((string)(inValues[0]));
            int iBusinessUnit = ((int)(inValues[1]));
            return this.BeginGetNewSessionKeyEx(sIP, iBusinessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetNewSessionKeyEx(System.IAsyncResult result) {
            string retVal = this.EndGetNewSessionKeyEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewSessionKeyExCompleted(object state) {
            if ((this.GetNewSessionKeyExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewSessionKeyExCompleted(this, new GetNewSessionKeyExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewSessionKeyExAsync(string sIP, int iBusinessUnit) {
            this.GetNewSessionKeyExAsync(sIP, iBusinessUnit, null);
        }
        
        public void GetNewSessionKeyExAsync(string sIP, int iBusinessUnit, object userState) {
            if ((this.onBeginGetNewSessionKeyExDelegate == null)) {
                this.onBeginGetNewSessionKeyExDelegate = new BeginOperationDelegate(this.OnBeginGetNewSessionKeyEx);
            }
            if ((this.onEndGetNewSessionKeyExDelegate == null)) {
                this.onEndGetNewSessionKeyExDelegate = new EndOperationDelegate(this.OnEndGetNewSessionKeyEx);
            }
            if ((this.onGetNewSessionKeyExCompletedDelegate == null)) {
                this.onGetNewSessionKeyExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewSessionKeyExCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewSessionKeyExDelegate, new object[] {
                        sIP,
                        iBusinessUnit}, this.onEndGetNewSessionKeyExDelegate, this.onGetNewSessionKeyExCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCartBrief(string sWebSessionID) {
            return base.Channel.GetCartBrief(sWebSessionID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCartBrief(string sWebSessionID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCartBrief(sWebSessionID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCartBrief(System.IAsyncResult result) {
            return base.Channel.EndGetCartBrief(result);
        }
        
        private System.IAsyncResult OnBeginGetCartBrief(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sWebSessionID = ((string)(inValues[0]));
            return this.BeginGetCartBrief(sWebSessionID, callback, asyncState);
        }
        
        private object[] OnEndGetCartBrief(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCartBrief(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCartBriefCompleted(object state) {
            if ((this.GetCartBriefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCartBriefCompleted(this, new GetCartBriefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCartBriefAsync(string sWebSessionID) {
            this.GetCartBriefAsync(sWebSessionID, null);
        }
        
        public void GetCartBriefAsync(string sWebSessionID, object userState) {
            if ((this.onBeginGetCartBriefDelegate == null)) {
                this.onBeginGetCartBriefDelegate = new BeginOperationDelegate(this.OnBeginGetCartBrief);
            }
            if ((this.onEndGetCartBriefDelegate == null)) {
                this.onEndGetCartBriefDelegate = new EndOperationDelegate(this.OnEndGetCartBrief);
            }
            if ((this.onGetCartBriefCompletedDelegate == null)) {
                this.onGetCartBriefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCartBriefCompleted);
            }
            base.InvokeAsync(this.onBeginGetCartBriefDelegate, new object[] {
                        sWebSessionID}, this.onEndGetCartBriefDelegate, this.onGetCartBriefCompletedDelegate, userState);
        }
    }
}
